var searchIndex = {};
searchIndex["breakpad_symbols"] = {"doc":"A library for working with [Google Breakpad][breakpad]'s text-format [symbol files][symbolfiles].","items":[[3,"SymbolFile","breakpad_symbols","A parsed .sym file containing debug symbols.",null,null],[12,"files","","The set of source files involved in compilation.",0,null],[12,"publics","","Publicly visible symbols.",0,null],[12,"functions","","Functions.",0,null],[12,"cfi_stack_info","","DWARF CFI unwind information.",0,null],[12,"win_stack_framedata_info","","Windows unwind information (frame data).",0,null],[12,"win_stack_fpo_info","","Windows unwind information (FPO data).",0,null],[3,"SimpleModule","","A `Module` implementation that holds arbitrary data.",null,null],[12,"base_address","","",1,null],[12,"size","","",1,null],[12,"code_file","","",1,null],[12,"code_identifier","","",1,null],[12,"debug_file","","",1,null],[12,"debug_id","","",1,null],[12,"version","","",1,null],[3,"SimpleSymbolSupplier","","An implementation of `SymbolSupplier` that loads Breakpad text-format symbols from local disk paths.",null,null],[3,"SimpleFrame","","A simple implementation of `FrameSymbolizer` that just holds data.",null,null],[12,"instruction","","The program counter value for this frame.",2,null],[12,"function","","The name of the function in which the current instruction is executing.",2,null],[12,"function_base","","The offset of the start of `function` from the module base.",2,null],[12,"source_file","","The name of the source file in which the current instruction is executing.",2,null],[12,"source_line","","The 1-based index of the line number in `source_file` in which the current instruction is executing.",2,null],[12,"source_line_base","","The offset of the start of `source_line` from the function base.",2,null],[3,"Symbolizer","","Symbolicate stack frames.",null,null],[4,"SymbolResult","","Possible results of locating symbols.",null,null],[13,"Ok","","Symbols loaded successfully.",3,null],[13,"NotFound","","Symbol file could not be found.",3,null],[13,"LoadError","","Error loading symbol file.",3,null],[5,"relative_symbol_path","","Get a relative symbol path at which to locate symbols for `module`.",null,{"inputs":[{"name":"module"},{"name":"str"}],"output":{"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"symbolfile"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"symbolfile"}],"output":{"name":"bool"}}],[11,"from_file","","Parse a `SymbolFile` from `path`.",0,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"from_bytes","","Parse an in-memory `SymbolFile` from `bytes`.",0,null],[11,"fill_symbol","","Fill in as much source information for `frame` as possible.",0,{"inputs":[{"name":"self"},{"name":"module"},{"name":"framesymbolizer"}],"output":null}],[11,"find_nearest_public","","Find the nearest `PublicSymbol` whose address is less than or equal to `addr`.",0,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"option"}}],[8,"Module","","An executable or shared library loaded in a process.",null,null],[10,"base_address","","The base address of this code module as it was loaded by the process.",4,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[10,"size","","The size of the code module.",4,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[10,"code_file","","The path or file name that the code module was loaded from.",4,{"inputs":[{"name":"self"}],"output":{"name":"cow"}}],[10,"code_identifier","","An identifying string used to discriminate between multiple versions and builds of the same code module.  This may contain a uuid, timestamp, version number, or any combination of this or other information, in an implementation-defined format.",4,{"inputs":[{"name":"self"}],"output":{"name":"cow"}}],[10,"debug_file","","The filename containing debugging information associated with the code module.  If debugging information is stored in a file separate from the code module itself (as is the case when .pdb or .dSYM files are used), this will be different from code_file.  If debugging information is stored in the code module itself (possibly prior to stripping), this will be the same as code_file.",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"debug_identifier","","An identifying string similar to code_identifier, but identifies a specific version and build of the associated debug file.  This may be the same as code_identifier when the debug_file and code_file are identical or when the same identifier is used to identify distinct debug and code files.",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"version","","A human-readable representation of the code module's version.",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"SymbolSupplier","","A trait for things that can locate symbols for a given module.",null,null],[10,"locate_symbols","","Locate and load a symbol file for `module`.",5,{"inputs":[{"name":"self"},{"name":"module"}],"output":{"name":"symbolresult"}}],[8,"FrameSymbolizer","","A trait for setting symbol information on something like a stack frame.",null,null],[10,"get_instruction","","Get the program counter value for this frame.",6,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[10,"set_function","","Set the name and base address of the function in which this frame is executing.",6,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u64"}],"output":null}],[10,"set_source_file","","Set the source file and (1-based) line number this frame represents.",6,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"u64"}],"output":null}],[11,"default","","",1,{"inputs":[],"output":{"name":"simplemodule"}}],[11,"new","","Create a `SimpleModule` with the given `debug_file` and `debug_id`.",1,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"simplemodule"}}],[11,"base_address","","",1,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"size","","",1,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"code_file","","",1,{"inputs":[{"name":"self"}],"output":{"name":"cow"}}],[11,"code_identifier","","",1,{"inputs":[{"name":"self"}],"output":{"name":"cow"}}],[11,"debug_file","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"debug_identifier","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"version","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"symbolresult"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"symbolresult"}],"output":{"name":"bool"}}],[11,"new","","Instantiate a new `SimpleSymbolSupplier` that will search in `paths`.",7,{"inputs":[{"name":"vec"}],"output":{"name":"simplesymbolsupplier"}}],[11,"locate_symbols","","",7,{"inputs":[{"name":"self"},{"name":"module"}],"output":{"name":"symbolresult"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"simpleframe"}}],[11,"with_instruction","","Instantiate a `SimpleFrame` with instruction pointer `instruction`.",2,{"inputs":[{"name":"u64"}],"output":{"name":"simpleframe"}}],[11,"get_instruction","","",2,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"set_function","","",2,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u64"}],"output":null}],[11,"set_source_file","","",2,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"u64"}],"output":null}],[11,"new","","Create a `Symbolizer` that uses `supplier` to locate symbols.",8,{"inputs":[{"name":"t"}],"output":{"name":"symbolizer"}}],[11,"get_symbol_at_address","","Helper method for non-minidump-using callers.",8,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"u64"}],"output":{"name":"option"}}],[11,"fill_symbol","","Fill symbol information in `frame` using the instruction address from `frame`, and the module information from `module`. If you're not using a minidump module, you can use [`SimpleModule`][simplemodule] and [`SimpleFrame`][simpleframe].",8,{"inputs":[{"name":"self"},{"name":"module"},{"name":"framesymbolizer"}],"output":null}]],"paths":[[3,"SymbolFile"],[3,"SimpleModule"],[3,"SimpleFrame"],[4,"SymbolResult"],[8,"Module"],[8,"SymbolSupplier"],[8,"FrameSymbolizer"],[3,"SimpleSymbolSupplier"],[3,"Symbolizer"]]};
searchIndex["chrono"] = {"doc":"Chrono 0.2.25","items":[[3,"Duration","chrono","ISO 8601 time duration with nanosecond precision. This also allows for the negative duration; see individual methods for details.",null,null],[4,"Weekday","","The day of week.",null,null],[13,"Mon","","Monday.",0,null],[13,"Tue","","Tuesday.",0,null],[13,"Wed","","Wednesday.",0,null],[13,"Thu","","Thursday.",0,null],[13,"Fri","","Friday.",0,null],[13,"Sat","","Saturday.",0,null],[13,"Sun","","Sunday.",0,null],[0,"duration","","ISO 8601 duration.",null,null],[3,"Duration","chrono::duration","ISO 8601 time duration with nanosecond precision. This also allows for the negative duration; see individual methods for details.",null,null],[0,"offset","chrono","The time zone, which calculates offsets from the local time to UTC.",null,null],[4,"LocalResult","chrono::offset","The conversion result from the local time to the timezone-aware datetime types.",null,null],[13,"None","","Given local time representation is invalid. This can occur when, for example, the positive timezone transition.",1,null],[13,"Single","","Given local time representation has a single unique result.",1,null],[13,"Ambiguous","","Given local time representation has multiple results and thus ambiguous. This can occur when, for example, the negative timezone transition.",1,null],[0,"utc","","The UTC (Coordinated Universal Time) time zone.",null,null],[3,"UTC","chrono::offset::utc","The UTC time zone. This is the most efficient time zone when you don't need the local time. It is also used as an offset (which is also a dummy type).",null,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"utc"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"utc"}],"output":{"name":"bool"}}],[11,"today","","Returns a `Date` which corresponds to the current date.",2,{"inputs":[],"output":{"name":"date"}}],[11,"now","","Returns a `DateTime` which corresponds to the current date.",2,{"inputs":[],"output":{"name":"datetime"}}],[11,"from_offset","","",2,{"inputs":[{"name":"utc"}],"output":{"name":"utc"}}],[11,"offset_from_local_date","","",2,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"localresult"}}],[11,"offset_from_local_datetime","","",2,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"localresult"}}],[11,"offset_from_utc_date","","",2,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"utc"}}],[11,"offset_from_utc_datetime","","",2,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"utc"}}],[11,"local_minus_utc","","",2,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"fixed","chrono::offset","The time zone which has a fixed offset from UTC.",null,null],[3,"FixedOffset","chrono::offset::fixed","The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.",null,null],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"fixedoffset"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"fixedoffset"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"fixedoffset"}],"output":{"name":"bool"}}],[11,"east","","Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference. The negative `secs` means the Western Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"fixedoffset"}}],[11,"east_opt","","Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference. The negative `secs` means the Western Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"west","","Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference. The negative `secs` means the Eastern Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"fixedoffset"}}],[11,"west_opt","","Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference. The negative `secs` means the Eastern Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"from_offset","","",3,{"inputs":[{"name":"fixedoffset"}],"output":{"name":"fixedoffset"}}],[11,"offset_from_local_date","","",3,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"localresult"}}],[11,"offset_from_local_datetime","","",3,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"localresult"}}],[11,"offset_from_utc_date","","",3,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"fixedoffset"}}],[11,"offset_from_utc_datetime","","",3,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"fixedoffset"}}],[11,"local_minus_utc","","",3,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"local","chrono::offset","The local (system) time zone.",null,null],[3,"Local","chrono::offset::local","The local timescale. This is implemented via the standard `time` crate.",null,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"local"}}],[11,"today","","Returns a `Date` which corresponds to the current date.",4,{"inputs":[],"output":{"name":"date"}}],[11,"now","","Returns a `DateTime` which corresponds to the current date.",4,{"inputs":[],"output":{"name":"datetime"}}],[11,"from_offset","","",4,{"inputs":[{"name":"fixedoffset"}],"output":{"name":"local"}}],[11,"offset_from_local_date","","",4,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"localresult"}}],[11,"offset_from_local_datetime","","",4,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"localresult"}}],[11,"offset_from_utc_date","","",4,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"fixedoffset"}}],[11,"offset_from_utc_datetime","","",4,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"fixedoffset"}}],[11,"from_local_date","","",4,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"localresult"}}],[11,"from_local_datetime","","",4,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"localresult"}}],[11,"from_utc_date","","",4,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"date"}}],[11,"from_utc_datetime","","",4,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"datetime"}}],[8,"Offset","chrono::offset","The offset from the local time to UTC.",null,null],[10,"local_minus_utc","","Returns the offset from UTC to the local time stored.",5,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[8,"TimeZone","","The time zone.",null,null],[16,"Offset","","An associated offset type. This type is used to store the actual offset in date and time types. The original `TimeZone` value can be recovered via `TimeZone::from_offset`.",6,null],[11,"ymd","","Makes a new `Date` from year, month, day and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"date"}}],[11,"ymd_opt","","Makes a new `Date` from year, month, day and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"localresult"}}],[11,"yo","","Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"u32"}],"output":{"name":"date"}}],[11,"yo_opt","","Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"u32"}],"output":{"name":"localresult"}}],[11,"isoywd","","Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE. The resulting `Date` may have a different year from the input year.",6,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"u32"},{"name":"weekday"}],"output":{"name":"date"}}],[11,"isoywd_opt","","Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE. The resulting `Date` may have a different year from the input year.",6,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"u32"},{"name":"weekday"}],"output":{"name":"localresult"}}],[11,"timestamp","","Makes a new `DateTime` from the number of non-leap seconds since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\") and the number of nanoseconds since the last whole non-leap second.",6,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"u32"}],"output":{"name":"datetime"}}],[11,"timestamp_opt","","Makes a new `DateTime` from the number of non-leap seconds since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\") and the number of nanoseconds since the last whole non-leap second.",6,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"u32"}],"output":{"name":"localresult"}}],[11,"datetime_from_str","","Parses a string with the specified format string and returns a `DateTime` with the current offset. See the `format::strftime` module on the supported escape sequences.",6,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[10,"from_offset","","Reconstructs the time zone from the offset.",6,null],[10,"offset_from_local_date","","Creates the offset(s) for given local `NaiveDate` if possible.",6,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"localresult"}}],[10,"offset_from_local_datetime","","Creates the offset(s) for given local `NaiveDateTime` if possible.",6,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"localresult"}}],[11,"from_local_date","","Converts the local `NaiveDate` to the timezone-aware `Date` if possible.",6,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"localresult"}}],[11,"from_local_datetime","","Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.",6,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"localresult"}}],[10,"offset_from_utc_date","","Creates the offset for given UTC `NaiveDate`. This cannot fail.",6,null],[10,"offset_from_utc_datetime","","Creates the offset for given UTC `NaiveDateTime`. This cannot fail.",6,null],[11,"from_utc_date","","Converts the UTC `NaiveDate` to the local time. The UTC is continuous and thus this cannot fail (but can give the duplicate local time).",6,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"date"}}],[11,"from_utc_datetime","","Converts the UTC `NaiveDateTime` to the local time. The UTC is continuous and thus this cannot fail (but can give the duplicate local time).",6,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"datetime"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"localresult"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"localresult"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"localresult"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"single","","Returns `Some` only when the conversion result is unique, or `None` otherwise.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"earliest","","Returns `Some` for the earliest possible conversion result, or `None` if none.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"latest","","Returns `Some` for the latest possible conversion result, or `None` if none.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"map","","Maps a `LocalResult<T>` into `LocalResult<U>` with given function.",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"localresult"}}],[11,"and_time","","Makes a new `DateTime` from the current date and given `NaiveTime`. The offset in the current date is preserved.",1,{"inputs":[{"name":"self"},{"name":"naivetime"}],"output":{"name":"localresult"}}],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute and second. The offset in the current date is preserved.",1,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"localresult"}}],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond. The millisecond part can exceed 1,000 in order to represent the leap second. The offset in the current date is preserved.",1,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"localresult"}}],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond. The microsecond part can exceed 1,000,000 in order to represent the leap second. The offset in the current date is preserved.",1,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"localresult"}}],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond. The nanosecond part can exceed 1,000,000,000 in order to represent the leap second. The offset in the current date is preserved.",1,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"localresult"}}],[11,"unwrap","","Returns the single unique conversion result, or panics accordingly.",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[0,"naive","chrono","Date and time types which do not concern about the timezones.",null,null],[0,"date","chrono::naive","ISO 8601 calendar date without timezone.",null,null],[3,"NaiveDate","chrono::naive::date","ISO 8601 calendar date without timezone. Allows for every proleptic Gregorian date from Jan 1, 262145 BCE to Dec 31, 262143 CE. Also supports the conversion from ISO 8601 ordinal and week date.",null,null],[17,"MIN","","The minimum possible `NaiveDate` (January 1, 262145 BCE).",null,null],[17,"MAX","","The maximum possible `NaiveDate` (December 31, 262143 CE).",null,null],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"bool"}}],[11,"cmp","","",7,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"ordering"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"naivedate"}}],[11,"from_ymd","","Makes a new `NaiveDate` from the calendar date (year, month and day).",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivedate"}}],[11,"from_ymd_opt","","Makes a new `NaiveDate` from the calendar date (year, month and day).",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_yo","","Makes a new `NaiveDate` from the ordinal date (year and day of the year).",7,{"inputs":[{"name":"i32"},{"name":"u32"}],"output":{"name":"naivedate"}}],[11,"from_yo_opt","","Makes a new `NaiveDate` from the ordinal date (year and day of the year).",7,{"inputs":[{"name":"i32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_isoywd","","Makes a new `NaiveDate` from the ISO week date (year, week number and day of the week). The resulting `NaiveDate` may have a different year from the input year.",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"weekday"}],"output":{"name":"naivedate"}}],[11,"from_isoywd_opt","","Makes a new `NaiveDate` from the ISO week date (year, week number and day of the week). The resulting `NaiveDate` may have a different year from the input year.",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"weekday"}],"output":{"name":"option"}}],[11,"from_num_days_from_ce","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1) in the proleptic Gregorian calendar.",7,{"inputs":[{"name":"i32"}],"output":{"name":"naivedate"}}],[11,"from_num_days_from_ce_opt","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1) in the proleptic Gregorian calendar.",7,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDate`. See the `format::strftime` module on the supported escape sequences.",7,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"and_time","","Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.",7,{"inputs":[{"name":"self"},{"name":"naivetime"}],"output":{"name":"naivedatetime"}}],[11,"and_hms","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",7,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"and_hms_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",7,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"and_hms_milli","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.",7,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"and_hms_milli_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.",7,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"and_hms_micro","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.",7,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"and_hms_micro_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.",7,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"and_hms_nano","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.",7,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"and_hms_nano_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.",7,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"succ","","Makes a new `NaiveDate` for the next calendar date.",7,{"inputs":[{"name":"self"}],"output":{"name":"naivedate"}}],[11,"succ_opt","","Makes a new `NaiveDate` for the next calendar date.",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"pred","","Makes a new `NaiveDate` for the previous calendar date.",7,{"inputs":[{"name":"self"}],"output":{"name":"naivedate"}}],[11,"pred_opt","","Makes a new `NaiveDate` for the previous calendar date.",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"checked_add","","Adds the `days` part of given `Duration` to the current date.",7,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtracts the `days` part of given `Duration` from the current date.",7,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[11,"format_with_items","","Formats the date with the specified formatting items. Otherwise it is same to the ordinary `format` method.",7,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"format","","Formats the date with the specified format string. See the `format::strftime` module on the supported escape sequences.",7,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"delayedformat"}}],[11,"year","","Returns the year number in the calendar date.",7,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"month","","Returns the month number starting from 1.",7,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"month0","","Returns the month number starting from 0.",7,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"day","","Returns the day of month starting from 1.",7,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"day0","","Returns the day of month starting from 0.",7,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"ordinal","","Returns the day of year starting from 1.",7,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"ordinal0","","Returns the day of year starting from 0.",7,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"weekday","","Returns the day of week.",7,{"inputs":[{"name":"self"}],"output":{"name":"weekday"}}],[11,"isoweekdate","","",7,null],[11,"with_year","","Makes a new `NaiveDate` with the year number changed.",7,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[11,"with_month","","Makes a new `NaiveDate` with the month number (starting from 1) changed.",7,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_month0","","Makes a new `NaiveDate` with the month number (starting from 0) changed.",7,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_day","","Makes a new `NaiveDate` with the day of month (starting from 1) changed.",7,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_day0","","Makes a new `NaiveDate` with the day of month (starting from 0) changed.",7,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_ordinal","","Makes a new `NaiveDate` with the day of year (starting from 1) changed.",7,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_ordinal0","","Makes a new `NaiveDate` with the day of year (starting from 0) changed.",7,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"hash","","",7,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"add","","",7,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"naivedate"}}],[11,"sub","","",7,{"inputs":[{"name":"self"},{"name":"naivedate"}],"output":{"name":"duration"}}],[11,"sub","","",7,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"naivedate"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",7,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"time","chrono::naive","ISO 8601 time without timezone.",null,null],[3,"NaiveTime","chrono::naive::time","ISO 8601 time without timezone. Allows for the nanosecond precision and optional leap second representation.",null,null],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"naivetime"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"naivetime"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"self"},{"name":"naivetime"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"self"},{"name":"naivetime"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"self"},{"name":"naivetime"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"self"},{"name":"naivetime"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"self"},{"name":"naivetime"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"self"},{"name":"naivetime"}],"output":{"name":"ordering"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"naivetime"}}],[11,"from_hms","","Makes a new `NaiveTime` from hour, minute and second.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_opt","","Makes a new `NaiveTime` from hour, minute and second.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_hms_milli","","Makes a new `NaiveTime` from hour, minute, second and millisecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_milli_opt","","Makes a new `NaiveTime` from hour, minute, second and millisecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_hms_micro","","Makes a new `NaiveTime` from hour, minute, second and microsecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_micro_opt","","Makes a new `NaiveTime` from hour, minute, second and microsecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_hms_nano","","Makes a new `NaiveTime` from hour, minute, second and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_nano_opt","","Makes a new `NaiveTime` from hour, minute, second and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_num_seconds_from_midnight","","Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_num_seconds_from_midnight_opt","","Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveTime`. See the `format::strftime` module on the supported escape sequences.",8,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"format_with_items","","Formats the time with the specified formatting items. Otherwise it is same to the ordinary `format` method.",8,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"format","","Formats the time with the specified format string. See the `format::strftime` module on the supported escape sequences.",8,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"delayedformat"}}],[11,"hour","","Returns the hour number from 0 to 23.",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"minute","","Returns the minute number from 0 to 59.",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"second","","Returns the second number from 0 to 59.",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second. The range from 1,000,000,000 to 1,999,999,999 represents the leap second.",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"with_hour","","Makes a new `NaiveTime` with the hour number changed.",8,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_minute","","Makes a new `NaiveTime` with the minute number changed.",8,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_second","","Makes a new `NaiveTime` with the second number changed.",8,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_nanosecond","","Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.",8,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last midnight.",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"hash","","",8,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"add","","",8,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"naivetime"}}],[11,"sub","","",8,{"inputs":[{"name":"self"},{"name":"naivetime"}],"output":{"name":"duration"}}],[11,"sub","","",8,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"naivetime"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",8,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"datetime","chrono::naive","ISO 8601 date and time without timezone.",null,null],[3,"NaiveDateTime","chrono::naive::datetime","ISO 8601 combined date and time without timezone.",null,null],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"bool"}}],[11,"cmp","","",9,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"ordering"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"naivedatetime"}}],[11,"new","","Makes a new `NaiveDateTime` from date and time components. Equivalent to `date.and_time(time)` and many other helper constructors on `NaiveDate`.",9,{"inputs":[{"name":"naivedate"},{"name":"naivetime"}],"output":{"name":"naivedatetime"}}],[11,"from_timestamp","","Makes a new `NaiveDateTime` from the number of non-leap seconds since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\") and the number of nanoseconds since the last whole non-leap second.",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"from_timestamp_opt","","Makes a new `NaiveDateTime` from the number of non-leap seconds since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\") and the number of nanoseconds since the last whole non-leap second.",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_num_seconds_from_unix_epoch","","Deprecated: Same to `NaiveDateTime::from_timestamp`.",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"from_num_seconds_from_unix_epoch_opt","","Deprecated: Same to `NaiveDateTime::from_timestamp_opt`.",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDateTime`. See the `format::strftime` module on the supported escape sequences.",9,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"date","","Retrieves a date component.",9,{"inputs":[{"name":"self"}],"output":{"name":"naivedate"}}],[11,"time","","Retrieves a time component.",9,{"inputs":[{"name":"self"}],"output":{"name":"naivetime"}}],[11,"timestamp","","Returns the number of non-leap seconds since the midnight on January 1, 1970.",9,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last whole non-leap second.",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last whole non-leap second.",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last whole non-leap second.",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"num_seconds_from_unix_epoch","","Deprecated: Same to `NaiveDateTime::timestamp`.",9,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"checked_add","","Adds given `Duration` to the current date and time.",9,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtracts given `Duration` from the current date and time.",9,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[11,"format_with_items","","Formats the combined date and time with the specified formatting items.",9,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"format","","Formats the combined date and time with the specified format string. See the `format::strftime` module on the supported escape sequences.",9,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"delayedformat"}}],[11,"year","","Returns the year number in the calendar date.",9,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"month","","Returns the month number starting from 1.",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"month0","","Returns the month number starting from 0.",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"day","","Returns the day of month starting from 1.",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"day0","","Returns the day of month starting from 0.",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"ordinal","","Returns the day of year starting from 1.",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"ordinal0","","Returns the day of year starting from 0.",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"weekday","","Returns the day of week.",9,{"inputs":[{"name":"self"}],"output":{"name":"weekday"}}],[11,"isoweekdate","","",9,null],[11,"with_year","","Makes a new `NaiveDateTime` with the year number changed.",9,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[11,"with_month","","Makes a new `NaiveDateTime` with the month number (starting from 1) changed.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_month0","","Makes a new `NaiveDateTime` with the month number (starting from 0) changed.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_day","","Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_day0","","Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_ordinal","","Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_ordinal0","","Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"hour","","Returns the hour number from 0 to 23.",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"minute","","Returns the minute number from 0 to 59.",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"second","","Returns the second number from 0 to 59.",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second. The range from 1,000,000,000 to 1,999,999,999 represents the leap second.",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"with_hour","","Makes a new `NaiveDateTime` with the hour number changed.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_minute","","Makes a new `NaiveDateTime` with the minute number changed.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_second","","Makes a new `NaiveDateTime` with the second number changed.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_nanosecond","","Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"hash","","",9,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"add","","",9,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"naivedatetime"}}],[11,"sub","","",9,{"inputs":[{"name":"self"},{"name":"naivedatetime"}],"output":{"name":"duration"}}],[11,"sub","","",9,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"naivedatetime"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"date","chrono","ISO 8601 calendar date with time zone.",null,null],[3,"Date","chrono::date","ISO 8601 calendar date with time zone.",null,null],[17,"MIN","","The minimum possible `Date`.",null,null],[17,"MAX","","The maximum possible `Date`.",null,null],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"date"}}],[11,"from_utc","","Makes a new `Date` with given UTC date and offset. The local date should be constructed via the `TimeZone` trait.",10,null],[11,"and_time","","Makes a new `DateTime` from the current date and given `NaiveTime`. The offset in the current date is preserved.",10,{"inputs":[{"name":"self"},{"name":"naivetime"}],"output":{"name":"option"}}],[11,"and_hms","","Makes a new `DateTime` from the current date, hour, minute and second. The offset in the current date is preserved.",10,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"datetime"}}],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute and second. The offset in the current date is preserved.",10,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"and_hms_milli","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond. The millisecond part can exceed 1,000 in order to represent the leap second. The offset in the current date is preserved.",10,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"datetime"}}],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond. The millisecond part can exceed 1,000 in order to represent the leap second. The offset in the current date is preserved.",10,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"and_hms_micro","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond. The microsecond part can exceed 1,000,000 in order to represent the leap second. The offset in the current date is preserved.",10,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"datetime"}}],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond. The microsecond part can exceed 1,000,000 in order to represent the leap second. The offset in the current date is preserved.",10,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"and_hms_nano","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond. The nanosecond part can exceed 1,000,000,000 in order to represent the leap second. The offset in the current date is preserved.",10,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"datetime"}}],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond. The nanosecond part can exceed 1,000,000,000 in order to represent the leap second. The offset in the current date is preserved.",10,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"succ","","Makes a new `Date` for the next date.",10,{"inputs":[{"name":"self"}],"output":{"name":"date"}}],[11,"succ_opt","","Makes a new `Date` for the next date.",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"pred","","Makes a new `Date` for the prior date.",10,{"inputs":[{"name":"self"}],"output":{"name":"date"}}],[11,"pred_opt","","Makes a new `Date` for the prior date.",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"offset","","Retrieves an associated offset from UTC.",10,null],[11,"timezone","","Retrieves an associated time zone.",10,{"inputs":[{"name":"self"}],"output":{"name":"tz"}}],[11,"with_timezone","","Changes the associated time zone. This does not change the actual `Date` (but will change the string representation).",10,{"inputs":[{"name":"self"},{"name":"tz2"}],"output":{"name":"date"}}],[11,"checked_add","","Adds given `Duration` to the current date.",10,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtracts given `Duration` from the current date.",10,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[11,"naive_utc","","Returns a view to the naive UTC date.",10,{"inputs":[{"name":"self"}],"output":{"name":"naivedate"}}],[11,"naive_local","","Returns a view to the naive local date.",10,{"inputs":[{"name":"self"}],"output":{"name":"naivedate"}}],[11,"format_with_items","","Formats the date with the specified formatting items.",10,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"format","","Formats the date with the specified format string. See the `format::strftime` module on the supported escape sequences.",10,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"delayedformat"}}],[11,"year","","",10,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"month","","",10,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"month0","","",10,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"day","","",10,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"day0","","",10,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"ordinal","","",10,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"ordinal0","","",10,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"weekday","","",10,{"inputs":[{"name":"self"}],"output":{"name":"weekday"}}],[11,"isoweekdate","","",10,null],[11,"with_year","","",10,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[11,"with_month","","",10,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_month0","","",10,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_day","","",10,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_day0","","",10,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_ordinal","","",10,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_ordinal0","","",10,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"date"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"self"},{"name":"date"}],"output":{"name":"option"}}],[11,"cmp","","",10,{"inputs":[{"name":"self"},{"name":"date"}],"output":{"name":"ordering"}}],[11,"hash","","",10,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"add","","",10,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"date"}}],[11,"sub","","",10,{"inputs":[{"name":"self"},{"name":"date"}],"output":{"name":"duration"}}],[11,"sub","","",10,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"date"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"datetime","chrono","ISO 8601 date and time with time zone.",null,null],[3,"DateTime","chrono::datetime","ISO 8601 combined date and time with time zone.",null,null],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"datetime"}}],[11,"from_utc","","Makes a new `DateTime` with given UTC datetime and offset. The local datetime should be constructed via the `TimeZone` trait.",11,null],[11,"date","","Retrieves a date component.",11,{"inputs":[{"name":"self"}],"output":{"name":"date"}}],[11,"time","","Retrieves a time component. Unlike `date`, this is not associated to the time zone.",11,{"inputs":[{"name":"self"}],"output":{"name":"naivetime"}}],[11,"timestamp","","Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").",11,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last second boundary",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last second boundary",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last second boundary",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"num_seconds_from_unix_epoch","","Deprecated: Same to `DateTime::timestamp`.",11,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"offset","","Retrieves an associated offset from UTC.",11,null],[11,"timezone","","Retrieves an associated time zone.",11,{"inputs":[{"name":"self"}],"output":{"name":"tz"}}],[11,"with_timezone","","Changes the associated time zone. This does not change the actual `DateTime` (but will change the string representation).",11,{"inputs":[{"name":"self"},{"name":"tz2"}],"output":{"name":"datetime"}}],[11,"checked_add","","Adds given `Duration` to the current date and time.",11,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtracts given `Duration` from the current date and time.",11,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[11,"naive_utc","","Returns a view to the naive UTC datetime.",11,{"inputs":[{"name":"self"}],"output":{"name":"naivedatetime"}}],[11,"naive_local","","Returns a view to the naive local datetime.",11,{"inputs":[{"name":"self"}],"output":{"name":"naivedatetime"}}],[11,"parse_from_rfc2822","","Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`, then returns a new `DateTime` with a parsed `FixedOffset`.",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"parse_from_rfc3339","","Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`, then returns a new `DateTime` with a parsed `FixedOffset`.",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `DateTime` with a parsed `FixedOffset`. See the `format::strftime` module on the supported escape sequences.",11,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"to_rfc2822","","Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.",11,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"to_rfc3339","","Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.",11,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"format_with_items","","Formats the combined date and time with the specified formatting items.",11,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"format","","Formats the combined date and time with the specified format string. See the `format::strftime` module on the supported escape sequences.",11,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"delayedformat"}}],[11,"year","","",11,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"month","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"month0","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"day","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"day0","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"ordinal","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"ordinal0","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"weekday","","",11,{"inputs":[{"name":"self"}],"output":{"name":"weekday"}}],[11,"isoweekdate","","",11,null],[11,"with_year","","",11,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[11,"with_month","","",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_month0","","",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_day","","",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_day0","","",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_ordinal","","",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_ordinal0","","",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"hour","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"minute","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"second","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"nanosecond","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"with_hour","","",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_minute","","",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_second","","",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_nanosecond","","",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"datetime"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"self"},{"name":"datetime"}],"output":{"name":"option"}}],[11,"cmp","","",11,{"inputs":[{"name":"self"},{"name":"datetime"}],"output":{"name":"ordering"}}],[11,"hash","","",11,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"add","","",11,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"datetime"}}],[11,"sub","","",11,{"inputs":[{"name":"self"},{"name":"datetime"}],"output":{"name":"duration"}}],[11,"sub","","",11,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"datetime"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"format","chrono","Formatting utilities for date and time.",null,null],[3,"ParseError","chrono::format","An error from the `parse` function.",null,null],[3,"DelayedFormat","","A temporary object which can be used as an argument to `format!` or others. This is normally constructed via `format` methods of each date and time type.",null,null],[4,"Pad","","Padding characters for numeric items.",null,null],[13,"None","","No padding.",12,null],[13,"Zero","","Zero (`0`) padding.",12,null],[13,"Space","","Space padding.",12,null],[4,"Numeric","","Numeric item types. They have associated formatting width (FW) and parsing width (PW).",null,null],[13,"Year","","Full Gregorian year (FW=4, PW=∞). May accept years before 1 BCE or after 9999 CE, given an initial sign.",13,null],[13,"YearDiv100","","Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.",13,null],[13,"YearMod100","","Gregorian year modulo 100 (FW=PW=2). Cannot be negative.",13,null],[13,"IsoYear","","Year in the ISO week date (FW=4, PW=∞). May accept years before 1 BCE or after 9999 CE, given an initial sign.",13,null],[13,"IsoYearDiv100","","Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.",13,null],[13,"IsoYearMod100","","Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.",13,null],[13,"Month","","Month (FW=PW=2).",13,null],[13,"Day","","Day of the month (FW=PW=2).",13,null],[13,"WeekFromSun","","Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).",13,null],[13,"WeekFromMon","","Week number, where the week 1 starts at the first Monday of January (FW=PW=2).",13,null],[13,"IsoWeek","","Week number in the ISO week date (FW=PW=2).",13,null],[13,"NumDaysFromSun","","Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).",13,null],[13,"WeekdayFromMon","","Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).",13,null],[13,"Ordinal","","Day of the year (FW=PW=3).",13,null],[13,"Hour","","Hour number in the 24-hour clocks (FW=PW=2).",13,null],[13,"Hour12","","Hour number in the 12-hour clocks (FW=PW=2).",13,null],[13,"Minute","","The number of minutes since the last whole hour (FW=PW=2).",13,null],[13,"Second","","The number of seconds since the last whole minute (FW=PW=2).",13,null],[13,"Nanosecond","","The number of nanoseconds since the last whole second (FW=PW=9). Note that this is not left-aligned; see also `Fixed::Nanosecond`.",13,null],[13,"Timestamp","","The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞). For formatting, it assumes UTC upon the absence of time zone offset.",13,null],[4,"Fixed","","Fixed-format item types.",null,null],[13,"ShortMonthName","","Abbreviated month names.",14,null],[13,"LongMonthName","","Full month names.",14,null],[13,"ShortWeekdayName","","Abbreviated day of the week names.",14,null],[13,"LongWeekdayName","","Full day of the week names.",14,null],[13,"LowerAmPm","","AM/PM.",14,null],[13,"UpperAmPm","","AM/PM.",14,null],[13,"Nanosecond","","An optional dot plus one or more digits for left-aligned nanoseconds. May print nothing, 3, 6 or 9 digits according to the available accuracy. See also `Numeric::Nanosecond`.",14,null],[13,"Nanosecond3","","Same to `Nanosecond` but the accuracy is fixed to 3.",14,null],[13,"Nanosecond6","","Same to `Nanosecond` but the accuracy is fixed to 6.",14,null],[13,"Nanosecond9","","Same to `Nanosecond` but the accuracy is fixed to 9.",14,null],[13,"TimezoneName","","Timezone name.",14,null],[13,"TimezoneOffsetColon","","Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).",14,null],[13,"TimezoneOffsetColonZ","","Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).",14,null],[13,"TimezoneOffset","","Same to `TimezoneOffsetColon` but prints no colon. Parsing allows an optional colon.",14,null],[13,"TimezoneOffsetZ","","Same to `TimezoneOffsetColonZ` but prints no colon. Parsing allows an optional colon.",14,null],[13,"RFC2822","","RFC 2822 date and time syntax. Commonly used for email and MIME date and time.",14,null],[13,"RFC3339","","RFC 3339 & ISO 8601 date and time syntax.",14,null],[4,"Item","","A single formatting item. This is used for both formatting and parsing.",null,null],[13,"Literal","","A literally printed and parsed text.",15,null],[13,"Space","","Whitespace. Prints literally but reads zero or more whitespace.",15,null],[13,"Numeric","","Numeric item. Can be optionally padded to the maximal length (if any) when formatting; the parser simply ignores any padded whitespace and zeroes.",15,null],[13,"Fixed","","Fixed-format item.",15,null],[13,"Error","","Issues a formatting error. Used to signal an invalid format string.",15,null],[5,"parse","","Tries to parse given string into `parsed` with given formatting items. Returns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used). There should be no trailing string after parsing; use a stray `Item::Space` to trim whitespaces.",null,{"inputs":[{"name":"parsed"},{"name":"str"},{"name":"i"}],"output":{"name":"parseresult"}}],[5,"format","","Tries to format given arguments with given formatting items. Internally used by `DelayedFormat`.",null,{"inputs":[{"name":"formatter"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"i"}],"output":{"name":"result"}}],[0,"parsed","","A collection of parsed date and time items. They can be constructed incrementally while being checked for consistency.",null,null],[3,"Parsed","chrono::format::parsed","Parsed parts of date and time. There are two classes of methods:",null,null],[12,"year","","Year.",16,null],[12,"year_div_100","","Year divided by 100. Implies that the year is >= 1 BCE when set.",16,null],[12,"year_mod_100","","Year modulo 100. Implies that the year is >= 1 BCE when set.",16,null],[12,"isoyear","","Year in the ISO week date.",16,null],[12,"isoyear_div_100","","Year in the ISO week date, divided by 100. Implies that the year is >= 1 BCE when set.",16,null],[12,"isoyear_mod_100","","Year in the ISO week date, modulo 100. Implies that the year is >= 1 BCE when set.",16,null],[12,"month","","Month (1--12).",16,null],[12,"week_from_sun","","Week number, where the week 1 starts at the first Sunday of January (0--53, 1--53 or 1--52 depending on the year).",16,null],[12,"week_from_mon","","Week number, where the week 1 starts at the first Monday of January (0--53, 1--53 or 1--52 depending on the year).",16,null],[12,"isoweek","","ISO week number (1--52 or 1--53 depending on the year).",16,null],[12,"weekday","","Day of the week.",16,null],[12,"ordinal","","Day of the year (1--365 or 1--366 depending on the year).",16,null],[12,"day","","Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).",16,null],[12,"hour_div_12","","Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.",16,null],[12,"hour_mod_12","","Hour number modulo 12 (0--11).",16,null],[12,"minute","","Minute number (0--59).",16,null],[12,"second","","Second number (0--60, accounting for leap seconds).",16,null],[12,"nanosecond","","The number of nanoseconds since the whole second (0--999,999,999).",16,null],[12,"timestamp","","The number of non-leap seconds since the midnight UTC on January 1, 1970.",16,null],[12,"offset","","Offset from the local time to UTC, in seconds.",16,null],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"parsed"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"parsed"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"parsed"}],"output":{"name":"bool"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns the initial value of parsed parts.",16,{"inputs":[],"output":{"name":"parsed"}}],[11,"set_year","","Tries to set the `year` field from given value.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_year_div_100","","Tries to set the `year_div_100` field from given value.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_year_mod_100","","Tries to set the `year_mod_100` field from given value.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_isoyear","","Tries to set the `isoyear` field from given value.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_isoyear_div_100","","Tries to set the `isoyear_div_100` field from given value.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_isoyear_mod_100","","Tries to set the `isoyear_mod_100` field from given value.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_month","","Tries to set the `month` field from given value.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_week_from_sun","","Tries to set the `week_from_sun` field from given value.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_week_from_mon","","Tries to set the `week_from_mon` field from given value.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_isoweek","","Tries to set the `isoweek` field from given value.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_weekday","","Tries to set the `weekday` field from given value.",16,{"inputs":[{"name":"self"},{"name":"weekday"}],"output":{"name":"parseresult"}}],[11,"set_ordinal","","Tries to set the `ordinal` field from given value.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_day","","Tries to set the `day` field from given value.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_ampm","","Tries to set the `hour_div_12` field from given value. (`false` for AM, `true` for PM)",16,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"parseresult"}}],[11,"set_hour12","","Tries to set the `hour_mod_12` field from given hour number in 12-hour clocks.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_hour","","Tries to set both `hour_div_12` and `hour_mod_12` fields from given value.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_minute","","Tries to set the `minute` field from given value.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_second","","Tries to set the `second` field from given value.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_nanosecond","","Tries to set the `nanosecond` field from given value.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_timestamp","","Tries to set the `timestamp` field from given value.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_offset","","Tries to set the `offset` field from given value.",16,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"to_naive_date","","Returns a parsed naive date out of given fields.",16,{"inputs":[{"name":"self"}],"output":{"name":"parseresult"}}],[11,"to_naive_time","","Returns a parsed naive time out of given fields.",16,{"inputs":[{"name":"self"}],"output":{"name":"parseresult"}}],[11,"to_naive_datetime_with_offset","","Returns a parsed naive date and time out of given fields, except for the `offset` field (assumed to have a given value). This is required for parsing a local time or other known-timezone inputs.",16,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"parseresult"}}],[11,"to_fixed_offset","","Returns a parsed fixed time zone offset out of given fields.",16,{"inputs":[{"name":"self"}],"output":{"name":"parseresult"}}],[11,"to_datetime","","Returns a parsed timezone-aware date and time out of given fields.",16,{"inputs":[{"name":"self"}],"output":{"name":"parseresult"}}],[11,"to_datetime_with_timezone","","Returns a parsed timezone-aware date and time out of given fields, with an additional `TimeZone` used to interpret and validate the local date.",16,{"inputs":[{"name":"self"},{"name":"tz"}],"output":{"name":"parseresult"}}],[0,"strftime","chrono::format","`strftime`/`strptime`-inspired date and time formatting syntax.",null,null],[3,"StrftimeItems","chrono::format::strftime","Parsing iterator for `strftime`-like format strings.",null,null],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"strftimeitems"}}],[11,"new","","Creates a new parsing iterator from the `strftime`-like format string.",17,{"inputs":[{"name":"str"}],"output":{"name":"strftimeitems"}}],[11,"next","","",17,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[6,"ParseResult","chrono::format","Same to `Result<T, ParseError>`.",null,null],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"pad"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"pad"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"numeric"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"numeric"}],"output":{"name":"bool"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"fixed"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"fixed"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"item"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"item"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"item"}],"output":{"name":"bool"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"parseerror"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",18,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Makes a new `DelayedFormat` value out of local date and time.",19,{"inputs":[{"name":"option"},{"name":"option"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"new_with_offset","","Makes a new `DelayedFormat` value out of local date and time and UTC offset.",19,{"inputs":[{"name":"option"},{"name":"option"},{"name":"off"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Datelike","chrono","The common set of methods for date component.",null,null],[10,"year","","Returns the year number in the calendar date.",20,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"year_ce","","Returns the absolute year number starting from 1 with a boolean flag, which is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).",20,null],[10,"month","","Returns the month number starting from 1.",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"month0","","Returns the month number starting from 0.",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"day","","Returns the day of month starting from 1.",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"day0","","Returns the day of month starting from 0.",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"ordinal","","Returns the day of year starting from 1.",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"ordinal0","","Returns the day of year starting from 0.",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"weekday","","Returns the day of week.",20,{"inputs":[{"name":"self"}],"output":{"name":"weekday"}}],[10,"isoweekdate","","Returns the ISO week date: an adjusted year, week number and day of week. The adjusted year may differ from that of the calendar date.",20,null],[10,"with_year","","Makes a new value with the year number changed.",20,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"with_month","","Makes a new value with the month number (starting from 1) changed.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[10,"with_month0","","Makes a new value with the month number (starting from 0) changed.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[10,"with_day","","Makes a new value with the day of month (starting from 1) changed.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[10,"with_day0","","Makes a new value with the day of month (starting from 0) changed.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[10,"with_ordinal","","Makes a new value with the day of year (starting from 1) changed.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[10,"with_ordinal0","","Makes a new value with the day of year (starting from 0) changed.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"num_days_from_ce","","Returns the number of days since January 1, 1 (Day 1) in the proleptic Gregorian calendar.",20,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[8,"Timelike","","The common set of methods for time component.",null,null],[10,"hour","","Returns the hour number from 0 to 23.",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"hour12","","Returns the hour number from 1 to 12 with a boolean flag, which is false for AM and true for PM.",21,null],[10,"minute","","Returns the minute number from 0 to 59.",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"second","","Returns the second number from 0 to 59.",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second. The range from 1,000,000,000 to 1,999,999,999 represents the leap second.",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"with_hour","","Makes a new value with the hour number changed.",21,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[10,"with_minute","","Makes a new value with the minute number changed.",21,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[10,"with_second","","Makes a new value with the second number changed.",21,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[10,"with_nanosecond","","Makes a new value with nanoseconds since the whole non-leap second changed.",21,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last midnight.",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"weekday"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"weekday"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"succ","","The next day in the week.",0,{"inputs":[{"name":"self"}],"output":{"name":"weekday"}}],[11,"pred","","The previous day in the week.",0,{"inputs":[{"name":"self"}],"output":{"name":"weekday"}}],[11,"number_from_monday","","Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)",0,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"number_from_sunday","","Returns a day-of-week number starting from Sunday = 1.",0,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"num_days_from_monday","","Returns a day-of-week number starting from Monday = 0.",0,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"num_days_from_sunday","","Returns a day-of-week number starting from Sunday = 0.",0,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_i64","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"weeks","chrono::duration","Makes a new `Duration` with given number of weeks. Equivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days. Equivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours. Equivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes. Equivalent to `Duration::seconds(minutes * 60)` with overflow checks. Panics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds. Panics when the duration is more than `i64::MAX` milliseconds or less than `i64::MIN` milliseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the closure.",22,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",22,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",22,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",22,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",22,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",22,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",22,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration, or `None` on overflow (exceeding 2^63 microseconds in either direction).",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration, or `None` on overflow (exceeding 2^63 nanoseconds in either direction).",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",22,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",22,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",22,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",22,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",22,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",22,{"inputs":[{"name":"duration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",22,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"add","","",22,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"neg","","",22,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[11,"mul","","",22,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"sub","","",22,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[11,"partial_cmp","","",22,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",22,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",22,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",22,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",22,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"div","","",22,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"cmp","","",22,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[4,"Weekday"],[4,"LocalResult"],[3,"UTC"],[3,"FixedOffset"],[3,"Local"],[8,"Offset"],[8,"TimeZone"],[3,"NaiveDate"],[3,"NaiveTime"],[3,"NaiveDateTime"],[3,"Date"],[3,"DateTime"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[4,"Item"],[3,"Parsed"],[3,"StrftimeItems"],[3,"ParseError"],[3,"DelayedFormat"],[8,"Datelike"],[8,"Timelike"],[3,"Duration"]]};
searchIndex["encoding"] = {"doc":"Encoding 0.2.33","items":[[0,"types","encoding","Interface to the character encoding.",null,null],[3,"CodecError","encoding::types","Error information from either encoder or decoder.",null,null],[12,"upto","","The byte position of the first remaining byte, with respect to the current input. For the `finish` call, this should be no more than zero (since there is no input). It can be negative if the remaining byte is in the prior inputs, as long as the remaining byte is not yet processed. The caller should feed the bytes starting from this point again in order to continue encoding or decoding after an error.",0,null],[12,"cause","","A human-readable cause of the error.",0,null],[4,"DecoderTrap","","Trap, which handles decoder errors.",null,null],[13,"Strict","","Immediately fails on errors. Corresponds to WHATWG \"fatal\" error algorithm.",1,null],[13,"Replace","","Replaces an error with a U+FFFD (decoder). Corresponds to WHATWG \"replacement\" error algorithm.",1,null],[13,"Ignore","","Silently ignores an error, effectively replacing it with an empty sequence.",1,null],[13,"Call","","Calls given function to handle decoder errors. The function is given the current decoder, input and output writer, and should return true only when it is fine to keep going.",1,null],[4,"EncoderTrap","","",null,null],[13,"Strict","","Immediately fails on errors. Corresponds to WHATWG \"fatal\" error algorithm.",2,null],[13,"Replace","","Replaces an error with `?` in given encoding. Note that this fails when `?` cannot be represented in given encoding. Corresponds to WHATWG \"URL\" error algorithms.",2,null],[13,"Ignore","","Silently ignores an error, effectively replacing it with an empty sequence.",2,null],[13,"NcrEscape","","Replaces an error with XML numeric character references (e.g. `&#1234;`). The encoder trap fails when NCRs cannot be represented in given encoding. Corresponds to WHATWG \"\" error algorithms.",2,null],[13,"Call","","Calls given function to handle encoder errors. The function is given the current encoder, input and output writer, and should return true only when it is fine to keep going.",2,null],[5,"decode","","Determine the encoding by looking for a Byte Order Mark (BOM) and decoded a single string in memory. Return the result and the used encoding.",null,null],[6,"EncodingRef","","A trait object using dynamic dispatch which is a sendable reference to the encoding, for code where the encoding is not known at compile-time.",null,null],[6,"EncoderTrapFunc","","A type of the bare function in `EncoderTrap` values.",null,null],[6,"DecoderTrapFunc","","A type of the bare function in `DecoderTrap` values.",null,null],[8,"ByteWriter","","Byte writer used by encoders. In most cases this will be an owned vector of `u8`.",null,null],[11,"writer_hint","","Hints an expected lower bound on the length (in bytes) of the output until the next call to `writer_hint`, so that the writer can reserve the memory for writing. `RawEncoder`s are recommended but not required to call this method with an appropriate estimate. By default this method does nothing.",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[10,"write_byte","","Writes a single byte.",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[10,"write_bytes","","Writes a number of bytes.",3,null],[8,"StringWriter","","String writer used by decoders. In most cases this will be an owned string.",null,null],[11,"writer_hint","","Hints an expected lower bound on the length (in bytes) of the output until the next call to `writer_hint`, so that the writer can reserve the memory for writing. `RawDecoder`s are recommended but not required to call this method with an appropriate estimate. By default this method does nothing.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[10,"write_char","","Writes a single character.",4,{"inputs":[{"name":"self"},{"name":"char"}],"output":null}],[10,"write_str","","Writes a string.",4,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[8,"RawEncoder","","Encoder converting a Unicode string into a byte sequence. This is a lower level interface, and normally `Encoding::encode` should be used instead.",null,null],[10,"from_self","","Creates a fresh `RawEncoder` instance which parameters are same as `self`.",5,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","Returns true if this encoding is compatible to ASCII, i.e. U+0000 through U+007F always map to bytes 00 through 7F and nothing else.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"raw_feed","","Feeds given portion of string to the encoder, pushes the an encoded byte sequence at the end of the given output, and returns a byte offset to the first unprocessed character (that can be zero when the first such character appeared in the prior calls to `raw_feed`) and optional error information (None means success).",5,null],[10,"raw_finish","","Finishes the encoder, pushes the an encoded byte sequence at the end of the given output, and returns optional error information (None means success). `remaining` value of the error information, if any, is always an empty string.",5,{"inputs":[{"name":"self"},{"name":"bytewriter"}],"output":{"name":"option"}}],[8,"RawDecoder","","Decoder converting a byte sequence into a Unicode string. This is a lower level interface, and normally `Encoding::decode` should be used instead.",null,null],[10,"from_self","","Creates a fresh `RawDecoder` instance which parameters are same as `self`.",6,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","Returns true if this encoding is compatible to ASCII, i.e. bytes 00 through 7F always map to U+0000 through U+007F and nothing else.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"raw_feed","","Feeds given portion of byte sequence to the encoder, pushes the a decoded string at the end of the given output, and returns an offset to the first unprocessed byte (that can be zero when the first such byte appeared in the prior calls to `raw_feed`) and optional error information (None means success).",6,null],[10,"raw_finish","","Finishes the decoder, pushes the a decoded string at the end of the given output, and returns optional error information (None means success).",6,{"inputs":[{"name":"self"},{"name":"stringwriter"}],"output":{"name":"option"}}],[8,"Encoding","","Character encoding.",null,null],[10,"name","","Returns the canonical name of given encoding. This name is guaranteed to be unique across built-in encodings, but it is not normative and would be at most arbitrary.",7,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"whatwg_name","","Returns a name of given encoding defined in the WHATWG Encoding standard, if any. This name often differs from `name` due to the compatibility reason.",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"raw_encoder","","Creates a new encoder.",7,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[10,"raw_decoder","","Creates a new decoder.",7,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"encode","","An easy-to-use interface to `RawEncoder`. On the encoder error `trap` is called, which may return a replacement sequence to continue processing, or a failure to return the error.",7,{"inputs":[{"name":"self"},{"name":"str"},{"name":"encodertrap"}],"output":{"name":"result"}}],[11,"encode_to","","Encode into a `ByteWriter`.",7,{"inputs":[{"name":"self"},{"name":"str"},{"name":"encodertrap"},{"name":"bytewriter"}],"output":{"name":"result"}}],[11,"decode","","An easy-to-use interface to `RawDecoder`. On the decoder error `trap` is called, which may return a replacement string to continue processing, or a failure to return the error.",7,null],[11,"decode_to","","Decode into a `StringWriter`.",7,null],[11,"trap","","Handles a decoder error. May write to the output writer. Returns true only when it is fine to keep going.",1,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"decodertrap"}}],[11,"trap","","Handles an encoder error. May write to the output writer. Returns true only when it is fine to keep going.",2,{"inputs":[{"name":"self"},{"name":"rawencoder"},{"name":"str"},{"name":"bytewriter"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"encodertrap"}}],[0,"codec","encoding","Codec implementations.",null,null],[0,"error","encoding::codec","A placeholder encoding that returns encoder/decoder error for every case.",null,null],[3,"ErrorEncoding","encoding::codec::error","An encoding that returns encoder/decoder error for every case.",null,null],[3,"ErrorEncoder","","An encoder that always returns error.",null,null],[3,"ErrorDecoder","","A decoder that always returns error.",null,null],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"errorencoding"}}],[11,"name","","",8,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"raw_encoder","","",8,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"raw_decoder","","",8,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"errorencoder"}}],[11,"new","","",9,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",9,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"raw_feed","","",9,null],[11,"raw_finish","","",9,{"inputs":[{"name":"self"},{"name":"bytewriter"}],"output":{"name":"option"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"errordecoder"}}],[11,"new","","",10,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",10,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"raw_feed","","",10,null],[11,"raw_finish","","",10,{"inputs":[{"name":"self"},{"name":"stringwriter"}],"output":{"name":"option"}}],[0,"ascii","encoding::codec","7-bit ASCII encoding.",null,null],[3,"ASCIIEncoding","encoding::codec::ascii","ASCII, also known as ISO/IEC 646:US.",null,null],[3,"ASCIIEncoder","","An encoder for ASCII.",null,null],[3,"ASCIIDecoder","","A decoder for ASCII.",null,null],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"asciiencoding"}}],[11,"name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"raw_encoder","","",11,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"raw_decoder","","",11,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"asciiencoder"}}],[11,"new","","",12,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",12,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"raw_feed","","",12,null],[11,"raw_finish","","",12,{"inputs":[{"name":"self"},{"name":"bytewriter"}],"output":{"name":"option"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"asciidecoder"}}],[11,"new","","",13,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",13,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"raw_feed","","",13,null],[11,"raw_finish","","",13,{"inputs":[{"name":"self"},{"name":"stringwriter"}],"output":{"name":"option"}}],[0,"singlebyte","encoding::codec","Common codec implementation for single-byte encodings.",null,null],[3,"SingleByteEncoding","encoding::codec::singlebyte","A common framework for single-byte encodings based on ASCII.",null,null],[12,"name","","",14,null],[12,"whatwg_name","","",14,null],[12,"index_forward","","",14,null],[12,"index_backward","","",14,null],[3,"SingleByteEncoder","","An encoder for single-byte encodings based on ASCII.",null,null],[3,"SingleByteDecoder","","A decoder for single-byte encodings based on ASCII.",null,null],[0,"iso_8859_1","","Algorithmic mapping for ISO 8859-1.",null,null],[5,"forward","encoding::codec::singlebyte::iso_8859_1","",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[11,"clone","encoding::codec::singlebyte","",14,{"inputs":[{"name":"self"}],"output":{"name":"singlebyteencoding"}}],[11,"name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"whatwg_name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"raw_encoder","","",14,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"raw_decoder","","",14,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"singlebyteencoder"}}],[11,"new","","",15,null],[11,"from_self","","",15,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"raw_feed","","",15,null],[11,"raw_finish","","",15,{"inputs":[{"name":"self"},{"name":"bytewriter"}],"output":{"name":"option"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"singlebytedecoder"}}],[11,"new","","",16,null],[11,"from_self","","",16,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"raw_feed","","",16,null],[11,"raw_finish","","",16,{"inputs":[{"name":"self"},{"name":"stringwriter"}],"output":{"name":"option"}}],[0,"utf_8","encoding::codec","UTF-8, the universal encoding.",null,null],[3,"UTF8Encoding","encoding::codec::utf_8","UTF-8 (UCS Transformation Format, 8-bit).",null,null],[3,"UTF8Encoder","","An encoder for UTF-8.",null,null],[3,"UTF8Decoder","","A decoder for UTF-8.",null,null],[5,"from_utf8","","Almost equivalent to `std::str::from_utf8`. This function is provided for the fair benchmark against the stdlib's UTF-8 conversion functions, as rust-encoding always allocates a new string.",null,null],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"utf8encoding"}}],[11,"name","","",17,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"whatwg_name","","",17,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"raw_encoder","","",17,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"raw_decoder","","",17,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"utf8encoder"}}],[11,"new","","",18,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",18,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"raw_feed","","",18,null],[11,"raw_finish","","",18,{"inputs":[{"name":"self"},{"name":"bytewriter"}],"output":{"name":"option"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"utf8decoder"}}],[11,"new","","",19,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",19,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"raw_feed","","",19,null],[11,"raw_finish","","",19,{"inputs":[{"name":"self"},{"name":"stringwriter"}],"output":{"name":"option"}}],[0,"utf_16","encoding::codec","UTF-16.",null,null],[3,"Little","encoding::codec::utf_16","An implementation type for little endian.",null,null],[3,"Big","","An implementation type for big endian.",null,null],[3,"UTF16Encoding","","UTF-16 (UCS Transformation Format, 16-bit).",null,null],[3,"UTF16Encoder","","An encoder for UTF-16.",null,null],[3,"UTF16Decoder","","A decoder for UTF-16.",null,null],[6,"UTF16LEEncoding","","A type for UTF-16 in little endian.",null,null],[6,"UTF16BEEncoding","","A type for UTF-16 in big endian.",null,null],[17,"UTF_16LE_ENCODING","","An instance for UTF-16 in little endian.",null,null],[17,"UTF_16BE_ENCODING","","An instance for UTF-16 in big endian.",null,null],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"little"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"big"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"utf16encoding"}}],[11,"name","","",22,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"whatwg_name","","",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"raw_encoder","","",22,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"raw_decoder","","",22,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"utf16encoder"}}],[11,"from_self","","",23,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"raw_feed","","",23,null],[11,"raw_finish","","",23,{"inputs":[{"name":"self"},{"name":"bytewriter"}],"output":{"name":"option"}}],[11,"new","","",24,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",24,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"raw_feed","","",24,null],[11,"raw_finish","","",24,{"inputs":[{"name":"self"},{"name":"stringwriter"}],"output":{"name":"option"}}],[0,"korean","encoding::codec","Legacy Korean encodings based on KS X 1001.",null,null],[3,"Windows949Encoding","encoding::codec::korean","Windows code page 949.",null,null],[3,"Windows949Encoder","","An encoder for Windows code page 949.",null,null],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"windows949encoding"}}],[11,"name","","",25,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"whatwg_name","","",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"raw_encoder","","",25,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"raw_decoder","","",25,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"windows949encoder"}}],[11,"new","","",26,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",26,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"raw_feed","","",26,null],[11,"raw_finish","","",26,{"inputs":[{"name":"self"},{"name":"bytewriter"}],"output":{"name":"option"}}],[0,"japanese","encoding::codec","Legacy Japanese encodings based on JIS X 0208 and JIS X 0212.",null,null],[3,"EUCJPEncoding","encoding::codec::japanese","EUC-JP. (XXX with asymmetric JIS X 0212 support)",null,null],[3,"EUCJPEncoder","","An encoder for EUC-JP with unused G3 character set.",null,null],[3,"Windows31JEncoding","","Windows code page 932, i.e. Shift_JIS with IBM/NEC extensions.",null,null],[3,"Windows31JEncoder","","An encoder for Shift_JIS with IBM/NEC extensions.",null,null],[3,"ISO2022JPEncoding","","ISO-2022-JP.",null,null],[3,"ISO2022JPEncoder","","An encoder for ISO-2022-JP without JIS X 0212/0213 support.",null,null],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"eucjpencoding"}}],[11,"name","","",27,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"whatwg_name","","",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"raw_encoder","","",27,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"raw_decoder","","",27,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"eucjpencoder"}}],[11,"new","","",28,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",28,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"raw_feed","","",28,null],[11,"raw_finish","","",28,{"inputs":[{"name":"self"},{"name":"bytewriter"}],"output":{"name":"option"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"windows31jencoding"}}],[11,"name","","",29,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"whatwg_name","","",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"raw_encoder","","",29,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"raw_decoder","","",29,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"windows31jencoder"}}],[11,"new","","",30,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",30,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"raw_feed","","",30,null],[11,"raw_finish","","",30,{"inputs":[{"name":"self"},{"name":"bytewriter"}],"output":{"name":"option"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"iso2022jpencoding"}}],[11,"name","","",31,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"whatwg_name","","",31,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"raw_encoder","","",31,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"raw_decoder","","",31,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"iso2022jpencoder"}}],[11,"new","","",32,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",32,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"raw_feed","","",32,null],[11,"raw_finish","","",32,{"inputs":[{"name":"self"},{"name":"bytewriter"}],"output":{"name":"option"}}],[0,"simpchinese","encoding::codec","Legacy simplified Chinese encodings based on GB 2312 and GB 18030.",null,null],[3,"GBK","encoding::codec::simpchinese","An implementation type for GBK.",null,null],[3,"GB18030","","An implementation type for GB18030.",null,null],[3,"GBEncoding","","GBK and GB 18030-2005.",null,null],[3,"GBEncoder","","An encoder for GBK and GB18030.",null,null],[3,"HZEncoding","","HZ. (RFC 1843)",null,null],[3,"HZEncoder","","An encoder for HZ.",null,null],[6,"GBKEncoding","","A type for GBK.",null,null],[6,"GB18030Encoding","","A type for GB18030.",null,null],[17,"GBK_ENCODING","","An instance for GBK.",null,null],[17,"GB18030_ENCODING","","An instance for GB18030.",null,null],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"gbk"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"gb18030"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"gbencoding"}}],[11,"name","","",35,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"whatwg_name","","",35,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"raw_encoder","","",35,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"raw_decoder","","",35,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"gbencoder"}}],[11,"new","","",36,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",36,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"raw_feed","","",36,null],[11,"raw_finish","","",36,{"inputs":[{"name":"self"},{"name":"bytewriter"}],"output":{"name":"option"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"hzencoding"}}],[11,"name","","",37,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"whatwg_name","","",37,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"raw_encoder","","",37,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"raw_decoder","","",37,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"hzencoder"}}],[11,"new","","",38,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",38,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",38,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"raw_feed","","",38,null],[11,"raw_finish","","",38,{"inputs":[{"name":"self"},{"name":"bytewriter"}],"output":{"name":"option"}}],[0,"tradchinese","encoding::codec","Legacy traditional Chinese encodings.",null,null],[3,"BigFive2003Encoding","encoding::codec::tradchinese","Big5-2003 with common extensions. (XXX with asymmetric HKSCS-2008 support)",null,null],[3,"BigFive2003Encoder","","An encoder for Big5-2003.",null,null],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"bigfive2003encoding"}}],[11,"name","","",39,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"whatwg_name","","",39,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"raw_encoder","","",39,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"raw_decoder","","",39,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"bigfive2003encoder"}}],[11,"new","","",40,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",40,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",40,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"raw_feed","","",40,null],[11,"raw_finish","","",40,{"inputs":[{"name":"self"},{"name":"bytewriter"}],"output":{"name":"option"}}],[0,"whatwg","encoding::codec","Asymmetric or special encoding constructions required by the WHATWG Encoding standard.",null,null],[3,"EncoderOnlyUTF8Encoding","encoding::codec::whatwg","Replacement encoding used to solve a particular attack vector due to mismatching server and client supports for encodings. It is rarely useful outside.",null,null],[0,"x_user_defined","","Algorithmic mapping for `x-user-defined` encoding.",null,null],[5,"forward","encoding::codec::whatwg::x_user_defined","",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[11,"clone","encoding::codec::whatwg","",41,{"inputs":[{"name":"self"}],"output":{"name":"encoderonlyutf8encoding"}}],[11,"name","","",41,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"whatwg_name","","",41,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"raw_encoder","","",41,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"raw_decoder","","",41,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[0,"all","encoding","A list of all supported encodings. Useful for encodings fixed in the compile time.",null,null],[5,"encodings","encoding::all","Returns a list of references to the encodings available.",null,null],[0,"whatwg","","",null,null],[17,"X_USER_DEFINED","encoding::all::whatwg","",null,null],[17,"ISO_8859_8_I","","",null,null],[17,"REPLACEMENT","","",null,null],[17,"ERROR","encoding::all","",null,null],[17,"ASCII","","",null,null],[17,"IBM866","","",null,null],[17,"ISO_8859_1","","",null,null],[17,"ISO_8859_2","","",null,null],[17,"ISO_8859_3","","",null,null],[17,"ISO_8859_4","","",null,null],[17,"ISO_8859_5","","",null,null],[17,"ISO_8859_6","","",null,null],[17,"ISO_8859_7","","",null,null],[17,"ISO_8859_8","","",null,null],[17,"ISO_8859_10","","",null,null],[17,"ISO_8859_13","","",null,null],[17,"ISO_8859_14","","",null,null],[17,"ISO_8859_15","","",null,null],[17,"ISO_8859_16","","",null,null],[17,"KOI8_R","","",null,null],[17,"KOI8_U","","",null,null],[17,"MAC_ROMAN","","",null,null],[17,"WINDOWS_874","","",null,null],[17,"WINDOWS_1250","","",null,null],[17,"WINDOWS_1251","","",null,null],[17,"WINDOWS_1252","","",null,null],[17,"WINDOWS_1253","","",null,null],[17,"WINDOWS_1254","","",null,null],[17,"WINDOWS_1255","","",null,null],[17,"WINDOWS_1256","","",null,null],[17,"WINDOWS_1257","","",null,null],[17,"WINDOWS_1258","","",null,null],[17,"MAC_CYRILLIC","","",null,null],[17,"UTF_8","","",null,null],[17,"UTF_16LE","","",null,null],[17,"UTF_16BE","","",null,null],[17,"WINDOWS_949","","",null,null],[17,"EUC_JP","","",null,null],[17,"WINDOWS_31J","","",null,null],[17,"ISO_2022_JP","","",null,null],[17,"GBK","","",null,null],[17,"GB18030","","",null,null],[17,"HZ","","",null,null],[17,"BIG5_2003","","",null,null],[0,"label","encoding","An interface for retrieving an encoding (or a set of encodings) from a string/numeric label.",null,null],[5,"encoding_from_whatwg_label","encoding::label","Returns an encoding from given label, defined in the WHATWG Encoding standard, if any. Implements \"get an encoding\" algorithm: http://encoding.spec.whatwg.org/#concept-encoding-get",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encoding_from_windows_code_page","","Returns an encoding from Windows code page number. http://msdn.microsoft.com/en-us/library/windows/desktop/dd317756%28v=vs.85%29.aspx Sometimes it can return a superset of the requested encoding, e.g. for several CJK encodings.",null,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}]],"paths":[[3,"CodecError"],[4,"DecoderTrap"],[4,"EncoderTrap"],[8,"ByteWriter"],[8,"StringWriter"],[8,"RawEncoder"],[8,"RawDecoder"],[8,"Encoding"],[3,"ErrorEncoding"],[3,"ErrorEncoder"],[3,"ErrorDecoder"],[3,"ASCIIEncoding"],[3,"ASCIIEncoder"],[3,"ASCIIDecoder"],[3,"SingleByteEncoding"],[3,"SingleByteEncoder"],[3,"SingleByteDecoder"],[3,"UTF8Encoding"],[3,"UTF8Encoder"],[3,"UTF8Decoder"],[3,"Little"],[3,"Big"],[3,"UTF16Encoding"],[3,"UTF16Encoder"],[3,"UTF16Decoder"],[3,"Windows949Encoding"],[3,"Windows949Encoder"],[3,"EUCJPEncoding"],[3,"EUCJPEncoder"],[3,"Windows31JEncoding"],[3,"Windows31JEncoder"],[3,"ISO2022JPEncoding"],[3,"ISO2022JPEncoder"],[3,"GBK"],[3,"GB18030"],[3,"GBEncoding"],[3,"GBEncoder"],[3,"HZEncoding"],[3,"HZEncoder"],[3,"BigFive2003Encoding"],[3,"BigFive2003Encoder"],[3,"EncoderOnlyUTF8Encoding"]]};
searchIndex["encoding_index_japanese"] = {"doc":"Japanese index tables for rust-encoding.","items":[[0,"jis0208","encoding_index_japanese","JIS X 0208 with common extensions.",null,null],[5,"forward","encoding_index_japanese::jis0208","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u16"}],"output":{"name":"u32"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u16"}}],[5,"backward_remapped","","Returns the index shift_jis pointer for code point `code`.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u16"}}],[0,"jis0212","encoding_index_japanese","JIS X 0212.",null,null],[5,"forward","encoding_index_japanese::jis0212","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u16"}],"output":{"name":"u32"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u16"}}]],"paths":[]};
searchIndex["encoding_index_korean"] = {"doc":"Korean index tables for rust-encoding.","items":[[0,"euc_kr","encoding_index_korean","KS X 1001 plus Unified Hangul Code.",null,null],[5,"forward","encoding_index_korean::euc_kr","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u16"}],"output":{"name":"u32"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u16"}}]],"paths":[]};
searchIndex["encoding_index_simpchinese"] = {"doc":"Simplified Chinese index tables for rust-encoding.","items":[[0,"gb18030","encoding_index_simpchinese","GB 18030 two-byte area.",null,null],[5,"forward","encoding_index_simpchinese::gb18030","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u16"}],"output":{"name":"u32"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u16"}}],[0,"gb18030_ranges","encoding_index_simpchinese","GB 18030 four-byte area.",null,null],[5,"forward","encoding_index_simpchinese::gb18030_ranges","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}]],"paths":[]};
searchIndex["encoding_index_singlebyte"] = {"doc":"Single-byte index tables for rust-encoding.","items":[[0,"ibm866","encoding_index_singlebyte","IBM code page 866.",null,null],[5,"forward","encoding_index_singlebyte::ibm866","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_2","encoding_index_singlebyte","ISO 8859-2.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_2","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_3","encoding_index_singlebyte","ISO 8859-3.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_3","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_4","encoding_index_singlebyte","ISO 8859-4.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_4","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_5","encoding_index_singlebyte","ISO 8859-5.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_5","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_6","encoding_index_singlebyte","ISO 8859-6.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_6","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_7","encoding_index_singlebyte","ISO 8859-7.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_7","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_8","encoding_index_singlebyte","ISO 8859-8 (either visual or logical).",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_8","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_10","encoding_index_singlebyte","ISO 8859-10.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_10","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_13","encoding_index_singlebyte","ISO 8859-13.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_13","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_14","encoding_index_singlebyte","ISO 8859-14.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_14","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_15","encoding_index_singlebyte","ISO 8859-15.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_15","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_16","encoding_index_singlebyte","ISO 8859-16.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_16","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"koi8_r","encoding_index_singlebyte","KOI8-R.",null,null],[5,"forward","encoding_index_singlebyte::koi8_r","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"koi8_u","encoding_index_singlebyte","KOI8-U.",null,null],[5,"forward","encoding_index_singlebyte::koi8_u","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"macintosh","encoding_index_singlebyte","MacRoman.",null,null],[5,"forward","encoding_index_singlebyte::macintosh","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_874","encoding_index_singlebyte","Windows code page 874.",null,null],[5,"forward","encoding_index_singlebyte::windows_874","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1250","encoding_index_singlebyte","Windows code page 1250.",null,null],[5,"forward","encoding_index_singlebyte::windows_1250","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1251","encoding_index_singlebyte","Windows code page 1251.",null,null],[5,"forward","encoding_index_singlebyte::windows_1251","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1252","encoding_index_singlebyte","Windows code page 1252.",null,null],[5,"forward","encoding_index_singlebyte::windows_1252","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1253","encoding_index_singlebyte","Windows code page 1253.",null,null],[5,"forward","encoding_index_singlebyte::windows_1253","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1254","encoding_index_singlebyte","Windows code page 1254.",null,null],[5,"forward","encoding_index_singlebyte::windows_1254","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1255","encoding_index_singlebyte","Windows code page 1254.",null,null],[5,"forward","encoding_index_singlebyte::windows_1255","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1256","encoding_index_singlebyte","Windows code page 1256.",null,null],[5,"forward","encoding_index_singlebyte::windows_1256","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1257","encoding_index_singlebyte","Windows code page 1257.",null,null],[5,"forward","encoding_index_singlebyte::windows_1257","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1258","encoding_index_singlebyte","Windows code page 1258.",null,null],[5,"forward","encoding_index_singlebyte::windows_1258","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"x_mac_cyrillic","encoding_index_singlebyte","MacCyrillic.",null,null],[5,"forward","encoding_index_singlebyte::x_mac_cyrillic","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}]],"paths":[]};
searchIndex["encoding_index_tests"] = {"doc":"Macros and utilities for testing indices.","items":[[14,"single_byte_tests","encoding_index_tests","Makes a common test suite for single-byte indices.",null,null],[14,"multi_byte_tests","","Makes a common test suite for multi-byte indices.",null,null],[14,"multi_byte_range_tests","","Makes a common test suite for multi-byte range indices.",null,null]],"paths":[]};
searchIndex["encoding_index_tradchinese"] = {"doc":"Traditional Chinese index tables for rust-encoding.","items":[[0,"big5","encoding_index_tradchinese","Big5 and HKSCS.",null,null],[5,"forward","encoding_index_tradchinese::big5","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u16"}],"output":{"name":"u32"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u16"}}]],"paths":[]};
searchIndex["libc"] = {"doc":"Bindings for the C standard library and other platform libraries","items":[[0,"types","libc","",null,null],[0,"common","libc::types","",null,null],[0,"c95","libc::types::common","",null,null],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C.",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[0,"c99","libc::types::common","",null,null],[6,"int8_t","libc::types::common::c99","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[0,"posix88","libc::types::common","",null,null],[4,"DIR","libc::types::common::posix88","",null,null],[4,"dirent_t","","",null,null],[0,"posix01","libc::types::common","",null,null],[0,"posix08","","",null,null],[0,"bsd44","","",null,null],[0,"os","libc::types","",null,null],[0,"common","libc::types::os","",null,null],[0,"posix01","libc::types::os::common","",null,null],[3,"glob_t","libc::types::os::common::posix01","",null,null],[12,"gl_pathc","","",0,null],[12,"gl_pathv","","",0,null],[12,"gl_offs","","",0,null],[12,"__unused1","","",0,null],[12,"__unused2","","",0,null],[12,"__unused3","","",0,null],[12,"__unused4","","",0,null],[12,"__unused5","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[4,"timezone","","",null,null],[6,"pthread_t","","",null,null],[6,"rlim_t","","",null,null],[6,"sighandler_t","","",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"glob_t"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"timeval"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"rlimit"}}],[0,"bsd43","libc::types::os::common","",null,null],[3,"rusage","libc::types::os::common::bsd43","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"rusage"}}],[0,"bsd44","libc::types::os::common","",null,null],[3,"sockaddr","libc::types::os::common::bsd44","",null,null],[12,"sa_family","","",5,null],[12,"sa_data","","",5,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",6,null],[12,"__ss_align","","",6,null],[12,"__ss_pad2","","",6,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",7,null],[12,"sin_port","","",7,null],[12,"sin_addr","","",7,null],[12,"sin_zero","","",7,null],[3,"in_addr","","",null,null],[12,"s_addr","","",8,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",9,null],[12,"sin6_port","","",9,null],[12,"sin6_flowinfo","","",9,null],[12,"sin6_addr","","",9,null],[12,"sin6_scope_id","","",9,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",10,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",11,null],[12,"imr_interface","","",11,null],[3,"ip6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",12,null],[12,"ipv6mr_interface","","",12,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",13,null],[12,"ai_family","","",13,null],[12,"ai_socktype","","",13,null],[12,"ai_protocol","","",13,null],[12,"ai_addrlen","","",13,null],[12,"ai_addr","","",13,null],[12,"ai_canonname","","",13,null],[12,"ai_next","","",13,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",14,null],[12,"sun_path","","",14,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",15,null],[12,"ifa_name","","",15,null],[12,"ifa_flags","","",15,null],[12,"ifa_addr","","",15,null],[12,"ifa_netmask","","",15,null],[12,"ifa_ifu","","",15,null],[12,"ifa_data","","",15,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"in_port_t","","",null,null],[6,"in_addr_t","","",null,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"in_addr"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"in6_addr"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"ip6_mreq"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"addrinfo"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"ifaddrs"}}],[0,"arch","libc::types::os","",null,null],[0,"c95","libc::types::os::arch","",null,null],[6,"c_char","libc::types::os::arch::c95","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"wchar_t","","",null,null],[0,"c99","libc::types::os::arch","",null,null],[6,"c_longlong","libc::types::os::arch::c99","",null,null],[6,"c_ulonglong","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[0,"posix88","libc::types::os::arch","",null,null],[6,"off_t","libc::types::os::arch::posix88","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"useconds_t","","",null,null],[6,"mode_t","","",null,null],[6,"ssize_t","","",null,null],[0,"posix01","libc::types::os::arch","",null,null],[3,"stat","libc::types::os::arch::posix01","",null,null],[12,"st_dev","","",16,null],[12,"st_ino","","",16,null],[12,"st_nlink","","",16,null],[12,"st_mode","","",16,null],[12,"st_uid","","",16,null],[12,"st_gid","","",16,null],[12,"__pad0","","",16,null],[12,"st_rdev","","",16,null],[12,"st_size","","",16,null],[12,"st_blksize","","",16,null],[12,"st_blocks","","",16,null],[12,"st_atime","","",16,null],[12,"st_atime_nsec","","",16,null],[12,"st_mtime","","",16,null],[12,"st_mtime_nsec","","",16,null],[12,"st_ctime","","",16,null],[12,"st_ctime_nsec","","",16,null],[12,"__unused","","",16,null],[3,"utimbuf","","",null,null],[12,"actime","","",17,null],[12,"modtime","","",17,null],[3,"pthread_attr_t","","",null,null],[12,"__size","","",18,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"stat"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"utimbuf"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"pthread_attr_t"}}],[0,"posix08","libc::types::os::arch","",null,null],[0,"bsd44","","",null,null],[0,"extra","","",null,null],[3,"sockaddr_ll","libc::types::os::arch::extra","",null,null],[12,"sll_family","","",19,null],[12,"sll_protocol","","",19,null],[12,"sll_ifindex","","",19,null],[12,"sll_hatype","","",19,null],[12,"sll_pkttype","","",19,null],[12,"sll_halen","","",19,null],[12,"sll_addr","","",19,null],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_ll"}}],[0,"consts","libc","",null,null],[0,"os","libc::consts","",null,null],[0,"c95","libc::consts::os","",null,null],[17,"EXIT_FAILURE","libc::consts::os::c95","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[0,"c99","libc::consts::os","",null,null],[0,"posix88","","",null,null],[17,"O_RDONLY","libc::consts::os::posix88","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EDOTDOT","","",null,null],[17,"EBADMSG","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"ERFKILL","","",null,null],[17,"EHWPOISON","","",null,null],[0,"posix01","libc::consts::os","",null,null],[17,"F_DUPFD","libc::consts::os::posix01","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"SIG_IGN","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[0,"posix08","libc::consts::os","",null,null],[17,"O_CLOEXEC","libc::consts::os::posix08","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[0,"bsd44","libc::consts::os","",null,null],[17,"MADV_NORMAL","libc::consts::os::bsd44","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[0,"extra","libc::consts::os","",null,null],[17,"AF_PACKET","libc::consts::os::extra","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"PATH_MAX","","",null,null],[0,"sysconf","libc::consts::os","",null,null],[17,"_SC_ARG_MAX","libc::consts::os::sysconf","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[0,"funcs","libc","",null,null],[0,"c95","libc::funcs","",null,null],[0,"ctype","libc::funcs::c95","",null,null],[5,"isalnum","libc::funcs::c95::ctype","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[0,"stdio","libc::funcs::c95","",null,null],[5,"fopen","libc::funcs::c95::stdio","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[0,"stdlib","libc::funcs::c95","",null,null],[5,"abs","libc::funcs::c95::stdlib","",null,null],[5,"labs","","",null,null],[5,"atof","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","Exits the running program in a possibly dangerous manner.",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[0,"string","libc::funcs::c95","",null,null],[5,"strcpy","libc::funcs::c95::string","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[0,"posix88","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix88","",null,null],[5,"chmod","libc::funcs::posix88::stat_","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"mkfifo","","",null,null],[5,"stat","","",null,null],[0,"stdio","libc::funcs::posix88","",null,null],[5,"popen","libc::funcs::posix88::stdio","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[0,"fcntl","libc::funcs::posix88","",null,null],[5,"open","libc::funcs::posix88::fcntl","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[0,"dirent","libc::funcs::posix88","",null,null],[5,"opendir","libc::funcs::posix88::dirent","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[0,"unistd","libc::funcs::posix88","",null,null],[5,"access","libc::funcs::posix88::unistd","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"getsid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"usleep","","",null,null],[5,"nanosleep","","",null,null],[5,"sysconf","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"utime","","",null,null],[0,"signal","libc::funcs::posix88","",null,null],[5,"kill","libc::funcs::posix88::signal","",null,null],[0,"mman","libc::funcs::posix88","",null,null],[5,"mlock","libc::funcs::posix88::mman","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mprotect","","",null,null],[5,"msync","","",null,null],[5,"shm_open","","",null,null],[5,"shm_unlink","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[0,"net","libc::funcs::posix88","",null,null],[5,"if_nametoindex","libc::funcs::posix88::net","",null,null],[0,"posix01","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix01","",null,null],[5,"lstat","libc::funcs::posix01::stat_","",null,null],[0,"unistd","libc::funcs::posix01","",null,null],[5,"readlink","libc::funcs::posix01::unistd","",null,null],[5,"fsync","","",null,null],[5,"fdatasync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"putenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[0,"signal","libc::funcs::posix01","",null,null],[5,"signal","libc::funcs::posix01::signal","",null,null],[0,"glob","libc::funcs::posix01","",null,null],[5,"glob","libc::funcs::posix01::glob","",null,null],[5,"globfree","","",null,null],[0,"mman","libc::funcs::posix01","",null,null],[5,"posix_madvise","libc::funcs::posix01::mman","",null,null],[0,"resource","libc::funcs::posix01","",null,null],[5,"getrlimit","libc::funcs::posix01::resource","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[0,"posix08","libc::funcs","",null,null],[0,"unistd","libc::funcs::posix08","",null,null],[0,"bsd43","libc::funcs","",null,null],[5,"socket","libc::funcs::bsd43","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"recv","","",null,null],[5,"send","","",null,null],[5,"recvfrom","","",null,null],[5,"sendto","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"shutdown","","",null,null],[0,"bsd44","libc::funcs","",null,null],[5,"getdtablesize","libc::funcs::bsd44","",null,null],[5,"ioctl","","",null,null],[5,"madvise","","",null,null],[5,"mincore","","",null,null],[5,"flock","","",null,null],[0,"extra","libc::funcs","",null,null]],"paths":[[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"sockaddr_ll"]]};
searchIndex["minidump"] = {"doc":"A parser for the minidump file format.","items":[[8,"Module","minidump","An executable or shared library loaded in a process.",null,null],[10,"base_address","","The base address of this code module as it was loaded by the process.",0,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[10,"size","","The size of the code module.",0,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[10,"code_file","","The path or file name that the code module was loaded from.",0,{"inputs":[{"name":"self"}],"output":{"name":"cow"}}],[10,"code_identifier","","An identifying string used to discriminate between multiple versions and builds of the same code module.  This may contain a uuid, timestamp, version number, or any combination of this or other information, in an implementation-defined format.",0,{"inputs":[{"name":"self"}],"output":{"name":"cow"}}],[10,"debug_file","","The filename containing debugging information associated with the code module.  If debugging information is stored in a file separate from the code module itself (as is the case when .pdb or .dSYM files are used), this will be different from code_file.  If debugging information is stored in the code module itself (possibly prior to stripping), this will be the same as code_file.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"debug_identifier","","An identifying string similar to code_identifier, but identifies a specific version and build of the associated debug file.  This may be the same as code_identifier when the debug_file and code_file are identical or when the same identifier is used to identify distinct debug and code files.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"version","","A human-readable representation of the code module's version.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[3,"Minidump","","An index into the contents of a minidump.",null,null],[12,"header","","",1,null],[3,"MinidumpBreakpadInfo","","Additional information about process state.",null,null],[12,"dump_thread_id","","The thread that wrote the minidump.",2,null],[12,"requesting_thread_id","","The thread that requested that a minidump be written.",2,null],[3,"MinidumpContext","","CPU context such as register states.",null,null],[12,"raw","","The raw CPU register state.",3,null],[12,"valid","","Which registers are valid in `raw`.",3,null],[3,"MinidumpException","","Information about the exception that caused the minidump to be generated.",null,null],[12,"raw","","",4,null],[12,"thread_id","","",4,null],[12,"context","","",4,null],[3,"MinidumpMemory","","A region of memory from the process that wrote the minidump.",null,null],[12,"desc","","The raw `MDMemoryDescriptor` from the minidump.",5,null],[12,"base_address","","The starting address of this range of memory.",5,null],[12,"size","","The length of this range of memory.",5,null],[12,"bytes","","The contents of the memory.",5,null],[3,"MinidumpMemoryList","","A list of memory regions included in a minidump.",null,null],[3,"MinidumpMiscInfo","","Miscellaneous information about the process that wrote the minidump.",null,null],[12,"raw","","The `MDRawMiscInfo` struct direct from the minidump.",6,null],[12,"process_create_time","","When the process started, if available.",6,null],[3,"MinidumpModule","","An executable or shared library loaded in the process at the time the `Minidump` was written.",null,null],[12,"raw","","The `MDRawModule` direct from the minidump file.",7,null],[12,"codeview_info","","A `CodeView` record, if one is present.",7,null],[12,"misc_info","","A misc debug record, if one is present.",7,null],[3,"MinidumpModuleList","","A list of `MinidumpModule`s contained in a `Minidump`.",null,null],[3,"MinidumpSystemInfo","","Information about the system that generated the minidump.",null,null],[12,"raw","","The `MDRawSystemInfo` direct from the minidump.",8,null],[12,"os","","The operating system that generated the minidump.",8,null],[12,"cpu","","The CPU on which the minidump was generated.",8,null],[3,"MinidumpThread","","The state of a thread from the process when the minidump was written.",null,null],[12,"raw","","The `MDRawThread` direct from the minidump file.",9,null],[12,"context","","The CPU context for the thread, if present.",9,null],[12,"stack","","The stack memory for the thread, if present.",9,null],[3,"MinidumpThreadList","","A list of `MinidumpThread`s contained in a `Minidump`.",null,null],[12,"threads","","The threads, in the order they were present in the `Minidump`.",10,null],[3,"CallStack","","A stack of `StackFrame`s produced as a result of unwinding a thread.",null,null],[12,"frames","","The stack frames. By convention, the stack frame at index 0 is the innermost callee frame, and the frame at the highest index in a call stack is the outermost caller.",11,null],[12,"info","","Information about this `CallStack`.",11,null],[3,"ProcessState","","The state of a process as recorded by a `Minidump`.",null,null],[12,"time","","When the minidump was written.",12,null],[12,"process_create_time","","When the process started, if available",12,null],[12,"crash_reason","","If the process crashed, a `CrashReason` describing the crash reason.",12,null],[12,"crash_address","","The memory address implicated in the crash.",12,null],[12,"assertion","","A string describing an assertion that was hit, if present.",12,null],[12,"requesting_thread","","The index of the thread that requested a dump be written. If a dump was produced as a result of a crash, this will point to the thread that crashed.  If the dump was produced as by user code without crashing, and the dump contains extended Breakpad information, this will point to the thread that requested the dump. If the dump was not produced as a result of an exception and no extended Breakpad information is present, this field will be `None`.",12,null],[12,"threads","","Stacks for each thread (except possibly the exception handler thread) at the time of the crash.",12,null],[12,"system_info","","Information about the system on which the minidump was written.",12,null],[12,"modules","","The modules that were loaded into the process represented by the `ProcessState`.",12,null],[3,"StackFrame","","A single stack frame produced from unwinding a thread's stack.",null,null],[12,"instruction","","",13,null],[12,"module","","",13,null],[12,"function_name","","The function name, may be omitted if debug symbols are not available.",13,null],[12,"function_base","","The start address of the function, may be omitted if debug symbols are not available.",13,null],[12,"source_file_name","","The source file name, may be omitted if debug symbols are not available.",13,null],[12,"source_line","","The (1-based) source line number, may be omitted if debug symbols are not available.",13,null],[12,"source_line_base","","The start address of the source line, may be omitted if debug symbols are not available.",13,null],[12,"trust","","Amount of trust the stack walker has in the instruction pointer of this frame.",13,null],[12,"context","","The CPU context containing register state for this frame.",13,null],[3,"SystemInfo","","Information about the system that produced a `Minidump`.",null,null],[12,"os","","The operating system that produced the minidump.",14,null],[12,"os_version","","A string identifying the version of the operating system, such as \"5.1.2600 Service Pack 2\" or \"10.4.8 8L2127\", if present.",14,null],[12,"cpu","","The CPU on which the dump was produced.",14,null],[12,"cpu_info","","A string further identifying the specific CPU, such as \"GenuineIntel level 6 model 13 stepping 8\", if present.",14,null],[12,"cpu_count","","The number of processors in the system. Will be greater than one for multi-core systems.",14,null],[4,"Error","","Errors encountered while reading a `Minidump`.",null,null],[13,"FileNotFound","","",15,null],[13,"MissingHeader","","",15,null],[13,"HeaderMismatch","","",15,null],[13,"SwapNotImplemented","","",15,null],[13,"VersionMismatch","","",15,null],[13,"MissingDirectory","","",15,null],[13,"StreamReadFailure","","",15,null],[13,"StreamSizeMismatch","","",15,null],[12,"expected","minidump::Error","",15,null],[12,"actual","","",15,null],[13,"StreamNotFound","minidump","",15,null],[13,"ModuleReadFailure","","",15,null],[13,"MemoryReadFailure","","",15,null],[13,"DataError","","",15,null],[13,"CodeViewReadFailure","","",15,null],[4,"MinidumpContextValidity","","Information about which registers are valid in a `MinidumpContext`.",null,null],[13,"All","","",16,null],[13,"Some","","",16,null],[4,"MinidumpRawContext","","The CPU-specific context structure.",null,null],[13,"X86","","",17,null],[13,"PPC","","",17,null],[13,"PPC64","","",17,null],[13,"AMD64","","",17,null],[13,"SPARC","","",17,null],[13,"ARM","","",17,null],[13,"ARM64","","",17,null],[13,"MIPS","","",17,null],[4,"ProcessError","","An error encountered during minidump processing.",null,null],[13,"UnknownError","","An unknown error.",18,null],[13,"MissingSystemInfo","","Missing system info stream.",18,null],[13,"MissingThreadList","","Missing thread list stream.",18,null],[4,"CallStackInfo","","Information about the results of unwinding a thread's stack.",null,null],[13,"Ok","","Everything went great.",19,null],[13,"MissingContext","","No `MinidumpContext` was provided, couldn't do anything.",19,null],[13,"MissingMemory","","No stack memory was provided, couldn't unwind past the top frame.",19,null],[13,"UnsupportedCPU","","The CPU type is unsupported.",19,null],[13,"DumpThreadSkipped","","This thread wrote the minidump, it was skipped.",19,null],[4,"FrameTrust","","Indicates how well the instruction pointer derived during stack walking is trusted. Since the stack walker can resort to stack scanning, it can wind up with dubious frames.",null,null],[13,"None","","Unknown",20,null],[13,"Scan","","Scanned the stack, found this.",20,null],[13,"CfiScan","","Found while scanning stack using call frame info.",20,null],[13,"FramePointer","","Derived from frame pointer.",20,null],[13,"CallFrameInfo","","Derived from call frame info.",20,null],[13,"PreWalked","","Explicitly provided by some external stack walker.",20,null],[13,"Context","","Given as instruction pointer in a context.",20,null],[4,"CPU","","Known CPU types.",null,null],[13,"X86","","",21,null],[13,"X86_64","","",21,null],[13,"PPC","","",21,null],[13,"PPC64","","",21,null],[13,"Sparc","","",21,null],[13,"ARM","","",21,null],[13,"ARM64","","",21,null],[13,"Unknown","","",21,null],[4,"OS","","Known operating systems.",null,null],[13,"Windows","","",22,null],[13,"MacOSX","","",22,null],[13,"Ios","","",22,null],[13,"Linux","","",22,null],[13,"Solaris","","",22,null],[13,"Android","","",22,null],[13,"Ps3","","",22,null],[13,"NaCl","","",22,null],[13,"Unknown","","",22,null],[5,"process_minidump","","Unwind all threads in `dump` and return a `ProcessState`.",null,{"inputs":[{"name":"minidump"},{"name":"symbolizer"}],"output":{"name":"result"}}],[0,"minidump_format","","Minidump structure definitions (autogenerated from C headers).",null,null],[3,"Struct_Unnamed1","minidump::minidump_format","",null,null],[12,"quot","","",23,null],[12,"rem","","",23,null],[3,"Struct_Unnamed2","","",null,null],[12,"high","","",24,null],[12,"low","","",24,null],[3,"Struct_Unnamed3","","",null,null],[12,"data1","","",25,null],[12,"data2","","",25,null],[12,"data3","","",25,null],[12,"data4","","",25,null],[3,"Struct_Unnamed4","","",null,null],[12,"context_flags","","",26,null],[3,"Struct_Unnamed5","","",null,null],[12,"control_word","","",27,null],[12,"status_word","","",27,null],[12,"tag_word","","",27,null],[12,"reserved1","","",27,null],[12,"error_opcode","","",27,null],[12,"error_offset","","",27,null],[12,"error_selector","","",27,null],[12,"reserved2","","",27,null],[12,"data_offset","","",27,null],[12,"data_selector","","",27,null],[12,"reserved3","","",27,null],[12,"mx_csr","","",27,null],[12,"mx_csr_mask","","",27,null],[12,"float_registers","","",27,null],[12,"xmm_registers","","",27,null],[12,"reserved4","","",27,null],[3,"Struct_Unnamed6","","",null,null],[12,"p1_home","","",28,null],[12,"p2_home","","",28,null],[12,"p3_home","","",28,null],[12,"p4_home","","",28,null],[12,"p5_home","","",28,null],[12,"p6_home","","",28,null],[12,"context_flags","","",28,null],[12,"mx_csr","","",28,null],[12,"cs","","",28,null],[12,"ds","","",28,null],[12,"es","","",28,null],[12,"fs","","",28,null],[12,"gs","","",28,null],[12,"ss","","",28,null],[12,"eflags","","",28,null],[12,"dr0","","",28,null],[12,"dr1","","",28,null],[12,"dr2","","",28,null],[12,"dr3","","",28,null],[12,"dr6","","",28,null],[12,"dr7","","",28,null],[12,"rax","","",28,null],[12,"rcx","","",28,null],[12,"rdx","","",28,null],[12,"rbx","","",28,null],[12,"rsp","","",28,null],[12,"rbp","","",28,null],[12,"rsi","","",28,null],[12,"rdi","","",28,null],[12,"r8","","",28,null],[12,"r9","","",28,null],[12,"r10","","",28,null],[12,"r11","","",28,null],[12,"r12","","",28,null],[12,"r13","","",28,null],[12,"r14","","",28,null],[12,"r15","","",28,null],[12,"rip","","",28,null],[12,"_bindgen_data_1_","","",28,null],[12,"vector_register","","",28,null],[12,"vector_control","","",28,null],[12,"debug_control","","",28,null],[12,"last_branch_to_rip","","",28,null],[12,"last_branch_from_rip","","",28,null],[12,"last_exception_to_rip","","",28,null],[12,"last_exception_from_rip","","",28,null],[3,"Struct_Unnamed7","","",null,null],[12,"header","","",29,null],[12,"legacy","","",29,null],[12,"xmm0","","",29,null],[12,"xmm1","","",29,null],[12,"xmm2","","",29,null],[12,"xmm3","","",29,null],[12,"xmm4","","",29,null],[12,"xmm5","","",29,null],[12,"xmm6","","",29,null],[12,"xmm7","","",29,null],[12,"xmm8","","",29,null],[12,"xmm9","","",29,null],[12,"xmm10","","",29,null],[12,"xmm11","","",29,null],[12,"xmm12","","",29,null],[12,"xmm13","","",29,null],[12,"xmm14","","",29,null],[12,"xmm15","","",29,null],[3,"Struct_Unnamed8","","",null,null],[12,"fpscr","","",30,null],[12,"regs","","",30,null],[12,"extra","","",30,null],[3,"Struct_Unnamed9","","",null,null],[12,"context_flags","","",31,null],[12,"iregs","","",31,null],[12,"cpsr","","",31,null],[12,"float_save","","",31,null],[3,"Struct_Unnamed10","","",null,null],[12,"fpsr","","",32,null],[12,"fpcr","","",32,null],[12,"regs","","",32,null],[3,"Struct_Unnamed11","","",null,null],[12,"context_flags","","",33,null],[12,"iregs","","",33,null],[12,"cpsr","","",33,null],[12,"float_save","","",33,null],[3,"Struct_Unnamed12","","",null,null],[12,"regs","","",34,null],[12,"fpcsr","","",34,null],[12,"fir","","",34,null],[3,"Struct_Unnamed13","","",null,null],[12,"context_flags","","",35,null],[12,"_pad0","","",35,null],[12,"iregs","","",35,null],[12,"mdhi","","",35,null],[12,"mdlo","","",35,null],[12,"hi","","",35,null],[12,"lo","","",35,null],[12,"dsp_control","","",35,null],[12,"_pad1","","",35,null],[12,"epc","","",35,null],[12,"badvaddr","","",35,null],[12,"status","","",35,null],[12,"cause","","",35,null],[12,"float_save","","",35,null],[3,"Struct_Unnamed14","","",null,null],[12,"fpregs","","",36,null],[12,"fpscr_pad","","",36,null],[12,"fpscr","","",36,null],[3,"Struct_Unnamed15","","",null,null],[12,"save_vr","","",37,null],[12,"save_vscr","","",37,null],[12,"save_pad5","","",37,null],[12,"save_vrvalid","","",37,null],[12,"save_pad6","","",37,null],[3,"Struct_Unnamed16","","",null,null],[12,"context_flags","","",38,null],[12,"srr0","","",38,null],[12,"srr1","","",38,null],[12,"gpr","","",38,null],[12,"cr","","",38,null],[12,"xer","","",38,null],[12,"lr","","",38,null],[12,"ctr","","",38,null],[12,"mq","","",38,null],[12,"vrsave","","",38,null],[12,"float_save","","",38,null],[12,"vector_save","","",38,null],[3,"Struct_Unnamed17","","",null,null],[12,"context_flags","","",39,null],[12,"srr0","","",39,null],[12,"srr1","","",39,null],[12,"gpr","","",39,null],[12,"cr","","",39,null],[12,"xer","","",39,null],[12,"lr","","",39,null],[12,"ctr","","",39,null],[12,"vrsave","","",39,null],[12,"float_save","","",39,null],[12,"vector_save","","",39,null],[3,"Struct_Unnamed18","","",null,null],[12,"regs","","",40,null],[12,"filler","","",40,null],[12,"fsr","","",40,null],[3,"Struct_Unnamed19","","",null,null],[12,"context_flags","","",41,null],[12,"flag_pad","","",41,null],[12,"g_r","","",41,null],[12,"ccr","","",41,null],[12,"pc","","",41,null],[12,"npc","","",41,null],[12,"y","","",41,null],[12,"asi","","",41,null],[12,"fprs","","",41,null],[12,"float_save","","",41,null],[3,"Struct_Unnamed20","","",null,null],[12,"control_word","","",42,null],[12,"status_word","","",42,null],[12,"tag_word","","",42,null],[12,"error_offset","","",42,null],[12,"error_selector","","",42,null],[12,"data_offset","","",42,null],[12,"data_selector","","",42,null],[12,"register_area","","",42,null],[12,"cr0_npx_state","","",42,null],[3,"Struct_Unnamed21","","",null,null],[12,"context_flags","","",43,null],[12,"dr0","","",43,null],[12,"dr1","","",43,null],[12,"dr2","","",43,null],[12,"dr3","","",43,null],[12,"dr6","","",43,null],[12,"dr7","","",43,null],[12,"float_save","","",43,null],[12,"gs","","",43,null],[12,"fs","","",43,null],[12,"es","","",43,null],[12,"ds","","",43,null],[12,"edi","","",43,null],[12,"esi","","",43,null],[12,"ebx","","",43,null],[12,"edx","","",43,null],[12,"ecx","","",43,null],[12,"eax","","",43,null],[12,"ebp","","",43,null],[12,"eip","","",43,null],[12,"cs","","",43,null],[12,"eflags","","",43,null],[12,"esp","","",43,null],[12,"ss","","",43,null],[12,"extended_registers","","",43,null],[3,"Struct_Unnamed22","","",null,null],[12,"signature","","",44,null],[12,"struct_version","","",44,null],[12,"file_version_hi","","",44,null],[12,"file_version_lo","","",44,null],[12,"product_version_hi","","",44,null],[12,"product_version_lo","","",44,null],[12,"file_flags_mask","","",44,null],[12,"file_flags","","",44,null],[12,"file_os","","",44,null],[12,"file_type","","",44,null],[12,"file_subtype","","",44,null],[12,"file_date_hi","","",44,null],[12,"file_date_lo","","",44,null],[3,"Struct_Unnamed23","","",null,null],[12,"data_size","","",45,null],[12,"rva","","",45,null],[3,"Struct_Unnamed24","","",null,null],[12,"start_of_memory_range","","",46,null],[12,"memory","","",46,null],[3,"Struct_Unnamed25","","",null,null],[12,"signature","","",47,null],[12,"version","","",47,null],[12,"stream_count","","",47,null],[12,"stream_directory_rva","","",47,null],[12,"checksum","","",47,null],[12,"time_date_stamp","","",47,null],[12,"flags","","",47,null],[3,"Struct_Unnamed27","","",null,null],[12,"stream_type","","",48,null],[12,"location","","",48,null],[3,"Struct_Unnamed29","","",null,null],[12,"length","","",49,null],[12,"buffer","","",49,null],[3,"Struct_Unnamed30","","",null,null],[12,"thread_id","","",50,null],[12,"suspend_count","","",50,null],[12,"priority_class","","",50,null],[12,"priority","","",50,null],[12,"teb","","",50,null],[12,"stack","","",50,null],[12,"thread_context","","",50,null],[3,"Struct_Unnamed31","","",null,null],[12,"number_of_threads","","",51,null],[12,"threads","","",51,null],[3,"Struct_Unnamed32","","",null,null],[12,"base_of_image","","",52,null],[12,"size_of_image","","",52,null],[12,"checksum","","",52,null],[12,"time_date_stamp","","",52,null],[12,"module_name_rva","","",52,null],[12,"version_info","","",52,null],[12,"cv_record","","",52,null],[12,"misc_record","","",52,null],[12,"reserved0","","",52,null],[12,"reserved1","","",52,null],[3,"Struct_Unnamed33","","",null,null],[12,"signature","","",53,null],[12,"offset","","",53,null],[3,"Struct_Unnamed34","","",null,null],[12,"cv_header","","",54,null],[12,"signature","","",54,null],[12,"age","","",54,null],[12,"pdb_file_name","","",54,null],[3,"Struct_Unnamed35","","",null,null],[12,"cv_signature","","",55,null],[12,"signature","","",55,null],[12,"age","","",55,null],[12,"pdb_file_name","","",55,null],[3,"Struct_Unnamed36","","",null,null],[12,"cv_signature","","",56,null],[12,"build_id","","",56,null],[3,"Struct_Unnamed37","","",null,null],[12,"data_type","","",57,null],[12,"length","","",57,null],[12,"unicode","","",57,null],[12,"reserved","","",57,null],[12,"data","","",57,null],[3,"Struct_Unnamed38","","",null,null],[12,"number_of_modules","","",58,null],[12,"modules","","",58,null],[3,"Struct_Unnamed39","","",null,null],[12,"number_of_memory_ranges","","",59,null],[12,"memory_ranges","","",59,null],[3,"Struct_Unnamed40","","",null,null],[12,"exception_code","","",60,null],[12,"exception_flags","","",60,null],[12,"exception_record","","",60,null],[12,"exception_address","","",60,null],[12,"number_parameters","","",60,null],[12,"__align","","",60,null],[12,"exception_information","","",60,null],[3,"Struct_Unnamed50","","",null,null],[12,"thread_id","","",61,null],[12,"__align","","",61,null],[12,"exception_record","","",61,null],[12,"thread_context","","",61,null],[3,"Union_Unnamed51","","",null,null],[12,"_bindgen_data_","","",62,null],[3,"Struct_Unnamed52","","",null,null],[12,"vendor_id","","",63,null],[12,"version_information","","",63,null],[12,"feature_information","","",63,null],[12,"amd_extended_cpu_features","","",63,null],[3,"Struct_Unnamed53","","",null,null],[12,"cpuid","","",64,null],[12,"elf_hwcaps","","",64,null],[3,"Struct_Unnamed54","","",null,null],[12,"processor_features","","",65,null],[3,"Struct_Unnamed56","","",null,null],[12,"processor_architecture","","",66,null],[12,"processor_level","","",66,null],[12,"processor_revision","","",66,null],[12,"number_of_processors","","",66,null],[12,"product_type","","",66,null],[12,"major_version","","",66,null],[12,"minor_version","","",66,null],[12,"build_number","","",66,null],[12,"platform_id","","",66,null],[12,"csd_version_rva","","",66,null],[12,"suite_mask","","",66,null],[12,"reserved2","","",66,null],[12,"cpu","","",66,null],[3,"Struct_Unnamed59","","",null,null],[12,"year","","",67,null],[12,"month","","",67,null],[12,"day_of_week","","",67,null],[12,"day","","",67,null],[12,"hour","","",67,null],[12,"minute","","",67,null],[12,"second","","",67,null],[12,"milliseconds","","",67,null],[3,"Struct_Unnamed60","","",null,null],[12,"bias","","",68,null],[12,"standard_name","","",68,null],[12,"standard_date","","",68,null],[12,"standard_bias","","",68,null],[12,"daylight_name","","",68,null],[12,"daylight_date","","",68,null],[12,"daylight_bias","","",68,null],[3,"MDRawMiscInfo","","",null,null],[12,"size_of_info","","",69,null],[12,"flags1","","",69,null],[12,"process_id","","",69,null],[12,"process_create_time","","",69,null],[12,"process_user_time","","",69,null],[12,"process_kernel_time","","",69,null],[12,"processor_max_mhz","","",69,null],[12,"processor_current_mhz","","",69,null],[12,"processor_mhz_limit","","",69,null],[12,"processor_max_idle_state","","",69,null],[12,"processor_current_idle_state","","",69,null],[12,"process_integrity_level","","",69,null],[12,"process_execute_flags","","",69,null],[12,"protected_process","","",69,null],[12,"time_zone_id","","",69,null],[12,"time_zone","","",69,null],[12,"build_string","","",69,null],[12,"dbg_bld_str","","",69,null],[3,"Struct_Unnamed63","","",null,null],[12,"size_of_header","","",70,null],[12,"size_of_entry","","",70,null],[12,"number_of_entries","","",70,null],[3,"Struct_Unnamed64","","",null,null],[12,"base_address","","",71,null],[12,"allocation_base","","",71,null],[12,"allocation_protection","","",71,null],[12,"__alignment1","","",71,null],[12,"region_size","","",71,null],[12,"state","","",71,null],[12,"protection","","",71,null],[12,"_type","","",71,null],[12,"__alignment2","","",71,null],[3,"Struct_Unnamed68","","",null,null],[12,"validity","","",72,null],[12,"dump_thread_id","","",72,null],[12,"requesting_thread_id","","",72,null],[3,"Struct_Unnamed70","","",null,null],[12,"expression","","",73,null],[12,"function","","",73,null],[12,"file","","",73,null],[12,"line","","",73,null],[12,"_type","","",73,null],[3,"Struct_Unnamed72","","",null,null],[12,"addr","","",74,null],[12,"name","","",74,null],[12,"ld","","",74,null],[3,"Struct_Unnamed73","","",null,null],[12,"version","","",75,null],[12,"map","","",75,null],[12,"dso_count","","",75,null],[12,"brk","","",75,null],[12,"ldbase","","",75,null],[12,"dynamic","","",75,null],[3,"Struct_Unnamed74","","",null,null],[12,"addr","","",76,null],[12,"name","","",76,null],[12,"ld","","",76,null],[3,"Struct_Unnamed75","","",null,null],[12,"version","","",77,null],[12,"map","","",77,null],[12,"dso_count","","",77,null],[12,"brk","","",77,null],[12,"ldbase","","",77,null],[12,"dynamic","","",77,null],[7,"MD_MEMORY_PROTECTION_ACCESS_MASK","","",null,null],[5,"imaxabs","","",null,null],[5,"imaxdiv","","",null,null],[5,"strtoimax","","",null,null],[5,"strtoumax","","",null,null],[5,"wcstoimax","","",null,null],[5,"wcstoumax","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"size_t","","",null,null],[6,"wchar_t","","",null,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"__gwchar_t","","",null,null],[6,"imaxdiv_t","","",null,null],[6,"uint128_struct","","",null,null],[6,"breakpad_time_t","","",null,null],[6,"MDGUID","","",null,null],[6,"MDRawContextBase","","",null,null],[6,"MDXmmSaveArea32AMD64","","",null,null],[6,"MDRawContextAMD64","","",null,null],[6,"MDFloatingSaveAreaARM","","",null,null],[6,"MDRawContextARM","","",null,null],[6,"Enum_MDARMRegisterNumbers","","",null,null],[6,"MDFloatingSaveAreaARM64","","",null,null],[6,"MDRawContextARM64","","",null,null],[6,"Enum_MDARM64RegisterNumbers","","",null,null],[6,"MDFloatingSaveAreaMIPS","","",null,null],[6,"MDRawContextMIPS","","",null,null],[6,"Enum_MDMIPSRegisterNumbers","","",null,null],[6,"MDFloatingSaveAreaPPC","","",null,null],[6,"MDVectorSaveAreaPPC","","",null,null],[6,"MDRawContextPPC","","",null,null],[6,"Enum_MDPPCRegisterNumbers","","",null,null],[6,"MDFloatingSaveAreaPPC64","","",null,null],[6,"MDVectorSaveAreaPPC64","","",null,null],[6,"MDRawContextPPC64","","",null,null],[6,"Enum_MDPPC64RegisterNumbers","","",null,null],[6,"MDFloatingSaveAreaSPARC","","",null,null],[6,"MDRawContextSPARC","","",null,null],[6,"Enum_MDSPARCRegisterNumbers","","",null,null],[6,"MDFloatingSaveAreaX86","","",null,null],[6,"MDRawContextX86","","",null,null],[6,"MDVSFixedFileInfo","","",null,null],[6,"MDRVA","","",null,null],[6,"MDLocationDescriptor","","",null,null],[6,"MDMemoryDescriptor","","",null,null],[6,"MDRawHeader","","",null,null],[6,"Enum_Unnamed26","","",null,null],[6,"MDType","","",null,null],[6,"MDRawDirectory","","",null,null],[6,"Enum_Unnamed28","","",null,null],[6,"MDStreamType","","",null,null],[6,"MDString","","",null,null],[6,"MDRawThread","","",null,null],[6,"MDRawThreadList","","",null,null],[6,"MDRawModule","","",null,null],[6,"MDCVHeader","","",null,null],[6,"MDCVInfoPDB20","","",null,null],[6,"MDCVInfoPDB70","","",null,null],[6,"MDCVInfoELF","","",null,null],[6,"MDImageDebugMisc","","",null,null],[6,"MDRawModuleList","","",null,null],[6,"MDRawMemoryList","","",null,null],[6,"MDException","","",null,null],[6,"Enum_Unnamed41","","",null,null],[6,"MDExceptionCodeLinux","","",null,null],[6,"Enum_Unnamed42","","",null,null],[6,"MDExceptionMac","","",null,null],[6,"Enum_Unnamed43","","",null,null],[6,"MDExceptionCodeMac","","",null,null],[6,"Enum_Unnamed44","","",null,null],[6,"MDExceptionCodePS3","","",null,null],[6,"Enum_Unnamed45","","",null,null],[6,"MDExceptionCodeSolaris","","",null,null],[6,"Enum_Unnamed46","","",null,null],[6,"MDExceptionCodeWin","","",null,null],[6,"Enum_Unnamed47","","",null,null],[6,"MDNTStatusCodeWin","","",null,null],[6,"Enum_Unnamed48","","",null,null],[6,"MDAccessViolationTypeWin","","",null,null],[6,"Enum_Unnamed49","","",null,null],[6,"MDInPageErrorTypeWin","","",null,null],[6,"MDRawExceptionStream","","",null,null],[6,"MDCPUInformation","","",null,null],[6,"Enum_Unnamed55","","",null,null],[6,"MDCPUInformationARMElfHwCaps","","",null,null],[6,"MDRawSystemInfo","","",null,null],[6,"Enum_Unnamed57","","",null,null],[6,"MDCPUArchitecture","","",null,null],[6,"Enum_Unnamed58","","",null,null],[6,"MDOSPlatform","","",null,null],[6,"MDSystemTime","","",null,null],[6,"MDTimeZoneInformation","","",null,null],[6,"Enum_Unnamed62","","",null,null],[6,"MDMiscInfoFlags1","","",null,null],[6,"MDRawMemoryInfoList","","",null,null],[6,"MDRawMemoryInfo","","",null,null],[6,"Enum_Unnamed65","","",null,null],[6,"MDMemoryState","","",null,null],[6,"Enum_Unnamed66","","",null,null],[6,"MDMemoryProtection","","",null,null],[6,"Enum_Unnamed67","","",null,null],[6,"MDMemoryType","","",null,null],[6,"MDRawBreakpadInfo","","",null,null],[6,"Enum_Unnamed69","","",null,null],[6,"MDBreakpadInfoValidity","","",null,null],[6,"MDRawAssertionInfo","","",null,null],[6,"Enum_Unnamed71","","",null,null],[6,"MDAssertionInfoData","","",null,null],[6,"MDRawLinkMap32","","",null,null],[6,"MDRawDebug32","","",null,null],[6,"MDRawLinkMap64","","",null,null],[6,"MDRawDebug64","","",null,null],[17,"_INTTYPES_H","","",null,null],[17,"_FEATURES_H","","",null,null],[17,"_DEFAULT_SOURCE","","",null,null],[17,"_BSD_SOURCE","","",null,null],[17,"_SVID_SOURCE","","",null,null],[17,"__USE_ISOC99","","",null,null],[17,"__USE_ISOC95","","",null,null],[17,"__USE_POSIX_IMPLICITLY","","",null,null],[17,"_POSIX_SOURCE","","",null,null],[17,"__USE_POSIX","","",null,null],[17,"__USE_POSIX2","","",null,null],[17,"__USE_POSIX199309","","",null,null],[17,"__USE_POSIX199506","","",null,null],[17,"__USE_XOPEN2K","","",null,null],[17,"__USE_XOPEN2K8","","",null,null],[17,"_ATFILE_SOURCE","","",null,null],[17,"__USE_MISC","","",null,null],[17,"__USE_BSD","","",null,null],[17,"__USE_SVID","","",null,null],[17,"__USE_ATFILE","","",null,null],[17,"__USE_FORTIFY_LEVEL","","",null,null],[17,"_STDC_PREDEF_H","","",null,null],[17,"__STDC_IEC_559__","","",null,null],[17,"__STDC_IEC_559_COMPLEX__","","",null,null],[17,"__STDC_NO_THREADS__","","",null,null],[17,"__GNU_LIBRARY__","","",null,null],[17,"__GLIBC__","","",null,null],[17,"__GLIBC_MINOR__","","",null,null],[17,"_SYS_CDEFS_H","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"__WORDSIZE_TIME64_COMPAT32","","",null,null],[17,"__SYSCALL_WORDSIZE","","",null,null],[17,"_STDINT_H","","",null,null],[17,"_BITS_WCHAR_H","","",null,null],[17,"____gwchar_t_defined","","",null,null],[17,"MD_CONTEXT_IA64","","",null,null],[17,"MD_CONTEXT_SHX","","",null,null],[17,"MD_CONTEXT_ALPHA","","",null,null],[17,"MD_CONTEXT_CPU_MASK","","",null,null],[17,"MD_CONTEXT_AMD64_VR_COUNT","","",null,null],[17,"MD_CONTEXT_AMD64","","",null,null],[17,"MD_FLOATINGSAVEAREA_ARM_FPR_COUNT","","",null,null],[17,"MD_FLOATINGSAVEAREA_ARM_FPEXTRA_COUNT","","",null,null],[17,"MD_CONTEXT_ARM_GPR_COUNT","","",null,null],[17,"MD_CONTEXT_ARM_OLD","","",null,null],[17,"MD_CONTEXT_ARM","","",null,null],[17,"MD_FLOATINGSAVEAREA_ARM64_FPR_COUNT","","",null,null],[17,"MD_CONTEXT_ARM64_GPR_COUNT","","",null,null],[17,"MD_CONTEXT_ARM64","","",null,null],[17,"MD_CONTEXT_MIPS_GPR_COUNT","","",null,null],[17,"MD_FLOATINGSAVEAREA_MIPS_FPR_COUNT","","",null,null],[17,"MD_CONTEXT_MIPS_DSP_COUNT","","",null,null],[17,"MD_CONTEXT_MIPS","","",null,null],[17,"MD_CONTEXT_MIPS64","","",null,null],[17,"MD_FLOATINGSAVEAREA_PPC_FPR_COUNT","","",null,null],[17,"MD_VECTORSAVEAREA_PPC_VR_COUNT","","",null,null],[17,"MD_CONTEXT_PPC_GPR_COUNT","","",null,null],[17,"MD_CONTEXT_PPC","","",null,null],[17,"MD_CONTEXT_PPC64","","",null,null],[17,"MD_FLOATINGSAVEAREA_SPARC_FPR_COUNT","","",null,null],[17,"MD_CONTEXT_SPARC_GPR_COUNT","","",null,null],[17,"MD_CONTEXT_SPARC","","",null,null],[17,"MD_FLOATINGSAVEAREA_X86_REGISTERAREA_SIZE","","",null,null],[17,"MD_CONTEXT_X86_EXTENDED_REGISTERS_SIZE","","",null,null],[17,"MD_CONTEXT_X86","","",null,null],[17,"MD_VSFIXEDFILEINFO_SIGNATURE","","",null,null],[17,"MD_VSFIXEDFILEINFO_VERSION","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_FLAGS_DEBUG","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_FLAGS_PRERELEASE","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_FLAGS_PATCHED","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_FLAGS_PRIVATEBUILD","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_FLAGS_INFOINFERRED","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_FLAGS_SPECIALBUILD","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_OS_UNKNOWN","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_OS_DOS","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_OS_OS216","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_OS_OS232","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_OS_NT","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_OS_WINCE","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_OS__BASE","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_OS__WINDOWS16","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_OS__PM16","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_OS__PM32","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_OS__WINDOWS32","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_TYPE_UNKNOWN","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_TYPE_APP","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_TYPE_DLL","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_TYPE_DRV","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_TYPE_FONT","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_TYPE_VXD","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_TYPE_STATIC_LIB","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_SUBTYPE_UNKNOWN","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_PRINTER","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_KEYBOARD","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_LANGUAGE","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_DISPLAY","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_MOUSE","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_NETWORK","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_SYSTEM","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_INSTALLABLE","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_SOUND","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_COMM","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_INPUTMETHOD","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_VERSIONED_PRINTER","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_SUBTYPE_FONT_RASTER","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_SUBTYPE_FONT_VECTOR","","",null,null],[17,"MD_VSFIXEDFILEINFO_FILE_SUBTYPE_FONT_TRUETYPE","","",null,null],[17,"MD_HEADER_SIGNATURE","","",null,null],[17,"MD_HEADER_VERSION","","",null,null],[17,"MD_MODULE_SIZE","","",null,null],[17,"MD_CVINFOPDB20_SIGNATURE","","",null,null],[17,"MD_CVINFOPDB70_SIGNATURE","","",null,null],[17,"MD_CVINFOELF_SIGNATURE","","",null,null],[17,"MD_CVINFOCV41_SIGNATURE","","",null,null],[17,"MD_CVINFOCV50_SIGNATURE","","",null,null],[17,"MD_CVINFOUNKNOWN_SIGNATURE","","",null,null],[17,"MD_EXCEPTION_MAXIMUM_PARAMETERS","","",null,null],[17,"MD_MAX_PATH","","",null,null],[17,"MD_CONTEXT_ARM_REG_IOS_FP","","",null,null],[17,"MD_CONTEXT_ARM_REG_FP","","",null,null],[17,"MD_CONTEXT_ARM_REG_SP","","",null,null],[17,"MD_CONTEXT_ARM_REG_LR","","",null,null],[17,"MD_CONTEXT_ARM_REG_PC","","",null,null],[17,"MD_CONTEXT_ARM64_REG_FP","","",null,null],[17,"MD_CONTEXT_ARM64_REG_LR","","",null,null],[17,"MD_CONTEXT_ARM64_REG_SP","","",null,null],[17,"MD_CONTEXT_ARM64_REG_PC","","",null,null],[17,"MD_CONTEXT_MIPS_REG_S0","","",null,null],[17,"MD_CONTEXT_MIPS_REG_S1","","",null,null],[17,"MD_CONTEXT_MIPS_REG_S2","","",null,null],[17,"MD_CONTEXT_MIPS_REG_S3","","",null,null],[17,"MD_CONTEXT_MIPS_REG_S4","","",null,null],[17,"MD_CONTEXT_MIPS_REG_S5","","",null,null],[17,"MD_CONTEXT_MIPS_REG_S6","","",null,null],[17,"MD_CONTEXT_MIPS_REG_S7","","",null,null],[17,"MD_CONTEXT_MIPS_REG_GP","","",null,null],[17,"MD_CONTEXT_MIPS_REG_SP","","",null,null],[17,"MD_CONTEXT_MIPS_REG_FP","","",null,null],[17,"MD_CONTEXT_MIPS_REG_RA","","",null,null],[17,"MD_CONTEXT_PPC_REG_SP","","",null,null],[17,"MD_CONTEXT_PPC64_REG_SP","","",null,null],[17,"MD_CONTEXT_SPARC_REG_SP","","",null,null],[17,"MD_NORMAL","","",null,null],[17,"MD_WITH_DATA_SEGS","","",null,null],[17,"MD_WITH_FULL_MEMORY","","",null,null],[17,"MD_WITH_HANDLE_DATA","","",null,null],[17,"MD_FILTER_MEMORY","","",null,null],[17,"MD_SCAN_MEMORY","","",null,null],[17,"MD_WITH_UNLOADED_MODULES","","",null,null],[17,"MD_WITH_INDIRECTLY_REFERENCED_MEMORY","","",null,null],[17,"MD_FILTER_MODULE_PATHS","","",null,null],[17,"MD_WITH_PROCESS_THREAD_DATA","","",null,null],[17,"MD_WITH_PRIVATE_READ_WRITE_MEMORY","","",null,null],[17,"MD_WITHOUT_OPTIONAL_DATA","","",null,null],[17,"MD_WITH_FULL_MEMORY_INFO","","",null,null],[17,"MD_WITH_THREAD_INFO","","",null,null],[17,"MD_WITH_CODE_SEGS","","",null,null],[17,"MD_WITHOUT_AUXILLIARY_SEGS","","",null,null],[17,"MD_WITH_FULL_AUXILLIARY_STATE","","",null,null],[17,"MD_WITH_PRIVATE_WRITE_COPY_MEMORY","","",null,null],[17,"MD_IGNORE_INACCESSIBLE_MEMORY","","",null,null],[17,"MD_WITH_TOKEN_INFORMATION","","",null,null],[17,"MD_UNUSED_STREAM","","",null,null],[17,"MD_RESERVED_STREAM_0","","",null,null],[17,"MD_RESERVED_STREAM_1","","",null,null],[17,"MD_THREAD_LIST_STREAM","","",null,null],[17,"MD_MODULE_LIST_STREAM","","",null,null],[17,"MD_MEMORY_LIST_STREAM","","",null,null],[17,"MD_EXCEPTION_STREAM","","",null,null],[17,"MD_SYSTEM_INFO_STREAM","","",null,null],[17,"MD_THREAD_EX_LIST_STREAM","","",null,null],[17,"MD_MEMORY_64_LIST_STREAM","","",null,null],[17,"MD_COMMENT_STREAM_A","","",null,null],[17,"MD_COMMENT_STREAM_W","","",null,null],[17,"MD_HANDLE_DATA_STREAM","","",null,null],[17,"MD_FUNCTION_TABLE_STREAM","","",null,null],[17,"MD_UNLOADED_MODULE_LIST_STREAM","","",null,null],[17,"MD_MISC_INFO_STREAM","","",null,null],[17,"MD_MEMORY_INFO_LIST_STREAM","","",null,null],[17,"MD_THREAD_INFO_LIST_STREAM","","",null,null],[17,"MD_HANDLE_OPERATION_LIST_STREAM","","",null,null],[17,"MD_LAST_RESERVED_STREAM","","",null,null],[17,"MD_BREAKPAD_INFO_STREAM","","",null,null],[17,"MD_ASSERTION_INFO_STREAM","","",null,null],[17,"MD_LINUX_CPU_INFO","","",null,null],[17,"MD_LINUX_PROC_STATUS","","",null,null],[17,"MD_LINUX_LSB_RELEASE","","",null,null],[17,"MD_LINUX_CMD_LINE","","",null,null],[17,"MD_LINUX_ENVIRON","","",null,null],[17,"MD_LINUX_AUXV","","",null,null],[17,"MD_LINUX_MAPS","","",null,null],[17,"MD_LINUX_DSO_DEBUG","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGHUP","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGINT","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGQUIT","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGILL","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGTRAP","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGABRT","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGBUS","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGFPE","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGKILL","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGUSR1","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGSEGV","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGUSR2","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGPIPE","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGALRM","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGTERM","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGSTKFLT","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGCHLD","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGCONT","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGSTOP","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGTSTP","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGTTIN","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGTTOU","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGURG","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGXCPU","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGXFSZ","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGVTALRM","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGPROF","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGWINCH","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGIO","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGPWR","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_SIGSYS","","",null,null],[17,"MD_EXCEPTION_CODE_LIN_DUMP_REQUESTED","","",null,null],[17,"MD_EXCEPTION_MAC_BAD_ACCESS","","",null,null],[17,"MD_EXCEPTION_MAC_BAD_INSTRUCTION","","",null,null],[17,"MD_EXCEPTION_MAC_ARITHMETIC","","",null,null],[17,"MD_EXCEPTION_MAC_EMULATION","","",null,null],[17,"MD_EXCEPTION_MAC_SOFTWARE","","",null,null],[17,"MD_EXCEPTION_MAC_BREAKPOINT","","",null,null],[17,"MD_EXCEPTION_MAC_SYSCALL","","",null,null],[17,"MD_EXCEPTION_MAC_MACH_SYSCALL","","",null,null],[17,"MD_EXCEPTION_MAC_RPC_ALERT","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_INVALID_ADDRESS","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PROTECTION_FAILURE","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_NO_ACCESS","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_MEMORY_FAILURE","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_MEMORY_ERROR","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_BAD_SYSCALL","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_BAD_PIPE","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_ABORT","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_NS_EXCEPTION","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_ARM_DA_ALIGN","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_ARM_DA_DEBUG","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_ARM_UNDEFINED","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_ARM_BREAKPOINT","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_VM_PROT_READ","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_BADSPACE","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_UNALIGNED","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_INVALID_SYSCALL","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_UNIMPLEMENTED_INSTRUCTION","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_PRIVILEGED_INSTRUCTION","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_PRIVILEGED_REGISTER","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_TRACE","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_PERFORMANCE_MONITOR","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_OVERFLOW","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_ZERO_DIVIDE","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_FLOAT_INEXACT","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_FLOAT_ZERO_DIVIDE","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_FLOAT_UNDERFLOW","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_FLOAT_OVERFLOW","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_FLOAT_NOT_A_NUMBER","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_NO_EMULATION","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_ALTIVEC_ASSIST","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_TRAP","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_MIGRATE","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_PPC_BREAKPOINT","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_X86_INVALID_OPERATION","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_X86_DIV","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_X86_INTO","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_X86_NOEXT","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_X86_EXTOVR","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_X86_EXTERR","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_X86_EMERR","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_X86_BOUND","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_X86_SSEEXTERR","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_X86_SGL","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_X86_BPT","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_X86_INVALID_TASK_STATE_SEGMENT","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_X86_SEGMENT_NOT_PRESENT","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_X86_STACK_FAULT","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_X86_GENERAL_PROTECTION_FAULT","","",null,null],[17,"MD_EXCEPTION_CODE_MAC_X86_ALIGNMENT_FAULT","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_UNKNOWN","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_TRAP_EXCEP","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_PRIV_INSTR","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_ILLEGAL_INSTR","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_INSTR_STORAGE","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_INSTR_SEGMENT","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_DATA_STORAGE","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_DATA_SEGMENT","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_FLOAT_POINT","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_DABR_MATCH","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_ALIGN_EXCEP","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_MEMORY_ACCESS","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_COPRO_ALIGN","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_COPRO_INVALID_COM","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_COPRO_ERR","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_COPRO_FIR","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_COPRO_DATA_SEGMENT","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_COPRO_DATA_STORAGE","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_COPRO_STOP_INSTR","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_COPRO_HALT_INSTR","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_COPRO_HALTINST_UNKNOWN","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_COPRO_MEMORY_ACCESS","","",null,null],[17,"MD_EXCEPTION_CODE_PS3_GRAPHIC","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGHUP","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGINT","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGQUIT","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGILL","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGTRAP","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGIOT","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGABRT","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGEMT","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGFPE","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGKILL","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGBUS","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGSEGV","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGSYS","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGPIPE","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGALRM","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGTERM","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGUSR1","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGUSR2","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGCLD","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGCHLD","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGPWR","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGWINCH","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGURG","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGPOLL","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGIO","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGSTOP","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGTSTP","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGCONT","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGTTIN","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGTTOU","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGVTALRM","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGPROF","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGXCPU","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGXFSZ","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGWAITING","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGLWP","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGFREEZE","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGTHAW","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGCANCEL","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGLOST","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGXRES","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGJVM1","","",null,null],[17,"MD_EXCEPTION_CODE_SOL_SIGJVM2","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_CONTROL_C","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_GUARD_PAGE_VIOLATION","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_DATATYPE_MISALIGNMENT","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_BREAKPOINT","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_SINGLE_STEP","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_ACCESS_VIOLATION","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_IN_PAGE_ERROR","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_INVALID_HANDLE","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_ILLEGAL_INSTRUCTION","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_NONCONTINUABLE_EXCEPTION","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_INVALID_DISPOSITION","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_ARRAY_BOUNDS_EXCEEDED","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_FLOAT_DENORMAL_OPERAND","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_FLOAT_DIVIDE_BY_ZERO","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_FLOAT_INEXACT_RESULT","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_FLOAT_INVALID_OPERATION","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_FLOAT_OVERFLOW","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_FLOAT_STACK_CHECK","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_FLOAT_UNDERFLOW","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_INTEGER_DIVIDE_BY_ZERO","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_INTEGER_OVERFLOW","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_PRIVILEGED_INSTRUCTION","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_STACK_OVERFLOW","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_POSSIBLE_DEADLOCK","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_STACK_BUFFER_OVERRUN","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_HEAP_CORRUPTION","","",null,null],[17,"MD_EXCEPTION_CODE_WIN_UNHANDLED_CPP_EXCEPTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNSUCCESSFUL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_IMPLEMENTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_INFO_CLASS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INFO_LENGTH_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACCESS_VIOLATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IN_PAGE_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PAGEFILE_QUOTA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_HANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_INITIAL_STACK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_INITIAL_PC","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_CID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TIMER_NOT_CANCELED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PARAMETER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_SUCH_DEVICE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_SUCH_FILE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_DEVICE_REQUEST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_END_OF_FILE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WRONG_VOLUME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_MEDIA_IN_DEVICE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNRECOGNIZED_MEDIA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NONEXISTENT_SECTOR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MORE_PROCESSING_REQUIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_MEMORY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CONFLICTING_ADDRESSES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_MAPPED_VIEW","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNABLE_TO_FREE_VM","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNABLE_TO_DELETE_SECTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_SYSTEM_SERVICE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ILLEGAL_INSTRUCTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_LOCK_SEQUENCE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_VIEW_SIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_FILE_FOR_SECTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ALREADY_COMMITTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACCESS_DENIED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BUFFER_TOO_SMALL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OBJECT_TYPE_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NONCONTINUABLE_EXCEPTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_DISPOSITION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNWIND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_STACK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_UNWIND_TARGET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_LOCKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PARITY_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNABLE_TO_DECOMMIT_VM","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_COMMITTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PORT_ATTRIBUTES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PORT_MESSAGE_TOO_LONG","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PARAMETER_MIX","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_QUOTA_LOWER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DISK_CORRUPT_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OBJECT_NAME_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OBJECT_NAME_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OBJECT_NAME_COLLISION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PORT_DISCONNECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DEVICE_ALREADY_ATTACHED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OBJECT_PATH_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OBJECT_PATH_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OBJECT_PATH_SYNTAX_BAD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DATA_OVERRUN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DATA_LATE_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DATA_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CRC_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SECTION_TOO_BIG","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PORT_CONNECTION_REFUSED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PORT_HANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SHARING_VIOLATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_QUOTA_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PAGE_PROTECTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MUTANT_NOT_OWNED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SEMAPHORE_LIMIT_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PORT_ALREADY_SET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SECTION_NOT_IMAGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SUSPEND_COUNT_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_THREAD_IS_TERMINATING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_WORKING_SET_LIMIT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INCOMPATIBLE_FILE_MAP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SECTION_PROTECTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_EAS_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_EA_TOO_LARGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NONEXISTENT_EA_ENTRY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_EAS_ON_FILE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_EA_CORRUPT_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FILE_LOCK_CONFLICT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOCK_NOT_GRANTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DELETE_PENDING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTL_FILE_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNKNOWN_REVISION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REVISION_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_OWNER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PRIMARY_GROUP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_IMPERSONATION_TOKEN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANT_DISABLE_MANDATORY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_LOGON_SERVERS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_SUCH_LOGON_SESSION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_SUCH_PRIVILEGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PRIVILEGE_NOT_HELD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_ACCOUNT_NAME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_USER_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_SUCH_USER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GROUP_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_SUCH_GROUP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MEMBER_IN_GROUP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MEMBER_NOT_IN_GROUP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LAST_ADMIN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WRONG_PASSWORD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ILL_FORMED_PASSWORD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PASSWORD_RESTRICTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOGON_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACCOUNT_RESTRICTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_LOGON_HOURS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_WORKSTATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PASSWORD_EXPIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACCOUNT_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NONE_MAPPED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TOO_MANY_LUIDS_REQUESTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LUIDS_EXHAUSTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_SUB_AUTHORITY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_ACL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_SID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_SECURITY_DESCR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PROCEDURE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_IMAGE_FORMAT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_TOKEN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_INHERITANCE_ACL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RANGE_NOT_LOCKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DISK_FULL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SERVER_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SERVER_NOT_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TOO_MANY_GUIDS_REQUESTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GUIDS_EXHAUSTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_ID_AUTHORITY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_AGENTS_EXHAUSTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_VOLUME_LABEL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SECTION_NOT_EXTENDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_MAPPED_DATA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RESOURCE_DATA_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RESOURCE_TYPE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RESOURCE_NAME_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ARRAY_BOUNDS_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLOAT_DENORMAL_OPERAND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLOAT_DIVIDE_BY_ZERO","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLOAT_INEXACT_RESULT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLOAT_INVALID_OPERATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLOAT_OVERFLOW","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLOAT_STACK_CHECK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLOAT_UNDERFLOW","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INTEGER_DIVIDE_BY_ZERO","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INTEGER_OVERFLOW","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PRIVILEGED_INSTRUCTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TOO_MANY_PAGING_FILES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FILE_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ALLOTTED_SPACE_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INSUFFICIENT_RESOURCES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DFS_EXIT_PATH_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DEVICE_DATA_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DEVICE_NOT_CONNECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DEVICE_POWER_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FREE_VM_NOT_AT_BASE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MEMORY_NOT_ALLOCATED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WORKING_SET_QUOTA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MEDIA_WRITE_PROTECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DEVICE_NOT_READY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_GROUP_ATTRIBUTES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_IMPERSONATION_LEVEL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANT_OPEN_ANONYMOUS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_VALIDATION_CLASS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_TOKEN_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_MASTER_BOOT_RECORD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INSTRUCTION_MISALIGNMENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INSTANCE_NOT_AVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PIPE_NOT_AVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PIPE_STATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PIPE_BUSY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ILLEGAL_FUNCTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PIPE_DISCONNECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PIPE_CLOSING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PIPE_CONNECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PIPE_LISTENING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_READ_MODE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IO_TIMEOUT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FILE_FORCED_CLOSED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PROFILING_NOT_STARTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PROFILING_NOT_STOPPED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_COULD_NOT_INTERPRET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FILE_IS_A_DIRECTORY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REMOTE_NOT_LISTENING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DUPLICATE_NAME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_NETWORK_PATH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NETWORK_BUSY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DEVICE_DOES_NOT_EXIST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TOO_MANY_COMMANDS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ADAPTER_HARDWARE_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_NETWORK_RESPONSE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNEXPECTED_NETWORK_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_REMOTE_ADAPTER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PRINT_QUEUE_FULL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_SPOOL_SPACE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PRINT_CANCELLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NETWORK_NAME_DELETED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NETWORK_ACCESS_DENIED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_DEVICE_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_NETWORK_NAME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TOO_MANY_NAMES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TOO_MANY_SESSIONS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SHARING_PAUSED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REQUEST_NOT_ACCEPTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REDIRECTOR_PAUSED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NET_WRITE_FAULT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PROFILING_AT_LIMIT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_SAME_DEVICE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FILE_RENAMED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VIRTUAL_CIRCUIT_CLOSED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_SECURITY_ON_OBJECT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANT_WAIT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PIPE_EMPTY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANT_ACCESS_DOMAIN_INFO","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANT_TERMINATE_SELF","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_SERVER_STATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_DOMAIN_STATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_DOMAIN_ROLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_SUCH_DOMAIN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DOMAIN_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DOMAIN_LIMIT_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OPLOCK_NOT_GRANTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_OPLOCK_PROTOCOL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INTERNAL_DB_CORRUPTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INTERNAL_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GENERIC_NOT_MAPPED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_DESCRIPTOR_FORMAT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_USER_BUFFER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNEXPECTED_IO_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNEXPECTED_MM_CREATE_ERR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNEXPECTED_MM_MAP_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNEXPECTED_MM_EXTEND_ERR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_LOGON_PROCESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOGON_SESSION_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PARAMETER_1","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PARAMETER_2","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PARAMETER_3","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PARAMETER_4","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PARAMETER_5","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PARAMETER_6","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PARAMETER_7","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PARAMETER_8","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PARAMETER_9","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PARAMETER_10","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PARAMETER_11","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PARAMETER_12","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REDIRECTOR_NOT_STARTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REDIRECTOR_STARTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_STACK_OVERFLOW","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_SUCH_PACKAGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_FUNCTION_TABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VARIABLE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DIRECTORY_NOT_EMPTY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FILE_CORRUPT_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_A_DIRECTORY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_LOGON_SESSION_STATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOGON_SESSION_COLLISION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NAME_TOO_LONG","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FILES_OPEN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CONNECTION_IN_USE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MESSAGE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PROCESS_IS_TERMINATING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_LOGON_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_GUID_TRANSLATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANNOT_IMPERSONATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IMAGE_ALREADY_LOADED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ABIOS_NOT_PRESENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ABIOS_LID_NOT_EXIST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ABIOS_LID_ALREADY_OWNED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ABIOS_NOT_LID_OWNER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ABIOS_INVALID_COMMAND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ABIOS_INVALID_LID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ABIOS_SELECTOR_NOT_AVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ABIOS_INVALID_SELECTOR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_LDT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_LDT_SIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_LDT_OFFSET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_LDT_DESCRIPTOR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_IMAGE_NE_FORMAT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RXACT_INVALID_STATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RXACT_COMMIT_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MAPPED_FILE_SIZE_ZERO","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TOO_MANY_OPENED_FILES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANCELLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANNOT_DELETE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_COMPUTER_NAME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FILE_DELETED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SPECIAL_ACCOUNT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SPECIAL_GROUP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SPECIAL_USER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MEMBERS_PRIMARY_GROUP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FILE_CLOSED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TOO_MANY_THREADS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_THREAD_NOT_IN_PROCESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TOKEN_ALREADY_IN_USE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PAGEFILE_QUOTA_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_COMMITMENT_LIMIT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_IMAGE_LE_FORMAT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_IMAGE_NOT_MZ","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_IMAGE_PROTECT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_IMAGE_WIN_16","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOGON_SERVER_CONFLICT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TIME_DIFFERENCE_AT_DC","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SYNCHRONIZATION_REQUIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DLL_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OPEN_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IO_PRIVILEGE_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ORDINAL_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ENTRYPOINT_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CONTROL_C_EXIT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOCAL_DISCONNECT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REMOTE_DISCONNECT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REMOTE_RESOURCES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LINK_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LINK_TIMEOUT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_CONNECTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_ADDRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DLL_INIT_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MISSING_SYSTEMFILE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNHANDLED_EXCEPTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_APP_INIT_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PAGEFILE_CREATE_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_PAGEFILE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_LEVEL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WRONG_PASSWORD_CORE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ILLEGAL_FLOAT_CONTEXT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PIPE_BROKEN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REGISTRY_CORRUPT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REGISTRY_IO_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_EVENT_PAIR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNRECOGNIZED_VOLUME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SERIAL_NO_DEVICE_INITED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_SUCH_ALIAS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MEMBER_NOT_IN_ALIAS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MEMBER_IN_ALIAS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ALIAS_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOGON_NOT_GRANTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TOO_MANY_SECRETS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SECRET_TOO_LONG","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INTERNAL_DB_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FULLSCREEN_MODE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TOO_MANY_CONTEXT_IDS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOGON_TYPE_NOT_GRANTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_REGISTRY_FILE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NT_CROSS_ENCRYPTION_REQUIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DOMAIN_CTRLR_CONFIG_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FT_MISSING_MEMBER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ILL_FORMED_SERVICE_ENTRY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ILLEGAL_CHARACTER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNMAPPABLE_CHARACTER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNDEFINED_CHARACTER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLOPPY_VOLUME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLOPPY_ID_MARK_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLOPPY_WRONG_CYLINDER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLOPPY_UNKNOWN_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLOPPY_BAD_REGISTERS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DISK_RECALIBRATE_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DISK_OPERATION_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DISK_RESET_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SHARED_IRQ_BUSY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FT_ORPHANING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BIOS_FAILED_TO_CONNECT_INTERRUPT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PARTITION_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_BLOCK_LENGTH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DEVICE_NOT_PARTITIONED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNABLE_TO_LOCK_MEDIA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNABLE_TO_UNLOAD_MEDIA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_EOM_OVERFLOW","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_MEDIA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_SUCH_MEMBER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_MEMBER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_KEY_DELETED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_LOG_SPACE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TOO_MANY_SIDS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LM_CROSS_ENCRYPTION_REQUIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_KEY_HAS_CHILDREN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CHILD_MUST_BE_VOLATILE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DEVICE_CONFIGURATION_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DRIVER_INTERNAL_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_DEVICE_STATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IO_DEVICE_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DEVICE_PROTOCOL_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BACKUP_CONTROLLER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_FILE_FULL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TOO_LATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_TRUST_LSA_SECRET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_TRUST_SAM_ACCOUNT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRUSTED_DOMAIN_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRUSTED_RELATIONSHIP_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_EVENTLOG_FILE_CORRUPT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_EVENTLOG_CANT_START","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRUST_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MUTANT_LIMIT_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NETLOGON_NOT_STARTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACCOUNT_EXPIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_POSSIBLE_DEADLOCK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NETWORK_CREDENTIAL_CONFLICT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REMOTE_SESSION_LIMIT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_EVENTLOG_FILE_CHANGED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOLOGON_WORKSTATION_TRUST_ACCOUNT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOLOGON_SERVER_TRUST_ACCOUNT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DOMAIN_TRUST_INCONSISTENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FS_DRIVER_REQUIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IMAGE_ALREADY_LOADED_AS_DLL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SHORT_NAMES_NOT_ENABLED_ON_VOLUME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SECURITY_STREAM_IS_INCONSISTENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_LOCK_RANGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_ACE_CONDITION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IMAGE_SUBSYSTEM_NOT_PRESENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOTIFICATION_GUID_ALREADY_DEFINED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_EXCEPTION_HANDLER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DUPLICATE_PRIVILEGES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_ALLOWED_ON_SYSTEM_FILE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REPAIR_NEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_QUOTA_NOT_ENABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_APPLICATION_PACKAGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NETWORK_OPEN_RESTRICTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_USER_SESSION_KEY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_USER_SESSION_DELETED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RESOURCE_LANG_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INSUFF_SERVER_RESOURCES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_BUFFER_SIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_ADDRESS_COMPONENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_ADDRESS_WILDCARD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TOO_MANY_ADDRESSES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ADDRESS_ALREADY_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ADDRESS_CLOSED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CONNECTION_DISCONNECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CONNECTION_RESET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TOO_MANY_NODES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_ABORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_TIMED_OUT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_NO_RELEASE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_NO_MATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_RESPONDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_INVALID_ID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_INVALID_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_SERVER_SESSION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_CLIENT_SESSION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANNOT_LOAD_REGISTRY_FILE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DEBUG_ATTACH_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SYSTEM_PROCESS_TERMINATED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DATA_NOT_ACCEPTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_BROWSER_SERVERS_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VDM_HARD_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DRIVER_CANCEL_TIMEOUT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REPLY_MESSAGE_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MAPPED_ALIGNMENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IMAGE_CHECKSUM_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOST_WRITEBEHIND_DATA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLIENT_SERVER_PARAMETERS_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PASSWORD_MUST_CHANGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_TINY_STREAM","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RECOVERY_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_STACK_OVERFLOW_READ","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FAIL_CHECK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DUPLICATE_OBJECTID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OBJECTID_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CONVERT_TO_LARGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RETRY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FOUND_OUT_OF_SCOPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ALLOCATE_BUCKET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PROPSET_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MARSHALL_OVERFLOW","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_VARIANT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DOMAIN_CONTROLLER_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACCOUNT_LOCKED_OUT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HANDLE_NOT_CLOSABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CONNECTION_REFUSED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRACEFUL_DISCONNECT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ADDRESS_ALREADY_ASSOCIATED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ADDRESS_NOT_ASSOCIATED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CONNECTION_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CONNECTION_ACTIVE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NETWORK_UNREACHABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HOST_UNREACHABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PROTOCOL_UNREACHABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PORT_UNREACHABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REQUEST_ABORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CONNECTION_ABORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_COMPRESSION_BUFFER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_USER_MAPPED_FILE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_AUDIT_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TIMER_RESOLUTION_NOT_SET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CONNECTION_COUNT_LIMIT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOGIN_TIME_RESTRICTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOGIN_WKSTA_RESTRICTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IMAGE_MP_UP_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INSUFFICIENT_LOGON_INFO","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_DLL_ENTRYPOINT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_SERVICE_ENTRYPOINT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LPC_REPLY_LOST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IP_ADDRESS_CONFLICT1","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IP_ADDRESS_CONFLICT2","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REGISTRY_QUOTA_LIMIT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PATH_NOT_COVERED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_CALLBACK_ACTIVE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LICENSE_QUOTA_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PWD_TOO_SHORT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PWD_TOO_RECENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PWD_HISTORY_CONFLICT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PLUGPLAY_NO_DEVICE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNSUPPORTED_COMPRESSION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_HW_PROFILE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PLUGPLAY_DEVICE_PATH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DRIVER_ORDINAL_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DRIVER_ENTRYPOINT_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RESOURCE_NOT_OWNED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TOO_MANY_LINKS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_QUOTA_LIST_INCONSISTENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FILE_IS_OFFLINE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_EVALUATION_EXPIRATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ILLEGAL_DLL_RELOCATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LICENSE_VIOLATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DLL_INIT_FAILED_LOGOFF","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DRIVER_UNABLE_TO_LOAD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DFS_UNAVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLUME_DISMOUNTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WX86_INTERNAL_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WX86_FLOAT_STACK_CHECK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VALIDATE_CONTINUE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_MATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_MORE_MATCHES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_A_REPARSE_POINT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IO_REPARSE_TAG_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IO_REPARSE_TAG_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IO_REPARSE_DATA_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IO_REPARSE_TAG_NOT_HANDLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PWD_TOO_LONG","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_STOWED_EXCEPTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REPARSE_POINT_NOT_RESOLVED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DIRECTORY_IS_A_REPARSE_POINT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RANGE_LIST_CONFLICT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SOURCE_ELEMENT_EMPTY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DESTINATION_ELEMENT_FULL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ILLEGAL_ELEMENT_ADDRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MAGAZINE_NOT_PRESENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REINITIALIZATION_NEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ENCRYPTION_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DECRYPTION_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RANGE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_RECOVERY_POLICY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_EFS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WRONG_EFS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_USER_KEYS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FILE_NOT_ENCRYPTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_EXPORT_FORMAT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FILE_ENCRYPTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WMI_GUID_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WMI_INSTANCE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WMI_ITEMID_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WMI_TRY_AGAIN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SHARED_POLICY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_POLICY_OBJECT_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_POLICY_ONLY_IN_DS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLUME_NOT_UPGRADED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REMOTE_STORAGE_NOT_ACTIVE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REMOTE_STORAGE_MEDIA_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_TRACKING_SERVICE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SERVER_SID_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_NO_ATTRIBUTE_OR_VALUE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_INVALID_ATTRIBUTE_SYNTAX","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_ATTRIBUTE_TYPE_UNDEFINED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_ATTRIBUTE_OR_VALUE_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_BUSY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_UNAVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_NO_RIDS_ALLOCATED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_NO_MORE_RIDS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_INCORRECT_ROLE_OWNER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_RIDMGR_INIT_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_OBJ_CLASS_VIOLATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_CANT_ON_NON_LEAF","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_CANT_ON_RDN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_CANT_MOD_OBJ_CLASS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_CROSS_DOM_MOVE_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_GC_NOT_AVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DIRECTORY_SERVICE_REQUIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REPARSE_ATTRIBUTE_CONFLICT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANT_ENABLE_DENY_ONLY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLOAT_MULTIPLE_FAULTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLOAT_MULTIPLE_TRAPS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DEVICE_REMOVED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_JOURNAL_DELETE_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_JOURNAL_NOT_ACTIVE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOINTERFACE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_RIDMGR_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_ADMIN_LIMIT_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DRIVER_FAILED_SLEEP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MUTUAL_AUTHENTICATION_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CORRUPT_SYSTEM_FILE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DATATYPE_MISALIGNMENT_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WMI_READ_ONLY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WMI_SET_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_COMMITMENT_MINIMUM","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REG_NAT_CONSUMPTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSPORT_FULL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_SAM_INIT_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ONLY_IF_CONNECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_SENSITIVE_GROUP_VIOLATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PNP_RESTART_ENUMERATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_JOURNAL_ENTRY_DELETED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_CANT_MOD_PRIMARYGROUPID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SYSTEM_IMAGE_BAD_SIGNATURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PNP_REBOOT_REQUIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_POWER_STATE_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_INVALID_GROUP_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_HAVE_PRIMARY_MEMBERS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WMI_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INSUFFICIENT_POWER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SAM_NEED_BOOTKEY_PASSWORD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SAM_NEED_BOOTKEY_FLOPPY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_CANT_START","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_INIT_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SAM_INIT_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_GC_REQUIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_LOCAL_MEMBER_OF_LOCAL_ONLY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_NO_FPO_IN_UNIVERSAL_GROUPS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MULTIPLE_FAULT_VIOLATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CURRENT_DOMAIN_NOT_ALLOWED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANNOT_MAKE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SYSTEM_SHUTDOWN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_INIT_FAILURE_CONSOLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_SAM_INIT_FAILURE_CONSOLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNFINISHED_CONTEXT_DELETED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_TGT_REPLY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OBJECTID_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_IP_ADDRESSES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WRONG_CREDENTIAL_HANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CRYPTO_SYSTEM_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MAX_REFERRALS_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MUST_BE_KDC","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_STRONG_CRYPTO_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TOO_MANY_PRINCIPALS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_PA_DATA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PKINIT_NAME_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SMARTCARD_LOGON_REQUIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_KDC_INVALID_REQUEST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_KDC_UNABLE_TO_REFER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_KDC_UNKNOWN_ETYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SHUTDOWN_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SERVER_SHUTDOWN_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_SUPPORTED_ON_SBS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WMI_GUID_DISCONNECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WMI_ALREADY_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WMI_ALREADY_ENABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MFT_TOO_FRAGMENTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_COPY_PROTECTION_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CSS_AUTHENTICATION_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CSS_KEY_NOT_PRESENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CSS_KEY_NOT_ESTABLISHED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CSS_SCRAMBLED_SECTOR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CSS_REGION_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CSS_RESETS_EXHAUSTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PASSWORD_CHANGE_REQUIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PKINIT_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SMARTCARD_SUBSYSTEM_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_KERB_KEY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HOST_DOWN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNSUPPORTED_PREAUTH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_EFS_ALG_BLOB_TOO_BIG","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PORT_NOT_SET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DEBUGGER_INACTIVE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_VERSION_CHECK_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_AUDITING_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PRENT4_MACHINE_ACCOUNT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_IMAGE_WIN_32","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_IMAGE_WIN_64","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_BINDINGS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NETWORK_SESSION_EXPIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_APPHELP_BLOCK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ALL_SIDS_FILTERED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_SAFE_MODE_DRIVER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACCESS_DISABLED_BY_POLICY_DEFAULT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACCESS_DISABLED_BY_POLICY_PATH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACCESS_DISABLED_BY_POLICY_PUBLISHER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACCESS_DISABLED_BY_POLICY_OTHER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FAILED_DRIVER_ENTRY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DEVICE_ENUMERATION_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MOUNT_POINT_NOT_RESOLVED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_DEVICE_OBJECT_PARAMETER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MCA_OCCURED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DRIVER_BLOCKED_CRITICAL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DRIVER_BLOCKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DRIVER_DATABASE_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SYSTEM_HIVE_TOO_LARGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_IMPORT_OF_NON_DLL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_SECRETS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FAILED_STACK_SWITCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HEAP_CORRUPTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SMARTCARD_WRONG_PIN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SMARTCARD_CARD_BLOCKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SMARTCARD_CARD_NOT_AUTHENTICATED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SMARTCARD_NO_CARD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SMARTCARD_NO_KEY_CONTAINER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SMARTCARD_NO_CERTIFICATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SMARTCARD_NO_KEYSET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SMARTCARD_IO_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DOWNGRADE_DETECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SMARTCARD_CERT_REVOKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ISSUING_CA_UNTRUSTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REVOCATION_OFFLINE_C","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PKINIT_CLIENT_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SMARTCARD_CERT_EXPIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DRIVER_FAILED_PRIOR_UNLOAD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SMARTCARD_SILENT_CONTEXT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PER_USER_TRUST_QUOTA_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ALL_USER_TRUST_QUOTA_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_USER_DELETE_TRUST_QUOTA_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_NAME_NOT_UNIQUE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_DUPLICATE_ID_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_GROUP_CONVERSION_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLSNAP_PREPARE_HIBERNATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_USER2USER_REQUIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_STACK_BUFFER_OVERRUN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_S4U_PROT_SUPPORT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CROSSREALM_DELEGATION_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REVOCATION_OFFLINE_KDC","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ISSUING_CA_UNTRUSTED_KDC","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_KDC_CERT_EXPIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_KDC_CERT_REVOKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PARAMETER_QUOTA_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HIBERNATION_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DELAY_LOAD_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_AUTHENTICATION_FIREWALL_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VDM_DISALLOWED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HUNG_DISPLAY_DRIVER_THREAD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_CRUNTIME_PARAMETER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NTLM_BLOCKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_SRC_SID_EXISTS_IN_FOREST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_DOMAIN_NAME_EXISTS_IN_FOREST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_FLAT_NAME_EXISTS_IN_FOREST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_USER_PRINCIPAL_NAME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FATAL_USER_CALLBACK_EXCEPTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ASSERTION_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VERIFIER_STOP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CALLBACK_POP_STACK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INCOMPATIBLE_DRIVER_BLOCKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HIVE_UNLOADED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_COMPRESSION_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FILE_SYSTEM_LIMITATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_IMAGE_HASH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_CAPABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REQUEST_OUT_OF_SEQUENCE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IMPLEMENTATION_LIMIT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ELEVATION_REQUIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_SECURITY_CONTEXT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PKU2U_CERT_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BEYOND_VDL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ENCOUNTERED_WRITE_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PTE_CHANGED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PURGE_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CRED_REQUIRES_CONFIRMATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CS_ENCRYPTION_INVALID_SERVER_RESPONSE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CS_ENCRYPTION_UNSUPPORTED_SERVER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CS_ENCRYPTION_NEW_ENCRYPTED_FILE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CS_ENCRYPTION_FILE_NOT_CSE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_LABEL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DRIVER_PROCESS_TERMINATED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_AMBIGUOUS_SYSTEM_DEVICE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SYSTEM_DEVICE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RESTART_BOOT_APPLICATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INSUFFICIENT_NVRAM_RESOURCES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_SESSION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_THREAD_ALREADY_IN_SESSION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_THREAD_NOT_IN_SESSION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_WEIGHT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REQUEST_PAUSED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_RANGES_PROCESSED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DISK_RESOURCES_EXHAUSTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NEEDS_REMEDIATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DEVICE_FEATURE_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DEVICE_UNREACHABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_TOKEN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SERVER_UNAVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FILE_NOT_AVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DEVICE_INSUFFICIENT_RESOURCES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PACKAGE_UPDATING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_READ_FROM_COPY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FT_WRITE_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FT_DI_SCAN_REQUIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OBJECT_NOT_EXTERNALLY_BACKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_EXTERNAL_BACKING_PROVIDER_UNKNOWN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DATA_CHECKSUM_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INTERMIXED_KERNEL_EA_OPERATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRIM_READ_ZERO_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TOO_MANY_SEGMENT_DESCRIPTORS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_OFFSET_ALIGNMENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_FIELD_IN_PARAMETER_LIST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OPERATION_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_INITIATOR_TARGET_PATH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SCRUB_DATA_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_REDUNDANT_STORAGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RESIDENT_FILE_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_COMPRESSED_FILE_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DIRECTORY_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IO_OPERATION_TIMEOUT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SYSTEM_NEEDS_REMEDIATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_APPX_INTEGRITY_FAILURE_CLR_NGEN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SHARE_UNAVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_APISET_NOT_HOSTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_APISET_NOT_PRESENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DEVICE_HARDWARE_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_TASK_NAME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_TASK_INDEX","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_THREAD_ALREADY_IN_TASK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CALLBACK_BYPASS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_UNDEFINED_SCOPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_CAP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_GUI_PROCESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FAIL_FAST_EXCEPTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IMAGE_CERT_REVOKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DYNAMIC_CODE_BLOCKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PORT_CLOSED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MESSAGE_LOST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_MESSAGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REQUEST_CANCELED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RECURSIVE_DISPATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LPC_RECEIVE_BUFFER_EXPECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LPC_INVALID_CONNECTION_USAGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LPC_REQUESTS_NOT_ALLOWED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RESOURCE_IN_USE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HARDWARE_MEMORY_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_THREADPOOL_HANDLE_EXCEPTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_THREADPOOL_SET_EVENT_ON_COMPLETION_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_THREADPOOL_RELEASE_SEMAPHORE_ON_COMPLETION_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_THREADPOOL_RELEASE_MUTEX_ON_COMPLETION_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_THREADPOOL_FREE_LIBRARY_ON_COMPLETION_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_THREADPOOL_RELEASED_DURING_OPERATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CALLBACK_RETURNED_WHILE_IMPERSONATING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_APC_RETURNED_WHILE_IMPERSONATING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PROCESS_IS_PROTECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MCA_EXCEPTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CERTIFICATE_MAPPING_NOT_UNIQUE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SYMLINK_CLASS_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_IDN_NORMALIZATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_UNICODE_TRANSLATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ALREADY_REGISTERED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CONTEXT_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PORT_ALREADY_HAS_COMPLETION_LIST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CALLBACK_RETURNED_THREAD_PRIORITY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_THREAD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CALLBACK_RETURNED_TRANSACTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CALLBACK_RETURNED_LDR_LOCK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CALLBACK_RETURNED_LANG","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CALLBACK_RETURNED_PRI_BACK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CALLBACK_RETURNED_THREAD_AFFINITY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DISK_REPAIR_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_DOMAIN_RENAME_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DISK_QUOTA_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CONTENT_BLOCKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_CLUSTERS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLUME_DIRTY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DISK_REPAIR_UNSUCCESSFUL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CORRUPT_LOG_OVERFULL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CORRUPT_LOG_CORRUPTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CORRUPT_LOG_UNAVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CORRUPT_LOG_DELETED_FULL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CORRUPT_LOG_CLEARED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ORPHAN_NAME_EXHAUSTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PROACTIVE_SCAN_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ENCRYPTED_IO_NOT_POSSIBLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CORRUPT_LOG_UPLEVEL_RECORDS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FILE_CHECKED_OUT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CHECKOUT_REQUIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_FILE_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FILE_TOO_LARGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FORMS_AUTH_REQUIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VIRUS_INFECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VIRUS_DELETED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_MCFG_TABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANNOT_BREAK_OPLOCK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_KEY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BAD_DATA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_KEY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FILE_HANDLE_REVOKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WOW_ASSERTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_SIGNATURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HMAC_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_AUTH_TAG_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_STATE_TRANSITION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_KERNEL_INFO_VERSION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PEP_INFO_VERSION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IPSEC_QUEUE_OVERFLOW","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ND_QUEUE_OVERFLOW","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HOPLIMIT_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PROTOCOL_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FASTPATH_REJECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_XML_PARSE_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_XMLDSIG_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_WRONG_COMPARTMENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_AUTHIP_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_OID_MAPPED_GROUP_CANT_HAVE_MEMBERS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DS_OID_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INCORRECT_ACCOUNT_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HASH_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HASH_NOT_PRESENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SECONDARY_IC_PROVIDER_NOT_REGISTERED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GPIO_CLIENT_INFORMATION_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GPIO_VERSION_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GPIO_INVALID_REGISTRATION_PACKET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GPIO_OPERATION_DENIED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GPIO_INCOMPATIBLE_CONNECT_MODE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANNOT_SWITCH_RUNLEVEL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_RUNLEVEL_SETTING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RUNLEVEL_SWITCH_TIMEOUT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RUNLEVEL_SWITCH_AGENT_TIMEOUT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RUNLEVEL_SWITCH_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_APPCONTAINER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_SUPPORTED_IN_APPCONTAINER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_PACKAGE_SID_LENGTH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_APP_DATA_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_APP_DATA_EXPIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_APP_DATA_CORRUPT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_APP_DATA_LIMIT_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_APP_DATA_REBOOT_REQUIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OFFLOAD_READ_FLT_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OFFLOAD_WRITE_FLT_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OFFLOAD_READ_FILE_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OFFLOAD_WRITE_FILE_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_DBG_NO_STATE_CHANGE","","",null,null],[17,"MD_NTSTATUS_WIN_DBG_APP_NOT_IDLE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_STRING_BINDING","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_WRONG_KIND_OF_BINDING","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_BINDING","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_PROTSEQ_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_RPC_PROTSEQ","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_STRING_UUID","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_ENDPOINT_FORMAT","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_NET_ADDR","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NO_ENDPOINT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_TIMEOUT","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_OBJECT_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_ALREADY_REGISTERED","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_TYPE_ALREADY_REGISTERED","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_ALREADY_LISTENING","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NO_PROTSEQS_REGISTERED","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NOT_LISTENING","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_UNKNOWN_MGR_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_UNKNOWN_IF","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NO_BINDINGS","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NO_PROTSEQS","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_CANT_CREATE_ENDPOINT","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_OUT_OF_RESOURCES","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_SERVER_UNAVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_SERVER_TOO_BUSY","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_NETWORK_OPTIONS","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NO_CALL_ACTIVE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_CALL_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_CALL_FAILED_DNE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_PROTOCOL_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_UNSUPPORTED_TRANS_SYN","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_UNSUPPORTED_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_TAG","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_BOUND","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NO_ENTRY_NAME","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_NAME_SYNTAX","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_UNSUPPORTED_NAME_SYNTAX","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_UUID_NO_ADDRESS","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_DUPLICATE_ENDPOINT","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_UNKNOWN_AUTHN_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_MAX_CALLS_TOO_SMALL","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_STRING_TOO_LONG","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_PROTSEQ_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_PROCNUM_OUT_OF_RANGE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_BINDING_HAS_NO_AUTH","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_UNKNOWN_AUTHN_SERVICE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_UNKNOWN_AUTHN_LEVEL","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_AUTH_IDENTITY","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_UNKNOWN_AUTHZ_SERVICE","","",null,null],[17,"MD_NTSTATUS_WIN_EPT_NT_INVALID_ENTRY","","",null,null],[17,"MD_NTSTATUS_WIN_EPT_NT_CANT_PERFORM_OP","","",null,null],[17,"MD_NTSTATUS_WIN_EPT_NT_NOT_REGISTERED","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NOTHING_TO_EXPORT","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INCOMPLETE_NAME","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_VERS_OPTION","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NO_MORE_MEMBERS","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NOT_ALL_OBJS_UNEXPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INTERFACE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_ENTRY_ALREADY_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_ENTRY_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NAME_SERVICE_UNAVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_NAF_ID","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_CANNOT_SUPPORT","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NO_CONTEXT_AVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INTERNAL_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_ZERO_DIVIDE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_ADDRESS_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_FP_DIV_ZERO","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_FP_UNDERFLOW","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_FP_OVERFLOW","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_CALL_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NO_MORE_BINDINGS","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_GROUP_MEMBER_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_EPT_NT_CANT_CREATE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_OBJECT","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NO_INTERFACES","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_CALL_CANCELLED","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_BINDING_INCOMPLETE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_COMM_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_UNSUPPORTED_AUTHN_LEVEL","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NO_PRINC_NAME","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NOT_RPC_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_SEC_PKG_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NOT_CANCELLED","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_ASYNC_HANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_ASYNC_CALL","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_PROXY_ACCESS_DENIED","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_COOKIE_AUTH_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NO_MORE_ENTRIES","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_SS_CHAR_TRANS_OPEN_FAIL","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_SS_CHAR_TRANS_SHORT_FILE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_SS_IN_NULL_CONTEXT","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_SS_CONTEXT_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_SS_CONTEXT_DAMAGED","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_SS_HANDLES_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_SS_CANNOT_GET_CALL_HANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_NULL_REF_POINTER","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_ENUM_VALUE_OUT_OF_RANGE","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_BYTE_COUNT_TOO_SMALL","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_BAD_STUB_DATA","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_ES_ACTION","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_WRONG_ES_VERSION","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_WRONG_STUB_VERSION","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_PIPE_OBJECT","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_INVALID_PIPE_OPERATION","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_WRONG_PIPE_VERSION","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_PIPE_CLOSED","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_PIPE_DISCIPLINE_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_RPC_NT_PIPE_EMPTY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PNP_BAD_MPS_TABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PNP_TRANSLATION_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PNP_IRQ_TRANSLATION_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PNP_INVALID_ID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IO_REISSUE_AS_CACHED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_WINSTATION_NAME_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_INVALID_PD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_PD_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_CLOSE_PENDING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_NO_OUTBUF","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_MODEM_INF_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_INVALID_MODEMNAME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_RESPONSE_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_MODEM_RESPONSE_TIMEOUT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_MODEM_RESPONSE_NO_CARRIER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_MODEM_RESPONSE_NO_DIALTONE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_MODEM_RESPONSE_BUSY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_MODEM_RESPONSE_VOICE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_TD_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_LICENSE_CLIENT_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_LICENSE_NOT_AVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_LICENSE_EXPIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_WINSTATION_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_WINSTATION_NAME_COLLISION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_WINSTATION_BUSY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_BAD_VIDEO_MODE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_GRAPHICS_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_NOT_CONSOLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_CLIENT_QUERY_TIMEOUT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_CONSOLE_DISCONNECT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_CONSOLE_CONNECT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_SHADOW_DENIED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_WINSTATION_ACCESS_DENIED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_INVALID_WD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_WD_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_SHADOW_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_SHADOW_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RDP_PROTOCOL_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_CLIENT_LICENSE_NOT_SET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_CLIENT_LICENSE_IN_USE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_SHADOW_ENDED_BY_MODE_CHANGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_SHADOW_NOT_RUNNING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_LOGON_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTX_SECURITY_LAYER_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TS_INCOMPATIBLE_SESSIONS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TS_VIDEO_SUBSYSTEM_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MUI_FILE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MUI_INVALID_FILE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MUI_INVALID_RC_CONFIG","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MUI_INVALID_LOCALE_NAME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MUI_INVALID_ULTIMATEFALLBACK_NAME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MUI_FILE_NOT_LOADED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RESOURCE_ENUM_USER_STOP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_INVALID_NODE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_NODE_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_JOIN_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_NODE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_LOCAL_NODE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_NETWORK_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_NETWORK_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_NETINTERFACE_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_NETINTERFACE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_INVALID_REQUEST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_INVALID_NETWORK_PROVIDER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_NODE_DOWN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_NODE_UNREACHABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_NODE_NOT_MEMBER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_JOIN_NOT_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_INVALID_NETWORK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_NO_NET_ADAPTERS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_NODE_UP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_NODE_PAUSED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_NODE_NOT_PAUSED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_NO_SECURITY_CONTEXT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_NETWORK_NOT_INTERNAL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_POISONED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_NON_CSV_PATH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_CSV_VOLUME_NOT_LOCAL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_CSV_READ_OPLOCK_BREAK_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_CSV_AUTO_PAUSE_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_CSV_REDIRECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_CSV_NOT_REDIRECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_CSV_VOLUME_DRAINING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_CSV_SNAPSHOT_CREATION_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CLUSTER_CSV_VOLUME_DRAINING_SUCCEEDED_DOWNLEVEL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_INVALID_OPCODE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_STACK_OVERFLOW","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_ASSERT_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_INVALID_INDEX","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_INVALID_ARGUMENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_FATAL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_INVALID_SUPERNAME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_INVALID_ARGTYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_INVALID_OBJTYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_INVALID_TARGETTYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_INCORRECT_ARGUMENT_COUNT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_ADDRESS_NOT_MAPPED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_INVALID_EVENTTYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_HANDLER_COLLISION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_INVALID_DATA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_INVALID_REGION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_INVALID_ACCESS_SIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_ACQUIRE_GLOBAL_LOCK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_ALREADY_INITIALIZED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_NOT_INITIALIZED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_INVALID_MUTEX_LEVEL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_MUTEX_NOT_OWNED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_MUTEX_NOT_OWNER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_RS_ACCESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_INVALID_TABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_REG_HANDLER_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ACPI_POWER_REQUEST_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_SECTION_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_CANT_GEN_ACTCTX","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_INVALID_ACTCTXDATA_FORMAT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_ASSEMBLY_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_MANIFEST_FORMAT_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_MANIFEST_PARSE_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_ACTIVATION_CONTEXT_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_KEY_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_VERSION_CONFLICT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_WRONG_SECTION_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_THREAD_QUERIES_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_ASSEMBLY_MISSING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_PROCESS_DEFAULT_ALREADY_SET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_EARLY_DEACTIVATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_INVALID_DEACTIVATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_MULTIPLE_DEACTIVATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_PROCESS_TERMINATION_REQUESTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_CORRUPT_ACTIVATION_STACK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_CORRUPTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_IDENTITY_DUPLICATE_ATTRIBUTE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_IDENTITY_PARSE_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_COMPONENT_STORE_CORRUPT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_FILE_HASH_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_IDENTITIES_DIFFERENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_FILE_NOT_PART_OF_ASSEMBLY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ADVANCED_INSTALLER_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_XML_ENCODING_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_MANIFEST_TOO_BIG","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_SETTING_NOT_REGISTERED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_TRANSACTION_CLOSURE_INCOMPLETE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SMI_PRIMITIVE_INSTALLER_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GENERIC_COMMAND_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SXS_FILE_HASH_MISSING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTIONAL_CONFLICT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INVALID_TRANSACTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_NOT_ACTIVE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TM_INITIALIZATION_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RM_NOT_ACTIVE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RM_METADATA_CORRUPT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_NOT_JOINED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_DIRECTORY_NOT_RM","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTIONS_UNSUPPORTED_REMOTE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_RESIZE_INVALID_SIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_REMOTE_FILE_VERSION_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CRM_PROTOCOL_ALREADY_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_PROPAGATION_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CRM_PROTOCOL_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_SUPERIOR_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_REQUEST_NOT_VALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_NOT_REQUESTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_ALREADY_ABORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_ALREADY_COMMITTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_INVALID_MARSHALL_BUFFER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CURRENT_TRANSACTION_NOT_VALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_GROWTH_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OBJECT_NO_LONGER_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_STREAM_MINIVERSION_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_STREAM_MINIVERSION_NOT_VALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANT_CREATE_MORE_STREAM_MINIVERSIONS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HANDLE_NO_LONGER_VALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_CORRUPTION_DETECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RM_DISCONNECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ENLISTMENT_NOT_SUPERIOR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FILE_IDENTITY_NOT_PERSISTENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANT_BREAK_TRANSACTIONAL_DEPENDENCY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANT_CROSS_RM_BOUNDARY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TXF_DIR_NOT_EMPTY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_INDOUBT_TRANSACTIONS_EXIST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TM_VOLATILE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ROLLBACK_TIMER_EXPIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TXF_ATTRIBUTE_CORRUPT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_EFS_NOT_ALLOWED_IN_TRANSACTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTIONAL_OPEN_NOT_ALLOWED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_REQUIRED_PROMOTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANNOT_EXECUTE_FILE_IN_TRANSACTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTIONS_NOT_FROZEN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_FREEZE_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NOT_SNAPSHOT_VOLUME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_SAVEPOINT_WITH_OPEN_FILES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SPARSE_NOT_ALLOWED_IN_TRANSACTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TM_IDENTITY_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLOATED_SECTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANNOT_ACCEPT_TRANSACTED_WORK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CANNOT_ABORT_TRANSACTIONS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RESOURCEMANAGER_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_ENLISTMENT_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTIONMANAGER_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTIONMANAGER_NOT_ONLINE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_NOT_ROOT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_OBJECT_EXPIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_COMPRESSION_NOT_ALLOWED_IN_TRANSACTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_RESPONSE_NOT_ENLISTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_RECORD_TOO_LONG","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NO_LINK_TRACKING_IN_TRANSACTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_OPERATION_NOT_SUPPORTED_IN_TRANSACTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_INTEGRITY_VIOLATED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTIONMANAGER_IDENTITY_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RM_CANNOT_BE_FROZEN_FOR_SNAPSHOT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_MUST_WRITETHROUGH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_NO_SUPERIOR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_EXPIRED_HANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TRANSACTION_NOT_ENLISTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_SECTOR_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_SECTOR_PARITY_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_SECTOR_REMAPPED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_BLOCK_INCOMPLETE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_INVALID_RANGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_BLOCKS_EXHAUSTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_READ_CONTEXT_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_RESTART_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_BLOCK_VERSION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_BLOCK_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_READ_MODE_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_METADATA_CORRUPT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_METADATA_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_METADATA_INCONSISTENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_RESERVATION_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_CANT_DELETE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_CONTAINER_LIMIT_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_START_OF_LOG","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_POLICY_ALREADY_INSTALLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_POLICY_NOT_INSTALLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_POLICY_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_POLICY_CONFLICT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_PINNED_ARCHIVE_TAIL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_RECORD_NONEXISTENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_RECORDS_RESERVED_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_SPACE_RESERVED_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_TAIL_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_FULL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_MULTIPLEXED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_DEDICATED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_ARCHIVE_NOT_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_ARCHIVE_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_EPHEMERAL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_NOT_ENOUGH_CONTAINERS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_CLIENT_ALREADY_REGISTERED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_CLIENT_NOT_REGISTERED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_FULL_HANDLER_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_CONTAINER_READ_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_CONTAINER_WRITE_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_CONTAINER_OPEN_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_CONTAINER_STATE_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_STATE_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_PINNED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_METADATA_FLUSH_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_INCONSISTENT_SECURITY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_APPENDED_FLUSH_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_LOG_PINNED_RESERVATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VIDEO_HUNG_DISPLAY_DRIVER_THREAD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_NO_HANDLER_DEFINED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_CONTEXT_ALREADY_DEFINED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_INVALID_ASYNCHRONOUS_REQUEST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_DISALLOW_FAST_IO","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_INVALID_NAME_REQUEST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_NOT_SAFE_TO_POST_OPERATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_NOT_INITIALIZED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_FILTER_NOT_READY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_POST_OPERATION_CLEANUP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_INTERNAL_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_DELETING_OBJECT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_MUST_BE_NONPAGED_POOL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_DUPLICATE_ENTRY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_CBDQ_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_DO_NOT_ATTACH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_DO_NOT_DETACH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_INSTANCE_ALTITUDE_COLLISION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_INSTANCE_NAME_COLLISION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_FILTER_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_VOLUME_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_INSTANCE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_CONTEXT_ALLOCATION_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_INVALID_CONTEXT_REGISTRATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_NAME_CACHE_MISS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_NO_DEVICE_OBJECT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_VOLUME_ALREADY_MOUNTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_ALREADY_ENLISTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_CONTEXT_ALREADY_LINKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_NO_WAITER_FOR_REPLY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FLT_REGISTRATION_BUSY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MONITOR_NO_DESCRIPTOR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MONITOR_UNKNOWN_DESCRIPTOR_FORMAT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MONITOR_INVALID_DESCRIPTOR_CHECKSUM","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MONITOR_INVALID_STANDARD_TIMING_BLOCK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MONITOR_WMI_DATABLOCK_REGISTRATION_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MONITOR_INVALID_SERIAL_NUMBER_MONDSC_BLOCK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MONITOR_INVALID_USER_FRIENDLY_MONDSC_BLOCK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MONITOR_NO_MORE_DESCRIPTOR_DATA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MONITOR_INVALID_DETAILED_TIMING_BLOCK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_MONITOR_INVALID_MANUFACTURE_DATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_NOT_EXCLUSIVE_MODE_OWNER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INSUFFICIENT_DMA_BUFFER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_DISPLAY_ADAPTER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_ADAPTER_WAS_RESET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_DRIVER_MODEL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_PRESENT_MODE_CHANGED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_PRESENT_OCCLUDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_PRESENT_DENIED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_CANNOTCOLORCONVERT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_DRIVER_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_PRESENT_REDIRECTION_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_PRESENT_UNOCCLUDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_WINDOWDC_NOT_AVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_WINDOWLESS_PRESENT_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_NO_VIDEO_MEMORY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_CANT_LOCK_MEMORY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_ALLOCATION_BUSY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_TOO_MANY_REFERENCES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_TRY_AGAIN_LATER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_TRY_AGAIN_NOW","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_ALLOCATION_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_UNSWIZZLING_APERTURE_UNAVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_UNSWIZZLING_APERTURE_UNSUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_CANT_EVICT_PINNED_ALLOCATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_ALLOCATION_USAGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_CANT_RENDER_LOCKED_ALLOCATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_ALLOCATION_CLOSED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_ALLOCATION_INSTANCE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_ALLOCATION_HANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_WRONG_ALLOCATION_DEVICE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_ALLOCATION_CONTENT_LOST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_GPU_EXCEPTION_ON_DEVICE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_VIDPN_TOPOLOGY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_VIDPN_TOPOLOGY_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_VIDPN_TOPOLOGY_CURRENTLY_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_VIDPN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_VIDPN_MODALITY_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_VIDPN_SOURCEMODESET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_VIDPN_TARGETMODESET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_FREQUENCY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_ACTIVE_REGION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_TOTAL_REGION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE_MODE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET_MODE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_PINNED_MODE_MUST_REMAIN_IN_SET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_PATH_ALREADY_IN_TOPOLOGY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_MODE_ALREADY_IN_MODESET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_VIDEOPRESENTSOURCESET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_VIDEOPRESENTTARGETSET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_SOURCE_ALREADY_IN_SET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_TARGET_ALREADY_IN_SET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_VIDPN_PRESENT_PATH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_NO_RECOMMENDED_VIDPN_TOPOLOGY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGESET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_FREQUENCYRANGE_NOT_IN_SET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_FREQUENCYRANGE_ALREADY_IN_SET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_STALE_MODESET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_MONITOR_SOURCEMODESET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_MONITOR_SOURCE_MODE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_NO_RECOMMENDED_FUNCTIONAL_VIDPN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_MODE_ID_MUST_BE_UNIQUE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_EMPTY_ADAPTER_MONITOR_MODE_SUPPORT_INTERSECTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_VIDEO_PRESENT_TARGETS_LESS_THAN_SOURCES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_PATH_NOT_IN_TOPOLOGY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_SOURCE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_TARGET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_MONITORDESCRIPTORSET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_MONITORDESCRIPTOR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_MONITORDESCRIPTOR_NOT_IN_SET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_MONITORDESCRIPTOR_ALREADY_IN_SET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_MONITORDESCRIPTOR_ID_MUST_BE_UNIQUE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_VIDPN_TARGET_SUBSET_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_RESOURCES_NOT_RELATED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_SOURCE_ID_MUST_BE_UNIQUE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_TARGET_ID_MUST_BE_UNIQUE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_NO_AVAILABLE_VIDPN_TARGET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_MONITOR_COULD_NOT_BE_ASSOCIATED_WITH_ADAPTER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_NO_VIDPNMGR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_NO_ACTIVE_VIDPN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_STALE_VIDPN_TOPOLOGY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_MONITOR_NOT_CONNECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_SOURCE_NOT_IN_TOPOLOGY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_PRIMARYSURFACE_SIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_VISIBLEREGION_SIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_STRIDE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_PIXELFORMAT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_COLORBASIS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_PIXELVALUEACCESSMODE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_TARGET_NOT_IN_TOPOLOGY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_NO_DISPLAY_MODE_MANAGEMENT_SUPPORT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_VIDPN_SOURCE_IN_USE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_CANT_ACCESS_ACTIVE_VIDPN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_PATH_IMPORTANCE_ORDINAL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_PATH_CONTENT_GEOMETRY_TRANSFORMATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_GAMMA_RAMP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_GAMMA_RAMP_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_MULTISAMPLING_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_MODE_NOT_IN_MODESET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_VIDPN_TOPOLOGY_RECOMMENDATION_REASON","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_PATH_CONTENT_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_COPYPROTECTION_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_UNASSIGNED_MODESET_ALREADY_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_SCANLINE_ORDERING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_TOPOLOGY_CHANGES_NOT_ALLOWED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_NO_AVAILABLE_IMPORTANCE_ORDINALS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INCOMPATIBLE_PRIVATE_FORMAT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_MODE_PRUNING_ALGORITHM","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_MONITOR_CAPABILITY_ORIGIN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE_CONSTRAINT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_MAX_NUM_PATHS_REACHED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_CANCEL_VIDPN_TOPOLOGY_AUGMENTATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_CLIENT_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_CLIENTVIDPN_NOT_SET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_SPECIFIED_CHILD_ALREADY_CONNECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_CHILD_DESCRIPTOR_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_NOT_A_LINKED_ADAPTER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_LEADLINK_NOT_ENUMERATED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_CHAINLINKS_NOT_ENUMERATED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_ADAPTER_CHAIN_NOT_READY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_CHAINLINKS_NOT_STARTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_CHAINLINKS_NOT_POWERED_ON","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INCONSISTENT_DEVICE_LINK_STATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_NOT_POST_DEVICE_DRIVER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_ADAPTER_ACCESS_NOT_EXCLUDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_COPP_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_UAB_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_INVALID_ENCRYPTED_PARAMETERS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_NO_PROTECTED_OUTPUTS_EXIST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_INTERNAL_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_INVALID_HANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_PVP_INVALID_CERTIFICATE_LENGTH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_SPANNING_MODE_ENABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_THEATER_MODE_ENABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_PVP_HFS_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_INVALID_SRM","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_HDCP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_ACP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_CGMSA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_HDCP_SRM_NEVER_SET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_RESOLUTION_TOO_HIGH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_ALL_HDCP_HARDWARE_ALREADY_IN_USE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_PROTECTED_OUTPUT_NO_LONGER_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_PROTECTED_OUTPUT_DOES_NOT_HAVE_COPP_SEMANTICS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_INVALID_INFORMATION_REQUEST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_DRIVER_INTERNAL_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_PROTECTED_OUTPUT_DOES_NOT_HAVE_OPM_SEMANTICS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_SIGNALING_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_OPM_INVALID_CONFIGURATION_REQUEST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_I2C_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_I2C_DEVICE_DOES_NOT_EXIST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_I2C_ERROR_TRANSMITTING_DATA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_I2C_ERROR_RECEIVING_DATA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_DDCCI_VCP_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_DDCCI_INVALID_DATA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_DDCCI_MONITOR_RETURNED_INVALID_TIMING_STATUS_BYTE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_DDCCI_INVALID_CAPABILITIES_STRING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_MCA_INTERNAL_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_DDCCI_INVALID_MESSAGE_COMMAND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_DDCCI_INVALID_MESSAGE_LENGTH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_DDCCI_INVALID_MESSAGE_CHECKSUM","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_PHYSICAL_MONITOR_HANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_MONITOR_NO_LONGER_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_ONLY_CONSOLE_SESSION_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_NO_DISPLAY_DEVICE_CORRESPONDS_TO_NAME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_DISPLAY_DEVICE_NOT_ATTACHED_TO_DESKTOP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_MIRRORING_DEVICES_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INVALID_POINTER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_NO_MONITORS_CORRESPOND_TO_DISPLAY_DEVICE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_PARAMETER_ARRAY_TOO_SMALL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_INTERNAL_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_GRAPHICS_SESSION_TYPE_CHANGE_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_LOCKED_VOLUME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_NOT_ENCRYPTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_BAD_INFORMATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_TOO_SMALL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_FAILED_WRONG_FS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_BAD_PARTITION_SIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_FS_NOT_EXTENDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_FS_MOUNTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_NO_LICENSE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_ACTION_NOT_ALLOWED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_BAD_DATA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_VOLUME_NOT_BOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_NOT_DATA_VOLUME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_CONV_READ_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_CONV_WRITE_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_OVERLAPPED_UPDATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_FAILED_SECTOR_SIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_FAILED_AUTHENTICATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_NOT_OS_VOLUME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_KEYFILE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_KEYFILE_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_KEYFILE_NO_VMK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_TPM_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_TPM_SRK_AUTH_NOT_ZERO","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_TPM_INVALID_PCR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_TPM_NO_VMK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_PIN_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_AUTH_INVALID_APPLICATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_AUTH_INVALID_CONFIG","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_DEBUGGER_ENABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_DRY_RUN_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_BAD_METADATA_POINTER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_OLD_METADATA_COPY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_REBOOT_REQUIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_RAW_ACCESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_RAW_BLOCKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_NO_AUTOUNLOCK_MASTER_KEY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_MOR_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_NO_FEATURE_LICENSE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_POLICY_USER_DISABLE_RDV_NOT_ALLOWED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_CONV_RECOVERY_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_VIRTUALIZED_SPACE_TOO_BIG","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_INVALID_DATUM_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_VOLUME_TOO_SMALL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_ENH_PIN_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_FULL_ENCRYPTION_NOT_ALLOWED_ON_TP_STORAGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_WIPE_NOT_ALLOWED_ON_TP_STORAGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_NOT_ALLOWED_ON_CSV_STACK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_NOT_ALLOWED_ON_CLUSTER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_NOT_ALLOWED_TO_UPGRADE_WHILE_CONVERTING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_WIPE_CANCEL_NOT_APPLICABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_EDRIVE_DRY_RUN_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_SECUREBOOT_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_SECUREBOOT_CONFIG_CHANGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_DEVICE_LOCKEDOUT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_VOLUME_EXTEND_PREVENTS_EOW_DECRYPT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_NOT_DE_VOLUME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_PROTECTION_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FVE_PROTECTION_CANNOT_BE_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_CALLOUT_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_CONDITION_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_FILTER_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_LAYER_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_PROVIDER_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_PROVIDER_CONTEXT_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_SUBLAYER_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_ALREADY_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_IN_USE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_DYNAMIC_SESSION_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_WRONG_SESSION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_NO_TXN_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_TXN_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_TXN_ABORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_SESSION_ABORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INCOMPATIBLE_TXN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_TIMEOUT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_NET_EVENTS_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INCOMPATIBLE_LAYER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_KM_CLIENTS_ONLY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_LIFETIME_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_BUILTIN_OBJECT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_TOO_MANY_CALLOUTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_NOTIFICATION_DROPPED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_TRAFFIC_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INCOMPATIBLE_SA_STATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_NULL_POINTER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INVALID_ENUMERATOR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INVALID_FLAGS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INVALID_NET_MASK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INVALID_RANGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INVALID_INTERVAL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_ZERO_LENGTH_ARRAY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_NULL_DISPLAY_NAME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INVALID_ACTION_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INVALID_WEIGHT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_MATCH_TYPE_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_TYPE_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_OUT_OF_BOUNDS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_RESERVED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_DUPLICATE_CONDITION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_DUPLICATE_KEYMOD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_ACTION_INCOMPATIBLE_WITH_LAYER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_ACTION_INCOMPATIBLE_WITH_SUBLAYER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_CONTEXT_INCOMPATIBLE_WITH_LAYER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_CONTEXT_INCOMPATIBLE_WITH_CALLOUT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INCOMPATIBLE_AUTH_METHOD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INCOMPATIBLE_DH_GROUP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_EM_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_NEVER_MATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_PROVIDER_CONTEXT_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INVALID_PARAMETER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_TOO_MANY_SUBLAYERS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_CALLOUT_NOTIFICATION_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INVALID_AUTH_TRANSFORM","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INVALID_CIPHER_TRANSFORM","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INCOMPATIBLE_CIPHER_TRANSFORM","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INVALID_TRANSFORM_COMBINATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_DUPLICATE_AUTH_METHOD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INVALID_TUNNEL_ENDPOINT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_L2_DRIVER_NOT_READY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_KEY_DICTATOR_ALREADY_REGISTERED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_KEY_DICTATION_INVALID_KEYING_MATERIAL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_CONNECTIONS_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INVALID_DNS_NAME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_STILL_ON","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_IKEEXT_NOT_RUNNING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_TCPIP_NOT_READY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INJECT_HANDLE_CLOSING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_INJECT_HANDLE_STALE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_CANNOT_PEND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_FWP_DROP_NOICMP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_CLOSING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_BAD_VERSION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_BAD_CHARACTERISTICS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_ADAPTER_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_OPEN_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_DEVICE_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_MULTICAST_FULL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_MULTICAST_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_MULTICAST_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_REQUEST_ABORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_RESET_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_INVALID_PACKET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_INVALID_DEVICE_REQUEST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_ADAPTER_NOT_READY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_INVALID_LENGTH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_INVALID_DATA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_BUFFER_TOO_SHORT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_INVALID_OID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_ADAPTER_REMOVED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_UNSUPPORTED_MEDIA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_GROUP_ADDRESS_IN_USE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_FILE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_ERROR_READING_FILE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_ALREADY_MAPPED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_RESOURCE_CONFLICT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_MEDIA_DISCONNECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_INVALID_ADDRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_PAUSED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_INTERFACE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_UNSUPPORTED_REVISION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_INVALID_PORT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_INVALID_PORT_STATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_LOW_POWER_STATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_REINIT_REQUIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_OFFLOAD_POLICY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_OFFLOAD_CONNECTION_REJECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_OFFLOAD_PATH_REJECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_DOT11_AUTO_CONFIG_ENABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_DOT11_MEDIA_IN_USE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_DOT11_POWER_STATE_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_PM_WOL_PATTERN_LIST_FULL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_NDIS_PM_PROTOCOL_OFFLOAD_LIST_FULL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_ERROR_MASK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_AUTHFAIL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BADINDEX","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BAD_PARAMETER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_AUDITFAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_CLEAR_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_DEACTIVATED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_DISABLED_CMD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_FAIL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BAD_ORDINAL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_INSTALL_DISABLED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_INVALID_KEYHANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_KEYNOTFOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_INAPPROPRIATE_ENC","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_MIGRATEFAIL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_INVALID_PCR_INFO","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_NOSPACE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_NOSRK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_NOTSEALED_BLOB","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_OWNER_SET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_RESOURCES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_SHORTRANDOM","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_SIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_WRONGPCRVAL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BAD_PARAM_SIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_SHA_THREAD","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_SHA_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_FAILEDSELFTEST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_AUTH2FAIL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BADTAG","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_IOERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_ENCRYPT_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_DECRYPT_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_INVALID_AUTHHANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_NO_ENDORSEMENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_INVALID_KEYUSAGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_WRONG_ENTITYTYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_INVALID_POSTINIT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_INAPPROPRIATE_SIG","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BAD_KEY_PROPERTY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BAD_MIGRATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BAD_SCHEME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BAD_DATASIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BAD_MODE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BAD_PRESENCE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BAD_VERSION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_NO_WRAP_TRANSPORT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_AUDITFAIL_UNSUCCESSFUL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_AUDITFAIL_SUCCESSFUL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_NOTRESETABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_NOTLOCAL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BAD_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_INVALID_RESOURCE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_NOTFIPS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_INVALID_FAMILY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_NO_NV_PERMISSION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_REQUIRES_SIGN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_KEY_NOTSUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_AUTH_CONFLICT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_AREA_LOCKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BAD_LOCALITY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_READ_ONLY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_PER_NOWRITE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_FAMILYCOUNT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_WRITE_LOCKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BAD_ATTRIBUTES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_INVALID_STRUCTURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_KEY_OWNER_CONTROL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BAD_COUNTER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_NOT_FULLWRITE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_CONTEXT_GAP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_MAXNVWRITES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_NOOPERATOR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_RESOURCEMISSING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_DELEGATE_LOCK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_DELEGATE_FAMILY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_DELEGATE_ADMIN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_TRANSPORT_NOTEXCLUSIVE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_OWNER_CONTROL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_DAA_RESOURCES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_DAA_INPUT_DATA0","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_DAA_INPUT_DATA1","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_DAA_ISSUER_SETTINGS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_DAA_TPM_SETTINGS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_DAA_STAGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_DAA_ISSUER_VALIDITY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_DAA_WRONG_W","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BAD_HANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BAD_DELEGATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BADCONTEXT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_TOOMANYCONTEXTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_MA_TICKET_SIGNATURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_MA_DESTINATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_MA_SOURCE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_MA_AUTHORITY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_PERMANENTEK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_BAD_SIGNATURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_NOCONTEXTSPACE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_COMMAND_BLOCKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_INVALID_HANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_DUPLICATE_VHANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_EMBEDDED_COMMAND_BLOCKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_EMBEDDED_COMMAND_UNSUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_RETRY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_NEEDS_SELFTEST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_DOING_SELFTEST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_DEFEND_LOCK_RUNNING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_COMMAND_CANCELED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_TOO_MANY_CONTEXTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_ACCESS_DENIED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_INSUFFICIENT_BUFFER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_TPM_PPI_FUNCTION_UNSUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PCP_ERROR_MASK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PCP_DEVICE_NOT_READY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PCP_INVALID_HANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PCP_INVALID_PARAMETER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PCP_FLAG_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PCP_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PCP_BUFFER_TOO_SMALL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PCP_INTERNAL_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PCP_AUTHENTICATION_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PCP_AUTHENTICATION_IGNORED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PCP_POLICY_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PCP_PROFILE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PCP_VALIDATION_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_PCP_DEVICE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_INVALID_HYPERCALL_CODE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_INVALID_HYPERCALL_INPUT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_INVALID_ALIGNMENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_INVALID_PARAMETER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_ACCESS_DENIED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_INVALID_PARTITION_STATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_OPERATION_DENIED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_UNKNOWN_PROPERTY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_PROPERTY_VALUE_OUT_OF_RANGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_INSUFFICIENT_MEMORY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_PARTITION_TOO_DEEP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_INVALID_PARTITION_ID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_INVALID_VP_INDEX","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_INVALID_PORT_ID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_INVALID_CONNECTION_ID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_INSUFFICIENT_BUFFERS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_NOT_ACKNOWLEDGED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_ACKNOWLEDGED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_INVALID_SAVE_RESTORE_STATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_INVALID_SYNIC_STATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_OBJECT_IN_USE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_INVALID_PROXIMITY_DOMAIN_INFO","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_NO_DATA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_INACTIVE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_NO_RESOURCES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_FEATURE_UNAVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_INSUFFICIENT_BUFFER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_INSUFFICIENT_DEVICE_DOMAINS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_INVALID_LP_INDEX","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HV_NOT_PRESENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IPSEC_BAD_SPI","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IPSEC_SA_LIFETIME_EXPIRED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IPSEC_WRONG_SA","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IPSEC_REPLAY_CHECK_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IPSEC_INVALID_PACKET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IPSEC_INTEGRITY_CHECK_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IPSEC_CLEAR_TEXT_DROP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IPSEC_AUTH_FIREWALL_DROP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IPSEC_THROTTLE_DROP","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IPSEC_DOSP_BLOCK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IPSEC_DOSP_RECEIVED_MULTICAST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IPSEC_DOSP_INVALID_PACKET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IPSEC_DOSP_STATE_LOOKUP_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IPSEC_DOSP_MAX_ENTRIES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IPSEC_DOSP_KEYMOD_NOT_ALLOWED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_DUPLICATE_HANDLER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_TOO_MANY_HANDLERS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_QUEUE_FULL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_HANDLER_NOT_PRESENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_INVALID_OBJECT_NAME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_PARTITION_NAME_TOO_LONG","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_MESSAGE_QUEUE_NAME_TOO_LONG","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_PARTITION_ALREADY_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_PARTITION_DOES_NOT_EXIST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_PARTITION_NAME_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_MESSAGE_QUEUE_ALREADY_EXISTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_EXCEEDED_MBP_ENTRY_MAP_LIMIT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_MB_STILL_REFERENCED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_CHILD_GPA_PAGE_SET_CORRUPTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_INVALID_NUMA_SETTINGS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_INVALID_NUMA_NODE_INDEX","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_NOTIFICATION_QUEUE_ALREADY_ASSOCIATED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_INVALID_MEMORY_BLOCK_HANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_PAGE_RANGE_OVERFLOW","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_INVALID_MESSAGE_QUEUE_HANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_INVALID_GPA_RANGE_HANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_NO_MEMORY_BLOCK_NOTIFICATION_QUEUE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_MEMORY_BLOCK_LOCK_COUNT_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_INVALID_PPM_HANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_MBPS_ARE_LOCKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_MESSAGE_QUEUE_CLOSED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_VIRTUAL_PROCESSOR_LIMIT_EXCEEDED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_STOP_PENDING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_INVALID_PROCESSOR_STATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_EXCEEDED_KM_CONTEXT_COUNT_LIMIT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_KM_INTERFACE_ALREADY_INITIALIZED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_MB_PROPERTY_ALREADY_SET_RESET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_MMIO_RANGE_DESTROYED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_INVALID_CHILD_GPA_PAGE_SET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_RESERVE_PAGE_SET_IS_BEING_USED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_RESERVE_PAGE_SET_TOO_SMALL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_MBP_ALREADY_LOCKED_USING_RESERVED_PAGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_MBP_COUNT_EXCEEDED_LIMIT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_SAVED_STATE_CORRUPT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_SAVED_STATE_UNRECOGNIZED_ITEM","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VID_SAVED_STATE_INCOMPATIBLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DATABASE_FULL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_CONFIGURATION_CORRUPTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_CONFIGURATION_NOT_IN_SYNC","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PACK_CONFIG_UPDATE_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_CONTAINS_NON_SIMPLE_VOLUME","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_DUPLICATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_DYNAMIC","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_ID_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_LAST_VOTER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_LAYOUT_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_LAYOUT_NON_BASIC_BETWEEN_BASIC_PARTITIONS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_LAYOUT_NOT_CYLINDER_ALIGNED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_LAYOUT_PARTITIONS_TOO_SMALL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_LAYOUT_PRIMARY_BETWEEN_LOGICAL_PARTITIONS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_LAYOUT_TOO_MANY_PARTITIONS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_MISSING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_NOT_EMPTY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_NOT_ENOUGH_SPACE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_REVECTORING_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_SECTOR_SIZE_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_SET_NOT_CONTAINED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_USED_BY_MULTIPLE_MEMBERS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DISK_USED_BY_MULTIPLE_PLEXES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DYNAMIC_DISK_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_EXTENT_ALREADY_USED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_EXTENT_NOT_CONTIGUOUS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_EXTENT_NOT_IN_PUBLIC_REGION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_EXTENT_NOT_SECTOR_ALIGNED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_EXTENT_OVERLAPS_EBR_PARTITION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_EXTENT_VOLUME_LENGTHS_DO_NOT_MATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_FAULT_TOLERANT_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_INTERLEAVE_LENGTH_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_MAXIMUM_REGISTERED_USERS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_MEMBER_IN_SYNC","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_MEMBER_INDEX_DUPLICATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_MEMBER_INDEX_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_MEMBER_MISSING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_MEMBER_NOT_DETACHED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_MEMBER_REGENERATING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_ALL_DISKS_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_NO_REGISTERED_USERS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_NO_SUCH_USER","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_NOTIFICATION_RESET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_NUMBER_OF_MEMBERS_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_NUMBER_OF_PLEXES_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PACK_DUPLICATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PACK_ID_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PACK_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PACK_NAME_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PACK_OFFLINE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PACK_HAS_QUORUM","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PACK_WITHOUT_QUORUM","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PARTITION_STYLE_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PARTITION_UPDATE_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PLEX_IN_SYNC","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PLEX_INDEX_DUPLICATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PLEX_INDEX_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PLEX_LAST_ACTIVE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PLEX_MISSING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PLEX_REGENERATING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PLEX_TYPE_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PLEX_NOT_RAID5","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PLEX_NOT_SIMPLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_STRUCTURE_SIZE_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_TOO_MANY_NOTIFICATION_REQUESTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_TRANSACTION_IN_PROGRESS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_UNEXPECTED_DISK_LAYOUT_CHANGE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_VOLUME_CONTAINS_MISSING_DISK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_VOLUME_ID_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_VOLUME_LENGTH_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_VOLUME_LENGTH_NOT_SECTOR_SIZE_MULTIPLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_VOLUME_NOT_MIRRORED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_VOLUME_NOT_RETAINED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_VOLUME_OFFLINE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_VOLUME_RETAINED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_NUMBER_OF_EXTENTS_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_DIFFERENT_SECTOR_SIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_BAD_BOOT_DISK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PACK_CONFIG_OFFLINE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PACK_CONFIG_ONLINE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_NOT_PRIMARY_PACK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PACK_LOG_UPDATE_FAILED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_NUMBER_OF_DISKS_IN_PLEX_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_NUMBER_OF_DISKS_IN_MEMBER_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_VOLUME_MIRRORED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PLEX_NOT_SIMPLE_SPANNED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_NO_VALID_LOG_COPIES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_PRIMARY_PACK_PRESENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_NUMBER_OF_DISKS_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_MIRROR_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLMGR_RAID5_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BCD_TOO_MANY_ELEMENTS","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_DRIVE_FOOTER_MISSING","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_DRIVE_FOOTER_CHECKSUM_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_DRIVE_FOOTER_CORRUPT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_FORMAT_UNKNOWN","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_FORMAT_UNSUPPORTED_VERSION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_SPARSE_HEADER_CHECKSUM_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_SPARSE_HEADER_UNSUPPORTED_VERSION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_SPARSE_HEADER_CORRUPT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_BLOCK_ALLOCATION_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_BLOCK_ALLOCATION_TABLE_CORRUPT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_INVALID_BLOCK_SIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_BITMAP_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_PARENT_VHD_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_CHILD_PARENT_ID_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_CHILD_PARENT_TIMESTAMP_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_METADATA_READ_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_METADATA_WRITE_FAILURE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_INVALID_SIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_INVALID_FILE_SIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VIRTDISK_PROVIDER_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VIRTDISK_NOT_VIRTUAL_DISK","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_PARENT_VHD_ACCESS_DENIED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_CHILD_PARENT_SIZE_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_DIFFERENCING_CHAIN_CYCLE_DETECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_DIFFERENCING_CHAIN_ERROR_IN_PARENT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VIRTUAL_DISK_LIMITATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_INVALID_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_INVALID_STATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VIRTDISK_UNSUPPORTED_DISK_SECTOR_SIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VIRTDISK_DISK_ALREADY_OWNED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VIRTDISK_DISK_ONLINE_AND_WRITABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTLOG_TRACKING_NOT_INITIALIZED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTLOG_LOGFILE_SIZE_EXCEEDED_MAXSIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTLOG_VHD_CHANGED_OFFLINE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTLOG_INVALID_TRACKING_STATE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_CTLOG_INCONSISTENT_TRACKING_FILE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_METADATA_FULL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RKF_KEY_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RKF_DUPLICATE_KEY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RKF_BLOB_FULL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RKF_STORE_FULL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RKF_FILE_BLOCKED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RKF_ACTIVE_KEY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RDBSS_RESTART_OPERATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RDBSS_CONTINUE_OPERATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_RDBSS_POST_OPERATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BTH_ATT_INVALID_HANDLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BTH_ATT_READ_NOT_PERMITTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BTH_ATT_WRITE_NOT_PERMITTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BTH_ATT_INVALID_PDU","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BTH_ATT_INSUFFICIENT_AUTHENTICATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BTH_ATT_REQUEST_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BTH_ATT_INVALID_OFFSET","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BTH_ATT_INSUFFICIENT_AUTHORIZATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BTH_ATT_PREPARE_QUEUE_FULL","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BTH_ATT_ATTRIBUTE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BTH_ATT_ATTRIBUTE_NOT_LONG","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BTH_ATT_INSUFFICIENT_ENCRYPTION_KEY_SIZE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BTH_ATT_INVALID_ATTRIBUTE_VALUE_LENGTH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BTH_ATT_UNLIKELY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BTH_ATT_INSUFFICIENT_ENCRYPTION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BTH_ATT_UNSUPPORTED_GROUP_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BTH_ATT_INSUFFICIENT_RESOURCES","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_BTH_ATT_UNKNOWN_ERROR","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SECUREBOOT_ROLLBACK_DETECTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SECUREBOOT_POLICY_VIOLATION","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SECUREBOOT_INVALID_POLICY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SECUREBOOT_POLICY_PUBLISHER_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SECUREBOOT_POLICY_NOT_SIGNED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SECUREBOOT_FILE_REPLACED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_AUDIO_ENGINE_NODE_NOT_FOUND","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HDAUDIO_EMPTY_CONNECTION_LIST","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HDAUDIO_CONNECTION_LIST_NOT_SUPPORTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HDAUDIO_NO_LOGICAL_DEVICES_CREATED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_HDAUDIO_NULL_LINKED_LIST_ENTRY","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VOLSNAP_BOOTFILE_NOT_VALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_IO_PREEMPTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SVHDX_ERROR_STORED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SVHDX_ERROR_NOT_AVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SVHDX_UNIT_ATTENTION_AVAILABLE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SVHDX_UNIT_ATTENTION_CAPACITY_DATA_CHANGED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SVHDX_UNIT_ATTENTION_RESERVATIONS_PREEMPTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SVHDX_UNIT_ATTENTION_RESERVATIONS_RELEASED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SVHDX_UNIT_ATTENTION_REGISTRATIONS_PREEMPTED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SVHDX_UNIT_ATTENTION_OPERATING_DEFINITION_CHANGED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SVHDX_RESERVATION_CONFLICT","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SVHDX_WRONG_FILE_TYPE","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SVHDX_VERSION_MISMATCH","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_VHD_SHARED","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SPACES_RESILIENCY_TYPE_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SPACES_DRIVE_SECTOR_SIZE_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SPACES_INTERLEAVE_LENGTH_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SPACES_NUMBER_OF_COLUMNS_INVALID","","",null,null],[17,"MD_NTSTATUS_WIN_STATUS_SPACES_NOT_ENOUGH_DRIVES","","",null,null],[17,"MD_ACCESS_VIOLATION_WIN_READ","","",null,null],[17,"MD_ACCESS_VIOLATION_WIN_WRITE","","",null,null],[17,"MD_ACCESS_VIOLATION_WIN_EXEC","","",null,null],[17,"MD_IN_PAGE_ERROR_WIN_READ","","",null,null],[17,"MD_IN_PAGE_ERROR_WIN_WRITE","","",null,null],[17,"MD_IN_PAGE_ERROR_WIN_EXEC","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_SWP","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_HALF","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_THUMB","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_26BIT","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_FAST_MULT","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_FPA","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_VFP","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_EDSP","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_JAVA","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_IWMMXT","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_CRUNCH","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_THUMBEE","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_NEON","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_VFPv3","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_VFPv3D16","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_TLS","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_VFPv4","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_IDIVA","","",null,null],[17,"MD_CPU_ARM_ELF_HWCAP_IDIVT","","",null,null],[17,"MD_CPU_ARCHITECTURE_X86","","",null,null],[17,"MD_CPU_ARCHITECTURE_MIPS","","",null,null],[17,"MD_CPU_ARCHITECTURE_ALPHA","","",null,null],[17,"MD_CPU_ARCHITECTURE_PPC","","",null,null],[17,"MD_CPU_ARCHITECTURE_SHX","","",null,null],[17,"MD_CPU_ARCHITECTURE_ARM","","",null,null],[17,"MD_CPU_ARCHITECTURE_IA64","","",null,null],[17,"MD_CPU_ARCHITECTURE_ALPHA64","","",null,null],[17,"MD_CPU_ARCHITECTURE_MSIL","","",null,null],[17,"MD_CPU_ARCHITECTURE_AMD64","","",null,null],[17,"MD_CPU_ARCHITECTURE_X86_WIN64","","",null,null],[17,"MD_CPU_ARCHITECTURE_SPARC","","",null,null],[17,"MD_CPU_ARCHITECTURE_PPC64","","",null,null],[17,"MD_CPU_ARCHITECTURE_ARM64","","",null,null],[17,"MD_CPU_ARCHITECTURE_MIPS64","","",null,null],[17,"MD_CPU_ARCHITECTURE_UNKNOWN","","",null,null],[17,"MD_OS_WIN32S","","",null,null],[17,"MD_OS_WIN32_WINDOWS","","",null,null],[17,"MD_OS_WIN32_NT","","",null,null],[17,"MD_OS_WIN32_CE","","",null,null],[17,"MD_OS_UNIX","","",null,null],[17,"MD_OS_MAC_OS_X","","",null,null],[17,"MD_OS_IOS","","",null,null],[17,"MD_OS_LINUX","","",null,null],[17,"MD_OS_SOLARIS","","",null,null],[17,"MD_OS_ANDROID","","",null,null],[17,"MD_OS_PS3","","",null,null],[17,"MD_OS_NACL","","",null,null],[17,"MD_MISCINFO_FLAGS1_PROCESS_ID","","",null,null],[17,"MD_MISCINFO_FLAGS1_PROCESS_TIMES","","",null,null],[17,"MD_MISCINFO_FLAGS1_PROCESSOR_POWER_INFO","","",null,null],[17,"MD_MISCINFO_FLAGS1_PROCESS_INTEGRITY","","",null,null],[17,"MD_MISCINFO_FLAGS1_PROCESS_EXECUTE_FLAGS","","",null,null],[17,"MD_MISCINFO_FLAGS1_TIMEZONE","","",null,null],[17,"MD_MISCINFO_FLAGS1_PROTECTED_PROCESS","","",null,null],[17,"MD_MISCINFO_FLAGS1_BUILDSTRING","","",null,null],[17,"MD_MEMORY_STATE_COMMIT","","",null,null],[17,"MD_MEMORY_STATE_RESERVE","","",null,null],[17,"MD_MEMORY_STATE_FREE","","",null,null],[17,"MD_MEMORY_PROTECT_NOACCESS","","",null,null],[17,"MD_MEMORY_PROTECT_READONLY","","",null,null],[17,"MD_MEMORY_PROTECT_READWRITE","","",null,null],[17,"MD_MEMORY_PROTECT_WRITECOPY","","",null,null],[17,"MD_MEMORY_PROTECT_EXECUTE","","",null,null],[17,"MD_MEMORY_PROTECT_EXECUTE_READ","","",null,null],[17,"MD_MEMORY_PROTECT_EXECUTE_READWRITE","","",null,null],[17,"MD_MEMORY_PROTECT_EXECUTE_WRITECOPY","","",null,null],[17,"MD_MEMORY_PROTECT_GUARD","","",null,null],[17,"MD_MEMORY_PROTECT_NOCACHE","","",null,null],[17,"MD_MEMORY_PROTECT_WRITECOMBINE","","",null,null],[17,"MD_MEMORY_TYPE_PRIVATE","","",null,null],[17,"MD_MEMORY_TYPE_MAPPED","","",null,null],[17,"MD_MEMORY_TYPE_IMAGE","","",null,null],[17,"MD_BREAKPAD_INFO_VALID_DUMP_THREAD_ID","","",null,null],[17,"MD_BREAKPAD_INFO_VALID_REQUESTING_THREAD_ID","","",null,null],[17,"MD_ASSERTION_INFO_TYPE_UNKNOWN","","",null,null],[17,"MD_ASSERTION_INFO_TYPE_INVALID_PARAMETER","","",null,null],[17,"MD_ASSERTION_INFO_TYPE_PURE_VIRTUAL_CALL","","",null,null],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",23,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",24,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",25,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",26,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",27,{"inputs":[],"output":{"name":"self"}}],[11,"flt_save","","",28,null],[11,"sse_registers","","",28,null],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",28,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",29,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",30,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",31,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",32,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",33,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",34,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",35,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",36,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",37,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",38,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",39,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",40,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",41,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",42,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",43,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",44,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",45,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",46,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",47,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",48,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",49,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",50,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",51,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",52,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",53,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",54,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",55,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",56,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",57,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",58,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",59,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",60,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",61,{"inputs":[],"output":{"name":"self"}}],[11,"x86_cpu_info","","",62,null],[11,"arm_cpu_info","","",62,null],[11,"other_cpu_info","","",62,null],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",62,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",63,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",64,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",65,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",66,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",67,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",68,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",69,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",70,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",71,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",72,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",73,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",74,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",75,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",76,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",77,{"inputs":[],"output":{"name":"self"}}],[11,"clone","minidump","",17,{"inputs":[{"name":"self"}],"output":{"name":"minidumprawcontext"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"minidumpcontextvalidity"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"minidumpcontextvalidity"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"minidumpcontextvalidity"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"minidumpcontext"}}],[11,"from_raw","","Return a MinidumpContext given a `MinidumpRawContext`.",3,{"inputs":[{"name":"minidumprawcontext"}],"output":{"name":"minidumpcontext"}}],[11,"read","","Read a `MinidumpContext` from a file.",3,{"inputs":[{"name":"t"},{"name":"mdlocationdescriptor"}],"output":{"name":"result"}}],[11,"get_instruction_pointer","","",3,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"get_stack_pointer","","",3,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"format_register","","",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"string"}}],[11,"general_purpose_registers","","",3,null],[11,"print","","Write a human-readable description of this `MinidumpContext` to `f`.",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"minidumpmodulelist"}}],[11,"new","","Create a `MinidumpModule` with some basic info.",7,{"inputs":[{"name":"u64"},{"name":"u32"},{"name":"str"}],"output":{"name":"minidumpmodule"}}],[11,"read","","",7,{"inputs":[{"name":"t"},{"name":"mdrawmodule"}],"output":{"name":"result"}}],[11,"print","","Write a human-readable description of this `MinidumpModule` to `f`.",7,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"minidumpmodule"}}],[11,"base_address","","",7,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"size","","",7,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"code_file","","",7,{"inputs":[{"name":"self"}],"output":{"name":"cow"}}],[11,"code_identifier","","",7,{"inputs":[{"name":"self"}],"output":{"name":"cow"}}],[11,"debug_file","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"debug_identifier","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"version","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"new","","Return an empty `MinidumpModuleList`.",78,{"inputs":[],"output":{"name":"minidumpmodulelist"}}],[11,"from_modules","","Create a `MinidumpModuleList` from a list of `MinidumpModule`s.",78,{"inputs":[{"name":"vec"}],"output":{"name":"minidumpmodulelist"}}],[11,"main_module","","Returns the module corresponding to the main executable.",78,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"module_at_address","","Return a `MinidumpModule` whose address range covers `addr`.",78,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"option"}}],[11,"iter","","Iterate over the modules in arbitrary order.",78,{"inputs":[{"name":"self"}],"output":{"name":"modules"}}],[11,"by_addr","","Iterate over the modules in order by memory address.",78,{"inputs":[{"name":"self"}],"output":{"name":"modules"}}],[11,"print","","Write a human-readable description of this `MinidumpModuleList` to `f`.",78,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"read","","",5,{"inputs":[{"name":"t"},{"name":"mdmemorydescriptor"}],"output":{"name":"result"}}],[11,"get_memory_at_address","","Get `mem::size_of::<T>()` bytes of memory at `addr` from this region.",5,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"option"}}],[11,"print","","Write a human-readable description of this `MinidumpMemory` to `f`.",5,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"print_contents","","Write the contents of this `MinidumpMemory` to `f` as a hex string.",5,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"new","","Return an empty `MinidumpMemoryList`.",79,{"inputs":[],"output":{"name":"minidumpmemorylist"}}],[11,"from_regions","","Create a `MinidumpMemoryList` from a list of `MinidumpMemory`s.",79,{"inputs":[{"name":"vec"}],"output":{"name":"minidumpmemorylist"}}],[11,"iter","","Iterate over the memory regions in the order contained in the minidump.",79,{"inputs":[{"name":"self"}],"output":{"name":"memoryregions"}}],[11,"by_addr","","Iterate over the memory regions in order by memory address.",79,{"inputs":[{"name":"self"}],"output":{"name":"memoryregions"}}],[11,"print","","Write a human-readable description of this `MinidumpMemoryList` to `f`.",79,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"print","","Write a human-readable description of this `MinidumpThread` to `f`.",9,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"get_thread","","Get the thread with id `id` from this thread list if it exists.",10,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"print","","Write a human-readable description of this `MinidumpThreadList` to `f`.",10,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"print","","Write a human-readable description of this `MinidumpSystemInfo` to `f`.",8,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"print","","Write a human-readable description of this `MinidumpMiscInfo` to `f`.",6,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"print","","Write a human-readable description of this `MinidumpBreakpadInfo` to `f`.",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"get_crash_address","","Get the crash address for an exception.",4,{"inputs":[{"name":"self"},{"name":"os"}],"output":{"name":"u64"}}],[11,"get_crash_reason","","Get the crash reason for an exception.",4,{"inputs":[{"name":"self"},{"name":"os"}],"output":{"name":"crashreason"}}],[11,"print","","Write a human-readable description of this `MinidumpException` to `f`.",4,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"read_path","","Read a `Minidump` from a `Path` to a file on disk.",1,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read","","Read a `Minidump` from a [`Readable`][readable].",1,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"get_stream","","Get a known stream of data from the minidump.",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"get_raw_stream","","Get a stream of raw data from the minidump.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"print","","Write a verbose description of the `Minidump` to `f`.",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"frametrust"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"callstackinfo"}],"output":{"name":"bool"}}],[11,"description","","Return a string describing how a stack frame was found by the stackwalker.",20,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from_context","","Create a `StackFrame` from a `MinidumpContext`.",13,{"inputs":[{"name":"minidumpcontext"},{"name":"frametrust"}],"output":{"name":"stackframe"}}],[11,"return_address","","Return the actual return address, as saved on the stack or in a register. See the comments for `StackFrame::instruction` for details.",13,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"get_instruction","","",13,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"set_function","","",13,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u64"}],"output":null}],[11,"set_source_file","","",13,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"u64"}],"output":null}],[11,"with_info","","Create a `CallStack` with `info` and no frames.",11,{"inputs":[{"name":"callstackinfo"}],"output":{"name":"callstack"}}],[11,"print","","Write a human-readable description of the call stack to `f`.",11,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"crashed","","`true` if the minidump was written in response to a process crash.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"print","","Write a human-readable description of the process state to `f`.",12,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"os"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"os"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"os"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"cpu"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"cpu"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"self"},{"name":"cpu"}],"output":{"name":"bool"}}],[11,"long_name","","Get a human-readable friendly name for an `OS`.",22,{"inputs":[{"name":"self"}],"output":{"name":"cow"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Readable","","Shorthand for Read + Seek",null,null]],"paths":[[8,"Module"],[3,"Minidump"],[3,"MinidumpBreakpadInfo"],[3,"MinidumpContext"],[3,"MinidumpException"],[3,"MinidumpMemory"],[3,"MinidumpMiscInfo"],[3,"MinidumpModule"],[3,"MinidumpSystemInfo"],[3,"MinidumpThread"],[3,"MinidumpThreadList"],[3,"CallStack"],[3,"ProcessState"],[3,"StackFrame"],[3,"SystemInfo"],[4,"Error"],[4,"MinidumpContextValidity"],[4,"MinidumpRawContext"],[4,"ProcessError"],[4,"CallStackInfo"],[4,"FrameTrust"],[4,"CPU"],[4,"OS"],[3,"Struct_Unnamed1"],[3,"Struct_Unnamed2"],[3,"Struct_Unnamed3"],[3,"Struct_Unnamed4"],[3,"Struct_Unnamed5"],[3,"Struct_Unnamed6"],[3,"Struct_Unnamed7"],[3,"Struct_Unnamed8"],[3,"Struct_Unnamed9"],[3,"Struct_Unnamed10"],[3,"Struct_Unnamed11"],[3,"Struct_Unnamed12"],[3,"Struct_Unnamed13"],[3,"Struct_Unnamed14"],[3,"Struct_Unnamed15"],[3,"Struct_Unnamed16"],[3,"Struct_Unnamed17"],[3,"Struct_Unnamed18"],[3,"Struct_Unnamed19"],[3,"Struct_Unnamed20"],[3,"Struct_Unnamed21"],[3,"Struct_Unnamed22"],[3,"Struct_Unnamed23"],[3,"Struct_Unnamed24"],[3,"Struct_Unnamed25"],[3,"Struct_Unnamed27"],[3,"Struct_Unnamed29"],[3,"Struct_Unnamed30"],[3,"Struct_Unnamed31"],[3,"Struct_Unnamed32"],[3,"Struct_Unnamed33"],[3,"Struct_Unnamed34"],[3,"Struct_Unnamed35"],[3,"Struct_Unnamed36"],[3,"Struct_Unnamed37"],[3,"Struct_Unnamed38"],[3,"Struct_Unnamed39"],[3,"Struct_Unnamed40"],[3,"Struct_Unnamed50"],[3,"Union_Unnamed51"],[3,"Struct_Unnamed52"],[3,"Struct_Unnamed53"],[3,"Struct_Unnamed54"],[3,"Struct_Unnamed56"],[3,"Struct_Unnamed59"],[3,"Struct_Unnamed60"],[3,"MDRawMiscInfo"],[3,"Struct_Unnamed63"],[3,"Struct_Unnamed64"],[3,"Struct_Unnamed68"],[3,"Struct_Unnamed70"],[3,"Struct_Unnamed72"],[3,"Struct_Unnamed73"],[3,"Struct_Unnamed74"],[3,"Struct_Unnamed75"],[3,"MinidumpModuleList"],[3,"MinidumpMemoryList"]]};
searchIndex["minidump_dump"] = {"doc":"","items":[],"paths":[]};
searchIndex["minidump_stackwalk"] = {"doc":"","items":[],"paths":[]};
searchIndex["nom"] = {"doc":"nom, eating data byte by byte","items":[[3,"ProducerRepeat","nom","ProducerRepeat takes a single value, and generates it at each step",null,null],[3,"MemProducer","","A MemProducer generates values from an in memory byte buffer",null,null],[3,"FileProducer","","",null,null],[3,"MapConsumer","","MapConsumer takes a function S -> T and applies it on a consumer producing values of type S",null,null],[3,"ChainConsumer","","ChainConsumer takes a consumer C1 R -> S, and a consumer C2 S -> T, and makes a consumer R -> T by applying C2 on C1's result",null,null],[4,"ErrorKind","","indicates which parser returned an error",null,null],[13,"Custom","","",0,null],[13,"Tag","","",0,null],[13,"MapRes","","",0,null],[13,"MapOpt","","",0,null],[13,"Alt","","",0,null],[13,"IsNot","","",0,null],[13,"IsA","","",0,null],[13,"SeparatedList","","",0,null],[13,"SeparatedNonEmptyList","","",0,null],[13,"Many0","","",0,null],[13,"Many1","","",0,null],[13,"Count","","",0,null],[13,"TakeUntilAndConsume","","",0,null],[13,"TakeUntil","","",0,null],[13,"TakeUntilEitherAndConsume","","",0,null],[13,"TakeUntilEither","","",0,null],[13,"LengthValue","","",0,null],[13,"TagClosure","","",0,null],[13,"Alpha","","",0,null],[13,"Digit","","",0,null],[13,"HexDigit","","",0,null],[13,"OctDigit","","",0,null],[13,"AlphaNumeric","","",0,null],[13,"Space","","",0,null],[13,"MultiSpace","","",0,null],[13,"LengthValueFn","","",0,null],[13,"Eof","","",0,null],[13,"ExprOpt","","",0,null],[13,"ExprRes","","",0,null],[13,"CondReduce","","",0,null],[13,"Switch","","",0,null],[13,"TagBits","","",0,null],[13,"OneOf","","",0,null],[13,"NoneOf","","",0,null],[13,"Char","","",0,null],[13,"CrLf","","",0,null],[13,"RegexpMatch","","",0,null],[13,"RegexpMatches","","",0,null],[13,"RegexpFind","","",0,null],[13,"RegexpCapture","","",0,null],[13,"RegexpCaptures","","",0,null],[13,"TakeWhile1","","",0,null],[13,"Complete","","",0,null],[13,"Fix","","",0,null],[13,"Escaped","","",0,null],[13,"EscapedTransform","","",0,null],[13,"TagStr","","",0,null],[13,"IsNotStr","","",0,null],[13,"IsAStr","","",0,null],[13,"TakeWhile1Str","","",0,null],[13,"NonEmpty","","",0,null],[13,"ManyMN","","",0,null],[13,"TakeUntilAndConsumeStr","","",0,null],[13,"TakeUntilStr","","",0,null],[13,"Not","","",0,null],[4,"Err","","Contains the error that a parser can return",null,null],[13,"Code","","An error code, represented by an ErrorKind, which can contain a custom error code represented by E",1,null],[13,"Node","","An error code, and the next error",1,null],[13,"Position","","An error code, and the input position",1,null],[13,"NodePosition","","An error code, the input position and the next error",1,null],[4,"Needed","","Contains information on needed data if a parser returned `Incomplete`",null,null],[13,"Unknown","","needs more data, but we do not know how much",2,null],[13,"Size","","contains the required data size",2,null],[4,"IResult","","Holds the result of parsing functions",null,null],[13,"Done","","indicates a correct parsing, the first field containing the rest of the unparsed data, the second field contains the parsed data",3,null],[13,"Error","","contains a Err, an enum that can indicate an error code, a position in the input, and a pointer to another error, making a list of errors in the parsing tree",3,null],[13,"Incomplete","","Incomplete contains a Needed, an enum than can represent a known quantity of input data, or unknown",3,null],[4,"Input","","",null,null],[13,"Element","","",4,null],[13,"Empty","","",4,null],[13,"Eof","","",4,null],[4,"ConsumerState","","Stores a consumer's current computation state",null,null],[13,"Done","","A value of type O has been produced",5,null],[13,"Error","","An error of type E has been encountered",5,null],[13,"Continue","","Continue applying, and pass a message of type M to the data source",5,null],[4,"Move","","",null,null],[13,"Consume","","indcates how much data was consumed",6,null],[13,"Seek","","indicates where in the input the consumer must seek",6,null],[13,"Await","","indicates more data is needed",6,null],[4,"FileProducerState","","",null,null],[13,"Normal","","",7,null],[13,"Error","","",7,null],[13,"Eof","","",7,null],[5,"error_to_list","","",null,{"inputs":[{"name":"err"}],"output":{"name":"vec"}}],[5,"compare_error_paths","","",null,{"inputs":[{"name":"err"},{"name":"err"}],"output":{"name":"bool"}}],[5,"add_error_pattern","","",null,{"inputs":[{"name":"hashmap"},{"name":"iresult"},{"name":"str"}],"output":{"name":"bool"}}],[5,"slice_to_offsets","","",null,null],[5,"prepare_errors","","",null,null],[5,"print_error","","",null,null],[5,"generate_colors","","",null,null],[5,"code_from_offset","","",null,null],[5,"reset_color","","",null,{"inputs":[{"name":"vec"}],"output":null}],[5,"write_color","","",null,{"inputs":[{"name":"vec"},{"name":"u8"}],"output":null}],[5,"print_codes","","",null,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"string"}}],[5,"print_offsets","","",null,null],[5,"error_to_u32","","",null,{"inputs":[{"name":"errorkind"}],"output":{"name":"u32"}}],[5,"tag_cl","","",null,null],[5,"print","","",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"begin","","",null,null],[5,"not_line_ending","","",null,null],[5,"line_ending","","Recognizes a line feed",null,null],[5,"is_alphabetic","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_digit","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_hex_digit","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_oct_digit","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_alphanumeric","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_space","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"alpha","","Recognizes lowercase and uppercase alphabetic characters: a-zA-Z",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"digit","","Recognizes numerical characters: 0-9",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"hex_digit","","Recognizes hexadecimal numerical characters: 0-9, A-F, a-f",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"oct_digit","","Recognizes octal characters: 0-7",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"alphanumeric","","Recognizes numerical and alphabetic characters: 0-9a-zA-Z",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"space","","Recognizes spaces and tabs",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"multispace","","Recognizes spaces, tabs, carriage returns and line feeds",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"sized_buffer","","",null,null],[5,"length_value","","",null,null],[5,"be_u8","","Recognizes an unsigned 1 byte integer (equivalent to take!(1)",null,null],[5,"be_u16","","Recognizes big endian unsigned 2 bytes integer",null,null],[5,"be_u32","","Recognizes big endian unsigned 4 bytes integer",null,null],[5,"be_u64","","Recognizes big endian unsigned 8 bytes integer",null,null],[5,"be_i8","","Recognizes a signed 1 byte integer (equivalent to take!(1)",null,null],[5,"be_i16","","Recognizes big endian signed 2 bytes integer",null,null],[5,"be_i32","","Recognizes big endian signed 4 bytes integer",null,null],[5,"be_i64","","Recognizes big endian signed 8 bytes integer",null,null],[5,"le_u8","","Recognizes an unsigned 1 byte integer (equivalent to take!(1)",null,null],[5,"le_u16","","Recognizes little endian unsigned 2 bytes integer",null,null],[5,"le_u32","","Recognizes little endian unsigned 4 bytes integer",null,null],[5,"le_u64","","Recognizes little endian unsigned 8 bytes integer",null,null],[5,"le_i8","","Recognizes a signed 1 byte integer (equivalent to take!(1)",null,null],[5,"le_i16","","Recognizes little endian signed 2 bytes integer",null,null],[5,"le_i32","","Recognizes little endian signed 4 bytes integer",null,null],[5,"le_i64","","Recognizes little endian signed 8 bytes integer",null,null],[5,"be_f32","","Recognizes big endian 4 bytes floating point number",null,null],[5,"be_f64","","Recognizes big endian 8 bytes floating point number",null,null],[5,"le_f32","","Recognizes little endian 4 bytes floating point number",null,null],[5,"le_f64","","Recognizes little endian 8 bytes floating point number",null,null],[5,"hex_u32","","Recognizes a hex-encoded integer",null,null],[5,"eof","","Recognizes empty input buffers",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"non_empty","","Recognizes non empty buffers",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"rest","","Return the remaining input.",null,null],[5,"rest_s","","Return the remaining input, for strings.",null,{"inputs":[{"name":"str"}],"output":{"name":"iresult"}}],[5,"newline","","",null,null],[5,"crlf","","",null,null],[5,"eol","","",null,null],[5,"tab","","",null,null],[5,"anychar","","",null,null],[5,"shift","","",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"err"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"err"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"err"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"needed"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"needed"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"needed"}}],[11,"is_known","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"map","","Maps a `Needed` to `Needed` by appling a function to a contained `Size` value.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"needed"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"iresult"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"iresult"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"iresult"}}],[11,"is_done","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_err","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_incomplete","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"map","","Maps a `IResult<I, O, E>` to `IResult<I, N, E>` by appling a function to a contained `Done` value, leaving `Error` and `Incomplete` value untouched.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"iresult"}}],[11,"map_inc","","Maps a `IResult<I, O, E>` to `IResult<I, O, E>` by appling a function to a contained `Incomplete` value, leaving `Done` and `Error` value untouched.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"iresult"}}],[11,"map_err","","Maps a `IResult<I, O, E>` to `IResult<I, O, N>` by appling a function to a contained `Error` value, leaving `Done` and `Incomplete` value untouched.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"iresult"}}],[11,"unwrap","","Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not `Done`.",3,null],[11,"unwrap_inc","","Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not `Done`.",3,{"inputs":[{"name":"self"}],"output":{"name":"needed"}}],[11,"unwrap_err","","Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not `Done`.",3,{"inputs":[{"name":"self"}],"output":{"name":"err"}}],[11,"remaining_input","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"remaining_input","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"remaining_input","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"output","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"output","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"output","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"input"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"consumerstate"}}],[11,"map","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"consumerstate"}}],[11,"flat_map","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"consumerstate"}}],[11,"apply","","",8,{"inputs":[{"name":"self"},{"name":"consumer"}],"output":{"name":"consumerstate"}}],[11,"new","","",9,null],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"move"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"move"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"move"}],"output":{"name":"bool"}}],[11,"apply","","",9,{"inputs":[{"name":"self"},{"name":"consumer"}],"output":{"name":"consumerstate"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"fileproducerstate"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"fileproducerstate"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",10,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[11,"state","","",10,{"inputs":[{"name":"self"}],"output":{"name":"fileproducerstate"}}],[11,"refill","","",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"resize","","Resize the internal buffer, copy the data to the new one and returned how much data was copied",10,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"apply","","",10,{"inputs":[{"name":"self"},{"name":"consumer"}],"output":{"name":"consumerstate"}}],[11,"new","","",11,{"inputs":[{"name":"c"},{"name":"f"}],"output":{"name":"mapconsumer"}}],[11,"handle","","",11,{"inputs":[{"name":"self"},{"name":"input"}],"output":{"name":"consumerstate"}}],[11,"state","","",11,{"inputs":[{"name":"self"}],"output":{"name":"consumerstate"}}],[11,"new","","",12,{"inputs":[{"name":"c1"},{"name":"c2"}],"output":{"name":"chainconsumer"}}],[11,"handle","","",12,{"inputs":[{"name":"self"},{"name":"input"}],"output":{"name":"consumerstate"}}],[11,"state","","",12,{"inputs":[{"name":"self"}],"output":{"name":"consumerstate"}}],[8,"HexDisplay","","useful functions to calculate the offset between slices and show a hexdump of a slice",null,null],[10,"offset","","offset between the first byte of self and the first byte of the argument",13,null],[10,"to_hex","","Converts the value of `self` to a hex dump, returning the owned string.",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"string"}}],[10,"to_hex_from","","Converts the value of `self` to a hex dump beginning at `from` address, returning the owned string.",13,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"string"}}],[8,"InputLength","","",null,null],[10,"input_len","","",14,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[8,"AsChar","","",null,null],[10,"as_char","","",15,{"inputs":[{"name":"self"}],"output":{"name":"char"}}],[10,"is_alpha","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_alphanum","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_0_to_9","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_hex_digit","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_oct_digit","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"IterIndices","","",null,null],[16,"Item","","",16,null],[16,"Iter","","",16,null],[10,"iter_indices","","",16,null],[8,"AsBytes","","",null,null],[10,"as_bytes","","",17,null],[8,"GetInput","","",null,null],[10,"remaining_input","","",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"GetOutput","","",null,null],[10,"output","","",19,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"Consumer","","The Consumer trait wraps a computation and its state",null,null],[10,"handle","","implement handle for the current computation, returning the new state of the consumer",20,{"inputs":[{"name":"self"},{"name":"input"}],"output":{"name":"consumerstate"}}],[10,"state","","returns the current state",20,{"inputs":[{"name":"self"}],"output":{"name":"consumerstate"}}],[8,"Producer","","The producer wraps a data source, like file or network, and applies a consumer on it",null,null],[10,"apply","","Applies a consumer once on the produced data, and return the consumer's state",21,{"inputs":[{"name":"self"},{"name":"consumer"}],"output":{"name":"consumerstate"}}],[11,"run","","Applies a consumer once on the produced data, and returns the generated value if there is one",21,{"inputs":[{"name":"self"},{"name":"consumer"}],"output":{"name":"option"}}],[14,"dbg","","Prints a message if the parser fails",null,null],[14,"dbg_dmp","","Prints a message and the input if the parser fails",null,null],[14,"closure","","Wraps a parser in a closure",null,null],[14,"named","","Makes a function from a parser combination",null,null],[14,"call","","Used to wrap common expressions and function as macros",null,null],[14,"apply","","emulate function currying: `apply!(my_function, arg1, arg2, ...)` becomes `my_function(input, arg1, arg2, ...)`",null,null],[14,"error","","Prevents backtracking if the child parser fails",null,null],[14,"add_error","","Add an error if the child parser fails",null,null],[14,"fix_error","","translate parser result from IResult<I,O,u32> to IResult<I,O,E> with a custom type",null,null],[14,"complete","","replaces a `Incomplete` returned by the child parser with an `Error`",null,null],[14,"try_parse","","A bit like `std::try!`, this macro will return the remaining input and parsed value if the child parser returned `Done`, and will do an early return for `Error` and `Incomplete` this can provide more flexibility than `chain!` if needed",null,null],[14,"flat_map","","`flat_map!(R -> IResult<R,S>, S -> IResult<S,T>) => R -> IResult<R, T>`",null,null],[14,"map","","`map!(I -> IResult<I,O>, O -> P) => I -> IResult<I, P>` maps a function on the result of a parser",null,null],[14,"map_res","","`map_res!(I -> IResult<I,O>, O -> Result<P>) => I -> IResult<I, P>` maps a function returning a Result on the output of a parser",null,null],[14,"map_opt","","`map_opt!(I -> IResult<I,O>, O -> Option<P>) => I -> IResult<I, P>` maps a function returning an Option on the output of a parser",null,null],[14,"value","","`value!(T, R -> IResult<R, S> ) => R -> IResult<R, T>`",null,null],[14,"expr_res","","`expr_res!(Result<E,O>) => I -> IResult<I, O>` evaluate an expression that returns a Result<T,E> and returns a IResult::Done(I,T) if Ok",null,null],[14,"expr_opt","","`expr_opt!(Option<O>) => I -> IResult<I, O>` evaluate an expression that returns a Option and returns a IResult::Done(I,T) if Some",null,null],[14,"chain","","`chain!(I->IResult<I,A> ~ I->IResult<I,B> ~ ... I->IResult<I,X> , || { return O } ) => I -> IResult<I, O>` chains parsers and assemble the results through a closure",null,null],[14,"tuple","","`tuple!(I->IResult<I,A>, I->IResult<I,B>, ... I->IResult<I,X>) => I -> IResult<I, (A, B, ..., X)>` chains parsers and assemble the sub results in a tuple.",null,null],[14,"alt","","`alt!(I -> IResult<I,O> | I -> IResult<I,O> | ... | I -> IResult<I,O> ) => I -> IResult<I, O>` try a list of parsers, return the result of the first successful one",null,null],[14,"alt_complete","","This is a combination of the `alt!` and `complete!` combinators. Rather than returning `Incomplete` on partial input, `alt_complete!` will try the next alternative in the chain. You should use this only if you know you will not receive partial input for the rules you're trying to match (this is almost always the case for parsing programming languages).",null,null],[14,"switch","","`switch!(I -> IResult<I,P>, P => I -> IResult<I,O> | ... | P => I -> IResult<I,O> ) => I -> IResult<I, O>` choose the next parser depending on the result of the first one, if successful, and returns the result of the second parser",null,null],[14,"opt","","`opt!(I -> IResult<I,O>) => I -> IResult<I, Option<O>>` make the underlying parser optional",null,null],[14,"opt_res","","`opt_res!(I -> IResult<I,O>) => I -> IResult<I, Result<nom::Err,O>>` make the underlying parser optional",null,null],[14,"cond_with_error","","`cond_with_error!(bool, I -> IResult<I,O>) => I -> IResult<I, Option<O>>` Conditional combinator",null,null],[14,"cond","","`cond!(bool, I -> IResult<I,O>) => I -> IResult<I, Option<O>>` Conditional combinator",null,null],[14,"cond_reduce","","`cond_reduce!(bool, I -> IResult<I,O>) => I -> IResult<I, O>` Conditional combinator with error",null,null],[14,"peek","","`peek!(I -> IResult<I,O>) => I -> IResult<I, O>` returns a result without consuming the input",null,null],[14,"not","","`not!(I -> IResult<I,0>) => I -> IResult<I, O>` returns a result only if the embedded parser returns Error or Incomplete does not consume the input",null,null],[14,"tap","","`tap!(name: I -> IResult<I,O> => { block }) => I -> IResult<I, O>` allows access to the parser's result without affecting it",null,null],[14,"pair","","`pair!(I -> IResult<I,O>, I -> IResult<I,P>) => I -> IResult<I, (O,P)>` pair(X,Y), returns (x,y)",null,null],[14,"separated_pair","","`separated_pair!(I -> IResult<I,O>, I -> IResult<I, T>, I -> IResult<I,P>) => I -> IResult<I, (O,P)>` separated_pair(X,sep,Y) returns (x,y)",null,null],[14,"preceded","","`preceded!(I -> IResult<I,T>, I -> IResult<I,O>) => I -> IResult<I, O>` preceded(opening, X) returns X",null,null],[14,"terminated","","`terminated!(I -> IResult<I,O>, I -> IResult<I,T>) => I -> IResult<I, O>` terminated(X, closing) returns X",null,null],[14,"delimited","","`delimited!(I -> IResult<I,T>, I -> IResult<I,O>, I -> IResult<I,U>) => I -> IResult<I, O>` delimited(opening, X, closing) returns X",null,null],[14,"separated_list","","`separated_list!(I -> IResult<I,T>, I -> IResult<I,O>) => I -> IResult<I, Vec<O>>` separated_list(sep, X) returns Vec",null,null],[14,"separated_nonempty_list","","`separated_nonempty_list!(I -> IResult<I,T>, I -> IResult<I,O>) => I -> IResult<I, Vec<O>>` separated_nonempty_list(sep, X) returns Vec",null,null],[14,"many0","","`many0!(I -> IResult<I,O>) => I -> IResult<I, Vec<O>>` Applies the parser 0 or more times and returns the list of results in a Vec",null,null],[14,"many1","","`many1!(I -> IResult<I,O>) => I -> IResult<I, Vec<O>>` Applies the parser 1 or more times and returns the list of results in a Vec",null,null],[14,"many_m_n","","`many_m_n!(usize, usize, I -> IResult<I,O>) => I -> IResult<I, Vec<O>>` Applies the parser between m and n times (n included) and returns the list of results in a Vec",null,null],[14,"count","","`count!(I -> IResult<I,O>, nb) => I -> IResult<I, Vec<O>>` Applies the child parser a specified number of times",null,null],[14,"count_fixed","","`count_fixed!(O, I -> IResult<I,O>, nb) => I -> IResult<I, [O; nb]>` Applies the child parser a fixed number of times and returns a fixed size array The type must be specified and it must be `Copy`",null,null],[14,"length_value","","`length_value!(I -> IResult<I, nb>, I -> IResult<I,O>) => I -> IResult<I, Vec<O>>` gets a number from the first parser, then applies the second parser that many times",null,null],[14,"fold_many0","","`fold_many0!(I -> IResult<I,O>, R, Fn(R, O) -> R) => I -> IResult<I, R>` Applies the parser 0 or more times and folds the list of return values",null,null],[14,"fold_many1","","`fold_many1!(I -> IResult<I,O>, R, Fn(R, O) -> R) => I -> IResult<I, R>` Applies the parser 1 or more times and folds the list of return values",null,null],[14,"fold_many_m_n","","`fold_many_m_n!(usize, usize, I -> IResult<I,O>, R, Fn(R, O) -> R) => I -> IResult<I, R>` Applies the parser between m and n times (n included) and folds the list of return value",null,null],[14,"method","","Makes a method from a parser combination",null,null],[14,"call_m","","Used to called methods then move self back into self",null,null],[14,"apply_m","","emulate function currying for method calls on structs  `apply!(self.my_function, arg1, arg2, ...)` becomes `self.my_function(input, arg1, arg2, ...)`",null,null],[14,"recognize","","`recognize!(&[T] -> IResult<&[T], O> ) => &[T] -> IResult<&[T], &[T]>` if the child parser was successful, return the consumed input as produced value",null,null],[14,"tag","","`tag!(&[T]: nom::AsBytes) => &[T] -> IResult<&[T], &[T]>` declares a byte array as a suite to recognize",null,null],[14,"is_not","","`is_not!(&[T:AsBytes]) => &[T] -> IResult<&[T], &[T]>` returns the longest list of bytes that do not appear in the provided array",null,null],[14,"is_a","","`is_a!(&[T]) => &[T] -> IResult<&[T], &[T]>` returns the longest list of bytes that appear in the provided array",null,null],[14,"escaped","","`escaped!(&[T] -> IResult<&[T], &[T]>, T, &[T] -> IResult<&[T], &[T]>) => &[T] -> IResult<&[T], &[T]>` matches a byte string with escaped characters.",null,null],[14,"escaped_transform","","`escaped_transform!(&[T] -> IResult<&[T], &[T]>, T, &[T] -> IResult<&[T], &[T]>) => &[T] -> IResult<&[T], Vec<T>>` matches a byte string with escaped characters.",null,null],[14,"take_while","","`take_while!(T -> bool) => &[T] -> IResult<&[T], &[T]>` returns the longest list of bytes until the provided function fails.",null,null],[14,"take_while1","","`take_while1!(&[T] -> bool) => &[T] -> IResult<&[T], &[T]>` returns the longest (non empty) list of bytes until the provided function fails.",null,null],[14,"take_till","","`take_till!(T -> bool) => &[T] -> IResult<&[T], &[T]>` returns the longest list of bytes until the provided function succeeds",null,null],[14,"take","","`take!(nb) => &[T] -> IResult<&[T], &[T]>` generates a parser consuming the specified number of bytes",null,null],[14,"take_str","","`take!(nb) => &[T] -> IResult<&[T], &str>` same as take! but returning a &str",null,null],[14,"take_until_and_consume","","`take_until_and_consume!(tag) => &[T] -> IResult<&[T], &[T]>` generates a parser consuming bytes until the specified byte sequence is found, and consumes it",null,null],[14,"take_until","","`take_until!(tag) => &[T] -> IResult<&[T], &[T]>` consumes data until it finds the specified tag",null,null],[14,"take_until_either_and_consume","","`take_until_either_and_consume!(tag) => &[T] -> IResult<&[T], &[T]>` consumes data until it finds any of the specified characters, and consume it",null,null],[14,"take_until_either","","`take_until_either!(tag) => &[T] -> IResult<&[T], &[T]>`",null,null],[14,"length_bytes","","`length_bytes!(&[T] -> IResult<&[T], nb>) => &[T] -> IResult<&[T], &[T]> gets a number from the first parser, then extracts that many bytes from the remaining stream",null,null],[14,"bits","","`bits!( parser ) => ( &[u8], (&[u8], usize) -> IResult<(&[u8], usize), T> ) -> IResult<&[u8], T>` transforms its byte slice input into a bit stream for the underlying parsers",null,null],[14,"take_bits","","`take_bits!(type, nb) => ( (&[T], usize), U, usize) -> IResult<(&[T], usize), U>` generates a parser consuming the specified number of bits.",null,null],[14,"tag_bits","","matches an integer pattern to a bitstream. The number of bits of the input to compare must be specified",null,null],[14,"u16","","if parameter is true, parse a big endian u16 integer, otherwise a little endian u16 integer",null,null],[14,"u32","","if parameter is true, parse a big endian u32 integer, otherwise a little endian u32 integer",null,null],[14,"u64","","if parameter is true, parse a big endian u64 integer, otherwise a little endian u64 integer",null,null],[14,"i16","","if parameter is true, parse a big endian i16 integer, otherwise a little endian i16 integer",null,null],[14,"i32","","if parameter is true, parse a big endian i32 integer, otherwise a little endian i32 integer",null,null],[14,"i64","","if parameter is true, parse a big endian i64 integer, otherwise a little endian i64 integer",null,null],[14,"one_of","","matches one of the provided characters",null,null],[14,"none_of","","matches anything but the provided characters",null,null],[14,"char","","matches one character: `char!(char) => &[u8] -> IResult<&[u8], char>",null,null],[14,"consumer_from_parser","","",null,null],[14,"tag_s","","`tag_s!(&str) => &str -> IResult<&str, &str>` declares a string as a suite to recognize",null,null],[14,"take_s","","`take_s!(nb) => &str -> IResult<&str, &str>` generates a parser consuming the specified number of characters",null,null],[14,"is_not_s","","`is_not_s!(&str) => &str -> IResult<&str, &str>` returns the longest list of characters that do not appear in the provided array",null,null],[14,"is_a_s","","`is_a_s!(&str) => &str -> IResult<&str, &str>` returns the longest list of characters that appear in the provided array",null,null],[14,"take_while_s","","`take_while_s!(char -> bool) => &str -> IResult<&str, &str>` returns the longest list of characters until the provided function fails.",null,null],[14,"take_while1_s","","`take_while1_s!(char -> bool) => &str -> IResult<&str, &str>` returns the longest (non empty) list of characters until the provided function fails.",null,null],[14,"take_till_s","","`take_till_s!(&str -> bool) => &str -> IResult<&str, &str>` returns the longest list of characters until the provided function succeeds",null,null],[14,"take_until_and_consume_s","","`take_until_and_consume_s!(&str) => &str -> IResult<&str, &str>` generates a parser consuming all chars until the specified string is found and consumes it",null,null],[14,"take_until_s","","`take_until_s!(&str) => &str -> IResult<&str, &str>` generates a parser consuming all chars until the specified string is found and leaves it in the remaining input",null,null],[11,"run","","Applies a consumer once on the produced data, and returns the generated value if there is one",21,{"inputs":[{"name":"self"},{"name":"consumer"}],"output":{"name":"option"}}]],"paths":[[4,"ErrorKind"],[4,"Err"],[4,"Needed"],[4,"IResult"],[4,"Input"],[4,"ConsumerState"],[4,"Move"],[4,"FileProducerState"],[3,"ProducerRepeat"],[3,"MemProducer"],[3,"FileProducer"],[3,"MapConsumer"],[3,"ChainConsumer"],[8,"HexDisplay"],[8,"InputLength"],[8,"AsChar"],[8,"IterIndices"],[8,"AsBytes"],[8,"GetInput"],[8,"GetOutput"],[8,"Consumer"],[8,"Producer"]]};
searchIndex["num"] = {"doc":"A collection of numeric types and traits for Rust.","items":[[8,"Integer","num","",null,null],[10,"div_floor","","Floored integer division.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"mod_floor","","Floored integer modulo, satisfying:",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"gcd","","Greatest Common Divisor (GCD).",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"lcm","","Lowest Common Multiple (LCM).",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_even","","Returns `true` if the number is even.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_odd","","Returns `true` if the number is odd.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",0,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",0,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting at start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[8,"Num","","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",null,null],[16,"FromStrRadixErr","","",1,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",1,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",5,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",5,{"inputs":[],"output":{"name":"self"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",6,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",6,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on overflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",7,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",9,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",10,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",12,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",12,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",12,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",12,{"inputs":[{"name":"self"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and with newer versions of Rust `f64::NAN`.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error. This produces a more accurate result with better performance than a separate multiplication operation followed by an add.",12,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",12,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_degrees","","Converts radians to degrees.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_radians","","Converts degrees to radians.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",12,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`. The floating point encoding is documented in the [Reference][floating-point].",12,null],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"cast","","",null,null],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"pow","num","",null,null],[5,"pow","num::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[5,"checked_pow","num","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[5,"clamp","","A value bounded by a minimum and a maximum",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[0,"integer","","",null,null],[0,"iter","","",null,null],[0,"traits","","",null,null]],"paths":[[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"]]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","items":[[3,"IterBinomial","num_integer","An iterator over binomial coefficients.",null,null],[5,"div_rem","","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The result is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"binomial","","Calculate the binomial coefficient.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"multinomial","","Calculate the multinomial coefficient.",null,null],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"mod_floor","","Floored integer modulo, satisfying:",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"gcd","","Greatest Common Divisor (GCD).",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"lcm","","Lowest Common Multiple (LCM).",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_even","","Returns `true` if the number is even.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_odd","","Returns `true` if the number is odd.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",0,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",0,null],[11,"new","","For a given n, iterate over all binomial coefficients binomial(n, k), for k=0...n.",1,{"inputs":[{"name":"t"}],"output":{"name":"iterbinomial"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_iter"] = {"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting at start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"range"}}],[11,"next","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",0,null],[11,"next_back","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",1,null],[11,"next_back","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"rangestep"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"rangestepinclusive"}}],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[0,"identities","","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",5,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",5,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on overflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",6,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",7,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",9,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",10,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",11,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",13,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",13,{"inputs":[],"output":{"name":"self"}}],[0,"float","num_traits","",null,null],[8,"Float","num_traits::float","",null,null],[10,"nan","","Returns the `NaN` value.",14,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",14,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",14,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",14,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",14,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",14,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",14,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",14,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",14,{"inputs":[{"name":"self"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and with newer versions of Rust `f64::NAN`.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error. This produces a more accurate result with better performance than a separate multiplication operation followed by an add.",14,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",14,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_degrees","","Converts radians to degrees.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_radians","","Converts degrees to radians.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",14,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`. The floating point encoding is documented in the [Reference][floating-point].",14,null],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_PI","","Return `1.0 / π`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_PI","","Return `2.0 / π`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_2","","Return `π / 2.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_3","","Return `π / 3.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_4","","Return `π / 4.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_6","","Return `π / 6.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_8","","Return `π / 8.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"LN_10","","Return `ln(10.0)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"LN_2","","Return `ln(2.0)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"LOG10_E","","Return `log10(e)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"LOG2_E","","Return `log2(e)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"PI","","Return Archimedes’ constant.",15,{"inputs":[],"output":{"name":"self"}}],[10,"SQRT_2","","Return `sqrt(2.0)`.",15,{"inputs":[],"output":{"name":"self"}}],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",18,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",null,null],[16,"FromStrRadixErr","","",20,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",20,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric operations taking the second operand by reference.",null,null],[8,"RefNum","","The trait for references which implement numeric operations, taking the second operand either by value or by reference.",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment operators (like `+=`).",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment operators.",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement assignment operations taking the second operand by reference.",null,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"Bounded"],[8,"Float"],[8,"FloatConst"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"]]};
searchIndex["range_map"] = {"doc":"","items":[[3,"Range","range_map","A range of elements, including the endpoints.",null,null],[12,"start","","",0,null],[12,"end","","",0,null],[3,"RangeMap","","A set of characters. Optionally, each character in the set may be associated with some data.",null,null],[3,"PairIter","","",null,null],[3,"RangeSet","","A set of integers, implemented as a sorted list of (inclusive) ranges.",null,null],[3,"RangeIter","","",null,null],[3,"EltIter","","",null,null],[3,"RangeMultiMap","","A multi-valued mapping from primitive integers to other data.",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"range"}}],[11,"hash","","",0,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"range"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"range"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"range"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"range"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"range"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"range"}],"output":{"name":"ordering"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new range with the given start and endpoints (inclusive).",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"range"}}],[11,"full","","Creates a new range containing everything.",0,{"inputs":[],"output":{"name":"range"}}],[11,"single","","Creates a new range containing a single thing.",0,{"inputs":[{"name":"t"}],"output":{"name":"range"}}],[11,"contains","","Tests whether a given element belongs to this range.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"intersects","","Checks whether the intersections overlap.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"intersection","","Computes the intersection between two ranges. Returns none if the intersection is empty.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"cover","","Returns the smallest range that covers `self` and `other`.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"rangemap"}}],[11,"hash","","",1,null],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"rangemap"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"rangemap"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","Builds a `RangeMap` from an iterator over pairs. If any ranges overlap, they must map to the same value.",1,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"new","","Creates a new empty `RangeMap`.",1,{"inputs":[],"output":{"name":"rangemap"}}],[11,"from_sorted_vec","","Creates a `RangeMap` from a `Vec`, which must contain ranges in ascending order. If any ranges overlap, they must map to the same value.",1,{"inputs":[{"name":"vec"}],"output":{"name":"rangemap"}}],[11,"num_ranges","","Returns the number of mapped ranges.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Tests whether this map is empty.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_full","","Tests whether this `CharMap` maps every value.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"ranges_values","","Iterates over all the mapped ranges and values.",1,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"keys_values","","Iterates over all mappings.",1,{"inputs":[{"name":"self"}],"output":{"name":"pairiter"}}],[11,"get","","Finds the value that `x` maps to, if it exists.",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}],[11,"intersection","","Returns those mappings whose keys belong to the given set.",1,{"inputs":[{"name":"self"},{"name":"rangeset"}],"output":{"name":"rangemap"}}],[11,"num_keys","","Counts the number of mapped keys.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"to_range_set","","Returns the set of mapped chars, forgetting what they are mapped to.",1,{"inputs":[{"name":"self"}],"output":{"name":"rangeset"}}],[11,"map_values","","Modifies the values in place.",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"retain_values","","Modifies this map to contain only those mappings with values `v` satisfying `f(v)`.",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"as_mut_slice","","Returns a mutable view into this map.",1,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"pairiter"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"rangeset"}}],[11,"hash","","",3,null],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"rangeset"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"rangeset"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"rangeiter"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",4,null],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"rangeiter"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"rangeiter"}],"output":{"name":"bool"}}],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"eltiter"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","Builds a `RangeSet` from an iterator over `Range`s.",3,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"new","","Creates a new empty `RangeSet`.",3,{"inputs":[],"output":{"name":"rangeset"}}],[11,"is_empty","","Tests if this set is empty.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_full","","Tests whether this set contains every valid value of `T`.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"num_ranges","","Returns the number of ranges used to represent this set.",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"num_elements","","Returns the number of elements in the set.",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"ranges","","Returns an iterator over all ranges in this set.",3,{"inputs":[{"name":"self"}],"output":{"name":"rangeiter"}}],[11,"elements","","Returns an iterator over all elements in this set.",3,{"inputs":[{"name":"self"}],"output":{"name":"eltiter"}}],[11,"contains","","Checks if this set contains a value.",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"union","","Returns the union between `self` and `other`.",3,{"inputs":[{"name":"self"},{"name":"rangeset"}],"output":{"name":"rangeset"}}],[11,"full","","Creates a set that contains every value of `T`.",3,{"inputs":[],"output":{"name":"rangeset"}}],[11,"single","","Creates a set containing a single element.",3,{"inputs":[{"name":"t"}],"output":{"name":"rangeset"}}],[11,"except","","Creates a set containing all elements except the given ones.",3,{"inputs":[{"name":"i"}],"output":{"name":"rangeset"}}],[11,"intersection","","Finds the intersection between this set and `other`.",3,{"inputs":[{"name":"self"},{"name":"rangeset"}],"output":{"name":"rangeset"}}],[11,"negated","","Returns the set of all characters that are not in this set.",3,{"inputs":[{"name":"self"}],"output":{"name":"rangeset"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"rangemultimap"}}],[11,"hash","","",6,null],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"rangemultimap"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"rangemultimap"}],"output":{"name":"bool"}}],[11,"from_iter","","Builds a `RangeMultiMap` from an iterator over `Range` and values..",6,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new empty map.",6,{"inputs":[],"output":{"name":"rangemultimap"}}],[11,"num_ranges","","Returns the number of mapped ranges.",6,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the map is empty.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"insert","","Adds a new mapping from a range of characters to `value`.",6,{"inputs":[{"name":"self"},{"name":"range"},{"name":"v"}],"output":null}],[11,"from_vec","","Creates a map from a vector of pairs.",6,{"inputs":[{"name":"vec"}],"output":{"name":"rangemultimap"}}],[11,"intersection","","Returns a new `RangeMultiMap` containing only the mappings for keys that belong to the given set.",6,{"inputs":[{"name":"self"},{"name":"rangeset"}],"output":{"name":"rangemultimap"}}],[11,"map_values","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"retain_values","","Modifies this map in place to only contain mappings whose values `v` satisfy `f(v)`.",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"into_vec","","Returns the underlying `Vec`.",6,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"ranges_values","","Iterates over all the mapped ranges and values.",6,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"group","","Makes the ranges sorted and non-overlapping. The data associated with each range will be a `Vec<T>` instead of a single `T`.",6,{"inputs":[{"name":"self"}],"output":{"name":"rangemap"}}]],"paths":[[3,"Range"],[3,"RangeMap"],[3,"PairIter"],[3,"RangeSet"],[3,"RangeIter"],[3,"EltIter"],[3,"RangeMultiMap"]]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision. This also allows for the negative duration; see individual methods for details.",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library implementation",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where nanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month, day, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time value, including any adjustment for Daylight Saving Time. This is the number of seconds east of UTC. For example, for U.S. Pacific Daylight Time, the value is -76060 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 109 - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and nanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter in nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter in seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"weeks","","Makes a new `Duration` with given number of weeks. Equivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days. Equivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours. Equivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes. Equivalent to `Duration::seconds(minutes * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds. Panics when the duration is more than `i64::MAX` milliseconds or less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the closure.",4,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",4,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration, or `None` on overflow (exceeding 2^63 microseconds in either direction).",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration, or `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",4,{"inputs":[{"name":"stdduration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"neg","","",4,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[11,"add","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",4,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",4,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"div","","",4,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"outofrangeerror"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"outofrangeerror"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"outofrangeerror"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"ordering"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"new","","",0,{"inputs":[{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"timespec"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"timespec"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"duration"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"precisetime"}}],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of `self` to the value of `later`.",6,{"inputs":[{"name":"self"},{"name":"precisetime"}],"output":{"name":"duration"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"steadytime"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"cmp","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"ordering"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",7,{"inputs":[],"output":{"name":"steadytime"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sub","","",7,{"inputs":[{"name":"self"},{"name":"steadytime"}],"output":{"name":"duration"}}],[11,"sub","","",7,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"add","","",7,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",1,null],[11,"add","","The resulting Tm is in UTC.",1,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"tm"}}],[11,"sub","","The resulting Tm is in UTC.",1,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"tm"}}],[11,"sub","","",1,{"inputs":[{"name":"self"},{"name":"tm"}],"output":{"name":"duration"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"tm"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"tm"}],"output":{"name":"ordering"}}],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"to_local","","Convert time to the local timezone",1,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"to_utc","","Convert time to the UTC",1,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO C, in the local timezone.",1,{"inputs":[{"name":"self"}],"output":{"name":"tmfmt"}}],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO C.",1,{"inputs":[{"name":"self"}],"output":{"name":"tmfmt"}}],[11,"strftime","","Formats the time according to the format string.",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,{"inputs":[{"name":"self"}],"output":{"name":"tmfmt"}}],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,{"inputs":[{"name":"self"}],"output":{"name":"tmfmt"}}],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is compatible with ISO 8601.",1,{"inputs":[{"name":"self"}],"output":{"name":"tmfmt"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"parseerror"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"OutOfRangeError"],[3,"PreciseTime"],[3,"SteadyTime"]]};
initSearch(searchIndex);
