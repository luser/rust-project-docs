(function() {var implementors = {};
implementors["minidump_common"] = [{"text":"impl FromIterator&lt;ContextFlagsCpu&gt; for ContextFlagsCpu","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;ArmElfHwCaps&gt; for ArmElfHwCaps","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;MiscInfoFlags&gt; for MiscInfoFlags","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;MemoryState&gt; for MemoryState","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;MemoryProtection&gt; for MemoryProtection","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;MemoryType&gt; for MemoryType","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;BreakpadInfoValid&gt; for BreakpadInfoValid","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl FromIterator&lt;TokenTree&gt; for TokenStream","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;TokenStream&gt; for TokenStream","synthetic":false,"types":[]}];
implementors["range_map"] = [{"text":"impl&lt;T:&nbsp;Debug + PrimInt, V:&nbsp;Clone + Debug + Eq&gt; FromIterator&lt;(Range&lt;T&gt;, V)&gt; for RangeMap&lt;T, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug + PrimInt&gt; FromIterator&lt;Range&lt;T&gt;&gt; for RangeSet&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug + PrimInt, V:&nbsp;Clone + Debug + PartialEq&gt; FromIterator&lt;(Range&lt;T&gt;, V)&gt; for RangeMultiMap&lt;T, V&gt;","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl&lt;T, P&gt; FromIterator&lt;T&gt; for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; FromIterator&lt;Pair&lt;T, P&gt;&gt; for Punctuated&lt;T, P&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()